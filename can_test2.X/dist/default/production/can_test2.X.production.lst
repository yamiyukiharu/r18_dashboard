

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Oct 01 18:14:00 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 1.42
    47                           ; Generated 13/04/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F45K80 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	nvCOMRAM
    82  00002F                     __pnvCOMRAM:
    83                           	opt stack 0
    84  00002F                     _IOCB4_InterruptHandler:
    85                           	opt stack 0
    86  00002F                     	ds	2
    87  0000                     _BRGCON3	set	3653
    88  0000                     _BRGCON2	set	3652
    89  0000                     _BRGCON1	set	3651
    90  0000                     _RXF5SIDL	set	3829
    91  0000                     _RXF5SIDH	set	3828
    92  0000                     _RXF5EIDL	set	3831
    93  0000                     _RXF5EIDH	set	3830
    94  0000                     _RXF4SIDL	set	3825
    95  0000                     _RXF4SIDH	set	3824
    96  0000                     _RXF4EIDL	set	3827
    97  0000                     _RXF4EIDH	set	3826
    98  0000                     _RXF3SIDL	set	3821
    99  0000                     _RXF3SIDH	set	3820
   100  0000                     _RXF3EIDL	set	3823
   101  0000                     _RXF3EIDH	set	3822
   102  0000                     _RXF2SIDL	set	3817
   103  0000                     _RXF2SIDH	set	3816
   104  0000                     _RXF2EIDL	set	3819
   105  0000                     _RXF2EIDH	set	3818
   106  0000                     _RXF1SIDL	set	3813
   107  0000                     _RXF1SIDH	set	3812
   108  0000                     _RXF1EIDL	set	3815
   109  0000                     _RXF1EIDH	set	3814
   110  0000                     _RXF0SIDL	set	3809
   111  0000                     _RXF0SIDH	set	3808
   112  0000                     _RXF0EIDL	set	3811
   113  0000                     _RXF0EIDH	set	3810
   114  0000                     _RXM1SIDL	set	3837
   115  0000                     _RXM1SIDH	set	3836
   116  0000                     _RXM1EIDL	set	3839
   117  0000                     _RXM1EIDH	set	3838
   118  0000                     _RXM0SIDL	set	3833
   119  0000                     _RXM0SIDH	set	3832
   120  0000                     _RXM0EIDL	set	3835
   121  0000                     _RXM0EIDH	set	3834
   122  0000                     _IOCBbits	set	3930
   123  0000                     _WPUB	set	3931
   124  0000                     _ANCON1	set	3932
   125  0000                     _ANCON0	set	3933
   126  0000                     _RXB1D7	set	3901
   127  0000                     _RXB1D6	set	3900
   128  0000                     _RXB1D5	set	3899
   129  0000                     _RXB1D4	set	3898
   130  0000                     _RXB1D3	set	3897
   131  0000                     _RXB1D2	set	3896
   132  0000                     _RXB1D1	set	3895
   133  0000                     _RXB1D0	set	3894
   134  0000                     _RXB1DLC	set	3893
   135  0000                     _RXB1SIDH	set	3889
   136  0000                     _RXB1EIDL	set	3892
   137  0000                     _RXB1EIDH	set	3891
   138  0000                     _RXB1SIDL	set	3890
   139  0000                     _RXB1CONbits	set	3888
   140  0000                     _TXB2D7	set	3853
   141  0000                     _TXB2D6	set	3852
   142  0000                     _TXB2D5	set	3851
   143  0000                     _TXB2D4	set	3850
   144  0000                     _TXB2D3	set	3849
   145  0000                     _TXB2D2	set	3848
   146  0000                     _TXB2D1	set	3847
   147  0000                     _TXB2D0	set	3846
   148  0000                     _TXB2DLC	set	3845
   149  0000                     _TXB2SIDL	set	3842
   150  0000                     _TXB2SIDH	set	3841
   151  0000                     _TXB2EIDL	set	3844
   152  0000                     _TXB2EIDH	set	3843
   153  0000                     _TXB2CONbits	set	3840
   154  0000                     _TXB1D7	set	3869
   155  0000                     _TXB1D6	set	3868
   156  0000                     _TXB1D5	set	3867
   157  0000                     _TXB1D4	set	3866
   158  0000                     _TXB1D3	set	3865
   159  0000                     _TXB1D2	set	3864
   160  0000                     _TXB1D1	set	3863
   161  0000                     _TXB1D0	set	3862
   162  0000                     _TXB1DLC	set	3861
   163  0000                     _TXB1SIDL	set	3858
   164  0000                     _TXB1SIDH	set	3857
   165  0000                     _TXB1EIDL	set	3860
   166  0000                     _TXB1EIDH	set	3859
   167  0000                     _TXB1CONbits	set	3856
   168  0000                     _TXB0D7	set	3885
   169  0000                     _TXB0D6	set	3884
   170  0000                     _TXB0D5	set	3883
   171  0000                     _TXB0D4	set	3882
   172  0000                     _TXB0D3	set	3881
   173  0000                     _TXB0D2	set	3880
   174  0000                     _TXB0D1	set	3879
   175  0000                     _TXB0D0	set	3878
   176  0000                     _TXB0DLC	set	3877
   177  0000                     _TXB0SIDL	set	3874
   178  0000                     _TXB0SIDH	set	3873
   179  0000                     _TXB0EIDL	set	3876
   180  0000                     _TXB0EIDH	set	3875
   181  0000                     _TXB0CONbits	set	3872
   182  0000                     _LATCbits	set	3979
   183  0000                     _LATDbits	set	3980
   184  0000                     _LATAbits	set	3977
   185  0000                     _CIOCONbits	set	3952
   186  0000                     _RCONbits	set	4048
   187  0000                     _TXREG2	set	3961
   188  0000                     _RCREG2	set	3962
   189  0000                     _RCSTA2bits	set	4006
   190  0000                     _PIR3bits	set	4004
   191  0000                     _SPBRGH2	set	3964
   192  0000                     _SPBRG2	set	3963
   193  0000                     _TXSTA2	set	4026
   194  0000                     _RCSTA2	set	4006
   195  0000                     _BAUDCON2	set	4025
   196  0000                     _TXREG1	set	4013
   197  0000                     _RCREG1	set	4014
   198  0000                     _RCSTA1bits	set	4011
   199  0000                     _PIR1bits	set	3998
   200  0000                     _SPBRGH1	set	3965
   201  0000                     _SPBRG1	set	4015
   202  0000                     _TXSTA1	set	4012
   203  0000                     _RCSTA1	set	4011
   204  0000                     _BAUDCON1	set	4007
   205  0000                     _SSPSTATbits	set	4039
   206  0000                     _SSPBUF	set	4041
   207  0000                     _SSPCON1bits	set	4038
   208  0000                     _SSPADD	set	4040
   209  0000                     _SSPCON1	set	4038
   210  0000                     _SSPSTAT	set	4039
   211  0000                     _INTCONbits	set	4082
   212  0000                     _TRISD	set	3989
   213  0000                     _TRISC	set	3988
   214  0000                     _TRISB	set	3987
   215  0000                     _TRISA	set	3986
   216  0000                     _TRISE	set	3990
   217  0000                     _LATC	set	3979
   218  0000                     _LATB	set	3978
   219  0000                     _LATA	set	3977
   220  0000                     _LATD	set	3980
   221  0000                     _LATE	set	3981
   222  0000                     _COMSTATbits	set	3953
   223  0000                     _RXB0D7	set	3949
   224  0000                     _RXB0D6	set	3948
   225  0000                     _RXB0D5	set	3947
   226  0000                     _RXB0D4	set	3946
   227  0000                     _RXB0D3	set	3945
   228  0000                     _RXB0D2	set	3944
   229  0000                     _RXB0D1	set	3943
   230  0000                     _RXB0D0	set	3942
   231  0000                     _RXB0DLC	set	3941
   232  0000                     _RXB0SIDH	set	3937
   233  0000                     _RXB0EIDL	set	3940
   234  0000                     _RXB0EIDH	set	3939
   235  0000                     _RXB0SIDL	set	3938
   236  0000                     _RXB0CONbits	set	3936
   237  0000                     _PIE5bits	set	3958
   238  0000                     _PIR5bits	set	3959
   239  0000                     _ECANCON	set	3954
   240  0000                     _CANSTAT	set	3950
   241  0000                     _CANCON	set	3951
   242  0000                     _REFOCON	set	3994
   243  0000                     _OSCTUNE	set	3995
   244  0000                     _OSCCON2	set	4050
   245  0000                     _OSCCON	set	4051
   246                           
   247                           	psect	smallconst
   248  000F00                     __psmallconst:
   249                           	opt stack 0
   250  000F00  00                 	db	0
   251  000F01                     STR_9:
   252  000F01  53                 	db	83	;'S'
   253  000F02  50                 	db	80	;'P'
   254  000F03  45                 	db	69	;'E'
   255  000F04  45                 	db	69	;'E'
   256  000F05  44                 	db	68	;'D'
   257  000F06  00                 	db	0
   258  000F07                     STR_1:
   259  000F07  57                 	db	87	;'W'
   260  000F08  41                 	db	65	;'A'
   261  000F09  54                 	db	84	;'T'
   262  000F0A  45                 	db	69	;'E'
   263  000F0B  52                 	db	82	;'R'
   264  000F0C  00                 	db	0
   265  000F0D                     STR_8:
   266  000F0D  56                 	db	86	;'V'
   267  000F0E  4F                 	db	79	;'O'
   268  000F0F  4C                 	db	76	;'L'
   269  000F10  54                 	db	84	;'T'
   270  000F11  53                 	db	83	;'S'
   271  000F12  00                 	db	0
   272  000F13                     STR_6:
   273  000F13  55                 	db	85	;'U'
   274  000F14  53                 	db	83	;'S'
   275  000F15  45                 	db	69	;'E'
   276  000F16  44                 	db	68	;'D'
   277  000F17  00                 	db	0
   278  000F18                     STR_5:
   279  000F18  46                 	db	70	;'F'
   280  000F19  55                 	db	85	;'U'
   281  000F1A  45                 	db	69	;'E'
   282  000F1B  4C                 	db	76	;'L'
   283  000F1C  00                 	db	0
   284  000F1D                     STR_2:
   285  000F1D  54                 	db	84	;'T'
   286  000F1E  45                 	db	69	;'E'
   287  000F1F  4D                 	db	77	;'M'
   288  000F20  50                 	db	80	;'P'
   289  000F21  00                 	db	0
   290  000F22                     STR_7:
   291  000F22  42                 	db	66	;'B'
   292  000F23  41                 	db	65	;'A'
   293  000F24  54                 	db	84	;'T'
   294  000F25  54                 	db	84	;'T'
   295  000F26  00                 	db	0
   296  000F27                     STR_11:
   297  000F27  31                 	db	49	;'1'
   298  000F28  31                 	db	49	;'1'
   299  000F29  35                 	db	53	;'5'
   300  000F2A  00                 	db	0
   301  000F2B                     STR_10:
   302  000F2B  4B                 	db	75	;'K'
   303  000F2C  50                 	db	80	;'P'
   304  000F2D  48                 	db	72	;'H'
   305  000F2E  00                 	db	0
   306  000F2F                     STR_3:
   307  000F2F  4F                 	db	79	;'O'
   308  000F30  49                 	db	73	;'I'
   309  000F31  4C                 	db	76	;'L'
   310  000F32  00                 	db	0
   311  000F33                     STR_20:
   312  000F33  31                 	db	49	;'1'
   313  000F34  30                 	db	48	;'0'
   314  000F35  00                 	db	0
   315  000F36                     STR_21:
   316  000F36  31                 	db	49	;'1'
   317  000F37  31                 	db	49	;'1'
   318  000F38  00                 	db	0
   319  000F39                     STR_22:
   320  000F39  31                 	db	49	;'1'
   321  000F3A  32                 	db	50	;'2'
   322  000F3B  00                 	db	0
   323  000F3C                     STR_13:
   324  000F3C  33                 	db	51	;'3'
   325  000F3D  00                 	db	0
   326  000F3E                     STR_14:
   327  000F3E  34                 	db	52	;'4'
   328  000F3F  00                 	db	0
   329  000F40                     STR_16:
   330  000F40  36                 	db	54	;'6'
   331  000F41  00                 	db	0
   332  000F42                     STR_17:
   333  000F42  37                 	db	55	;'7'
   334  000F43  00                 	db	0
   335  000F44                     STR_18:
   336  000F44  38                 	db	56	;'8'
   337  000F45  00                 	db	0
   338  000F46                     STR_19:
   339  000F46  39                 	db	57	;'9'
   340  000F47  00                 	db	0
   341  0000                     
   342                           ; #config settings
   343  000F48  00                 	db	0	; dummy byte at the end
   344  0000                     
   345                           	psect	cinit
   346  003580                     __pcinit:
   347                           	opt stack 0
   348  003580                     start_initialization:
   349                           	opt stack 0
   350  003580                     __initialization:
   351                           	opt stack 0
   352                           
   353                           ; Clear objects allocated to COMRAM (4 bytes)
   354  003580  6A2E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   355  003582  6A2D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   356  003584  6A2C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   357  003586  6A2B               	clrf	__pbssCOMRAM& (0+255),c
   358  003588                     end_of_initialization:
   359                           	opt stack 0
   360  003588                     __end_of__initialization:
   361                           	opt stack 0
   362  003588  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   363  00358A  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   364  00358C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   365  00358E  6EF8               	movwf	tblptru,c
   366  003590  0100               	movlb	0
   367  003592  EF76  F018         	goto	_main	;jump to C main() function
   368                           tblptru	equ	0xFF8
   369                           
   370                           	psect	bssCOMRAM
   371  00002B                     __pbssCOMRAM:
   372                           	opt stack 0
   373  00002B                     _cmd_offset:
   374                           	opt stack 0
   375  00002B                     	ds	2
   376  00002D                     _dli:
   377                           	opt stack 0
   378  00002D                     	ds	2
   379                           tblptru	equ	0xFF8
   380                           
   381                           	psect	cstackCOMRAM
   382  000001                     __pcstackCOMRAM:
   383                           	opt stack 0
   384  000001                     ??_INTERRUPT_InterruptManager:
   385  000001                     
   386                           ; 1 bytes @ 0x0
   387  000001                     	ds	14
   388  00000F                     ??_ECAN_Initialize:
   389  00000F                     ??_wait2secs:
   390  00000F                     ??_cmd_incrementn:
   391  00000F                     ?_strlen:
   392                           	opt stack 0
   393  00000F                     ?___awdiv:
   394                           	opt stack 0
   395  00000F                     SPI_Exchange8bit@data:
   396                           	opt stack 0
   397  00000F                     EUSART1_Write@txData:
   398                           	opt stack 0
   399  00000F                     IOCB4_SetInterruptHandler@InterruptHandler:
   400                           	opt stack 0
   401  00000F                     ___awdiv@dividend:
   402                           	opt stack 0
   403  00000F                     strlen@s:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0xE
   407  00000F                     	ds	1
   408  000010                     ?_rd16:
   409                           	opt stack 0
   410  000010                     host_command@command:
   411                           	opt stack 0
   412  000010                     wr8@addr:
   413                           	opt stack 0
   414  000010                     wr32@addr:
   415                           	opt stack 0
   416  000010                     rd16@addr:
   417                           	opt stack 0
   418                           
   419                           ; 3 bytes @ 0xF
   420  000010                     	ds	1
   421  000011                     ??_strlen:
   422  000011                     cmd_incrementn@n:
   423                           	opt stack 0
   424  000011                     ___awdiv@divisor:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x10
   428  000011                     	ds	2
   429  000013                     ??_rd16:
   430  000013                     wr8@value:
   431                           	opt stack 0
   432  000013                     ___awdiv@counter:
   433                           	opt stack 0
   434  000013                     strlen@cp:
   435                           	opt stack 0
   436  000013                     wr32@value:
   437                           	opt stack 0
   438                           
   439                           ; 4 bytes @ 0x12
   440  000013                     	ds	1
   441  000014                     ??_wr8:
   442  000014                     ___awdiv@sign:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x13
   446  000014                     	ds	1
   447  000015                     ___awdiv@quotient:
   448                           	opt stack 0
   449  000015                     wr8s@addr:
   450                           	opt stack 0
   451                           
   452                           ; 3 bytes @ 0x14
   453  000015                     	ds	1
   454  000016                     rd16@temp:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x15
   458  000016                     	ds	1
   459  000017                     ??_wr32:
   460  000017                     wr16@addr:
   461                           	opt stack 0
   462                           
   463                           ; 3 bytes @ 0x16
   464  000017                     	ds	1
   465  000018                     wr8s@s:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x17
   469  000018                     	ds	2
   470  00001A                     ??_wr8s:
   471  00001A                     wr16@value:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x19
   475  00001A                     	ds	1
   476  00001B                     cmd@command:
   477                           	opt stack 0
   478                           
   479                           ; 4 bytes @ 0x1A
   480  00001B                     	ds	1
   481  00001C                     ??_wr16:
   482                           
   483                           ; 1 bytes @ 0x1B
   484  00001C                     	ds	1
   485  00001D                     wr8s@l:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x1C
   489  00001D                     	ds	1
   490  00001E                     wr8s@i:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x1D
   494  00001E                     	ds	1
   495  00001F                     ??_FT800_Init:
   496  00001F                     ??_cmd:
   497                           
   498                           ; 1 bytes @ 0x1E
   499  00001F                     	ds	3
   500  000022                     ??_display_labels:
   501  000022                     display_rpm@rpm:
   502                           	opt stack 0
   503  000022                     display_gear@gear:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x21
   507  000022                     	ds	2
   508  000024                     ??_display_gear:
   509  000024                     ??_display_rpm:
   510                           
   511                           ; 1 bytes @ 0x23
   512  000024                     	ds	1
   513  000025                     display_labels@y_start:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x24
   517  000025                     	ds	2
   518  000027                     ??_main:
   519                           
   520                           ; 1 bytes @ 0x26
   521  000027                     	ds	2
   522  000029                     main@y_start:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x28
   526  000029                     	ds	2
   527                           tblptru	equ	0xFF8
   528                           
   529 ;;
   530 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   531 ;;
   532 ;; *************** function _main *****************
   533 ;; Defined at:
   534 ;;		line 19 in file "main.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  test           14    0        struct .
   539 ;;  y_start         2   40[COMRAM] int 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   552 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   553 ;;Total ram usage:        4 bytes
   554 ;; Hardware stack levels required when called:    8
   555 ;; This function calls:
   556 ;;		_EUSART1_Initialize
   557 ;;		_EUSART1_Write
   558 ;;		_FT800_Init
   559 ;;		_SYSTEM_Initialize
   560 ;;		_display_end
   561 ;;		_display_gear
   562 ;;		_display_labels
   563 ;;		_display_rpm
   564 ;;		_display_start
   565 ;;		_wait2secs
   566 ;; This function is called by:
   567 ;;		Startup code after reset
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text0
   572  0030EC                     __ptext0:
   573                           	opt stack 0
   574  0030EC                     _main:
   575                           	opt stack 23
   576                           
   577                           ;main.c: 21: int y_start = 0;
   578                           
   579                           ;incstack = 0
   580  0030EC  0E00               	movlw	0
   581  0030EE  6E2A               	movwf	main@y_start+1,c
   582  0030F0  0E00               	movlw	0
   583  0030F2  6E29               	movwf	main@y_start,c
   584                           
   585                           ;main.c: 22: uCAN_MSG test;
   586                           ;main.c: 24: SYSTEM_Initialize();
   587  0030F4  ECD6  F01A         	call	_SYSTEM_Initialize	;wreg free
   588                           
   589                           ;main.c: 27: CIOCONbits.CLKSEL = 1;
   590  0030F8  8070               	bsf	3952,0,c	;volatile
   591                           
   592                           ;main.c: 28: CIOCONbits.ENDRHI = 1;
   593  0030FA  8A70               	bsf	3952,5,c	;volatile
   594                           
   595                           ;main.c: 29: CIOCONbits.TX2SRC = 0;
   596  0030FC  9E70               	bcf	3952,7,c	;volatile
   597                           
   598                           ;main.c: 30: CIOCONbits.TX2EN = 1;
   599  0030FE  8C70               	bsf	3952,6,c	;volatile
   600                           
   601                           ;main.c: 31: RXB0CONbits.RXM0 = 1;
   602  003100  8A60               	bsf	3936,5,c	;volatile
   603                           
   604                           ;main.c: 32: RXB0CONbits.RXM1 = 0;
   605  003102  9C60               	bcf	3936,6,c	;volatile
   606                           
   607                           ;main.c: 33: RXB0CONbits.RB0DBEN = 0;
   608  003104  9460               	bcf	3936,2,c	;volatile
   609                           
   610                           ;main.c: 34: RXB0CONbits.FILHIT0 = 0;
   611  003106  9060               	bcf	3936,0,c	;volatile
   612                           
   613                           ;main.c: 37: SSPSTATbits.SMP = 0;
   614  003108  9EC7               	bcf	4039,7,c	;volatile
   615                           
   616                           ;main.c: 38: SSPSTATbits.CKE = 1;
   617  00310A  8CC7               	bsf	4039,6,c	;volatile
   618                           
   619                           ;main.c: 39: SSPCON1bits.SSPEN = 1;
   620  00310C  8AC6               	bsf	4038,5,c	;volatile
   621                           
   622                           ;main.c: 40: SSPCON1bits.CKP = 1;
   623  00310E  88C6               	bsf	4038,4,c	;volatile
   624                           
   625                           ;main.c: 41: SSPCON1bits.SSPM = 0b0000;
   626  003110  90C6               	bcf	4038,0,c	;volatile
   627  003112  92C6               	bcf	4038,1,c	;volatile
   628  003114  94C6               	bcf	4038,2,c	;volatile
   629  003116  96C6               	bcf	4038,3,c	;volatile
   630                           
   631                           ;main.c: 42: FT800_Init();
   632  003118  ECBE  F016         	call	_FT800_Init	;wreg free
   633                           
   634                           ;main.c: 44: EUSART1_Initialize();
   635  00311C  ECCB  F01A         	call	_EUSART1_Initialize	;wreg free
   636                           
   637                           ;main.c: 46: wait2secs();
   638  003120  ECA6  F01A         	call	_wait2secs	;wreg free
   639                           
   640                           ;main.c: 48: display_start();
   641  003124  ECF5  F019         	call	_display_start	;wreg free
   642                           
   643                           ;main.c: 49: display_labels();
   644  003128  EC0A  F00F         	call	_display_labels	;wreg free
   645                           
   646                           ;main.c: 50: display_gear(2);
   647  00312C  0E00               	movlw	0
   648  00312E  6E23               	movwf	display_gear@gear+1,c
   649  003130  0E02               	movlw	2
   650  003132  6E22               	movwf	display_gear@gear,c
   651  003134  EC89  F014         	call	_display_gear	;wreg free
   652                           
   653                           ;main.c: 51: display_rpm(2000);
   654  003138  0E07               	movlw	7
   655  00313A  6E23               	movwf	display_rpm@rpm+1,c
   656  00313C  0ED0               	movlw	208
   657  00313E  6E22               	movwf	display_rpm@rpm,c
   658  003140  ECA5  F007         	call	_display_rpm	;wreg free
   659                           
   660                           ;main.c: 52: display_end();
   661  003144  ECD4  F019         	call	_display_end	;wreg free
   662  003148                     l3045:
   663  003148  8289               	bsf	3977,1,c	;volatile
   664                           
   665                           ;main.c: 56: _delay((unsigned long)((50)*(16000000/4000.0)));
   666  00314A  0E02               	movlw	2
   667  00314C  6E28               	movwf	(??_main+1)& (0+255),c
   668  00314E  0E04               	movlw	4
   669  003150  6E27               	movwf	??_main& (0+255),c
   670  003152  0EBA               	movlw	186
   671  003154                     u617:
   672  003154  2EE8               	decfsz	wreg,f,c
   673  003156  D7FE               	bra	u617
   674  003158  2E27               	decfsz	??_main& (0+255),f,c
   675  00315A  D7FC               	bra	u617
   676  00315C  2E28               	decfsz	(??_main+1)& (0+255),f,c
   677  00315E  D7FA               	bra	u617
   678  003160  D000               	nop2	
   679                           
   680                           ;main.c: 57: EUSART1_Write(0xAA);
   681  003162  0EAA               	movlw	170
   682  003164  ECF7  F01A         	call	_EUSART1_Write
   683                           
   684                           ;main.c: 58: do { LATAbits.LATA1 = 0; } while(0);
   685  003168  9289               	bcf	3977,1,c	;volatile
   686                           
   687                           ;main.c: 59: _delay((unsigned long)((50)*(16000000/4000.0)));
   688  00316A  0E02               	movlw	2
   689  00316C  6E28               	movwf	(??_main+1)& (0+255),c
   690  00316E  0E04               	movlw	4
   691  003170  6E27               	movwf	??_main& (0+255),c
   692  003172  0EBA               	movlw	186
   693  003174                     u627:
   694  003174  2EE8               	decfsz	wreg,f,c
   695  003176  D7FE               	bra	u627
   696  003178  2E27               	decfsz	??_main& (0+255),f,c
   697  00317A  D7FC               	bra	u627
   698  00317C  2E28               	decfsz	(??_main+1)& (0+255),f,c
   699  00317E  D7FA               	bra	u627
   700  003180  D000               	nop2	
   701  003182  D7E2               	goto	l3045
   702  003184                     __end_of_main:
   703                           	opt stack 0
   704                           tblptru	equ	0xFF8
   705                           wreg	equ	0xFE8
   706                           
   707 ;; *************** function _wait2secs *****************
   708 ;; Defined at:
   709 ;;		line 15 in file "main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   725 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   727 ;;Total ram usage:        2 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    4
   730 ;; This function calls:
   731 ;;		Nothing
   732 ;; This function is called by:
   733 ;;		_main
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text1
   738  00354C                     __ptext1:
   739                           	opt stack 0
   740  00354C                     _wait2secs:
   741                           	opt stack 26
   742                           
   743                           ;main.c: 16: _delay((unsigned long)((2000)*(16000000/4000.0)));
   744                           
   745                           ;incstack = 0
   746  00354C  0E29               	movlw	41
   747  00354E  6E10               	movwf	(??_wait2secs+1)& (0+255),c
   748  003550  0E96               	movlw	150
   749  003552  6E0F               	movwf	??_wait2secs& (0+255),c
   750  003554  0E7F               	movlw	127
   751  003556                     u637:
   752  003556  2EE8               	decfsz	wreg,f,c
   753  003558  D7FE               	bra	u637
   754  00355A  2E0F               	decfsz	??_wait2secs& (0+255),f,c
   755  00355C  D7FC               	bra	u637
   756  00355E  2E10               	decfsz	(??_wait2secs+1)& (0+255),f,c
   757  003560  D7FA               	bra	u637
   758  003562  F000               	nop	
   759  003564  0012               	return		;funcret
   760  003566                     __end_of_wait2secs:
   761                           	opt stack 0
   762                           tblptru	equ	0xFF8
   763                           wreg	equ	0xFE8
   764                           
   765 ;; *************** function _display_start *****************
   766 ;; Defined at:
   767 ;;		line 3 in file "display.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    7
   788 ;; This function calls:
   789 ;;		_cmd
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text2
   796  0033EA                     __ptext2:
   797                           	opt stack 0
   798  0033EA                     _display_start:
   799                           	opt stack 23
   800                           
   801                           ;display.c: 4: cmd(4294967040UL);
   802                           
   803                           ;incstack = 0
   804  0033EA  0E00               	movlw	0
   805  0033EC  6E1B               	movwf	cmd@command,c
   806  0033EE  0EFF               	movlw	255
   807  0033F0  6E1C               	movwf	cmd@command+1,c
   808  0033F2  0EFF               	movlw	255
   809  0033F4  6E1D               	movwf	cmd@command+2,c
   810  0033F6  0EFF               	movlw	255
   811  0033F8  6E1E               	movwf	cmd@command+3,c
   812  0033FA  EC51  F01A         	call	_cmd	;wreg free
   813                           
   814                           ;display.c: 5: cmd(((2UL<<24)|(((20)&255UL)<<16)|(((20)&255UL)<<8)|(((20)&255UL)<<0)));
   815  0033FE  0E14               	movlw	20
   816  003400  6E1B               	movwf	cmd@command,c
   817  003402  0E14               	movlw	20
   818  003404  6E1C               	movwf	cmd@command+1,c
   819  003406  0E14               	movlw	20
   820  003408  6E1D               	movwf	cmd@command+2,c
   821  00340A  0E02               	movlw	2
   822  00340C  6E1E               	movwf	cmd@command+3,c
   823  00340E  EC51  F01A         	call	_cmd	;wreg free
   824                           
   825                           ;display.c: 6: cmd(((38UL<<24)|(((1)&1UL)<<2)|(((1)&1UL)<<1)|(((1)&1UL)<<0)));
   826  003412  0E07               	movlw	7
   827  003414  6E1B               	movwf	cmd@command,c
   828  003416  0E00               	movlw	0
   829  003418  6E1C               	movwf	cmd@command+1,c
   830  00341A  0E00               	movlw	0
   831  00341C  6E1D               	movwf	cmd@command+2,c
   832  00341E  0E26               	movlw	38
   833  003420  6E1E               	movwf	cmd@command+3,c
   834  003422  EC51  F01A         	call	_cmd	;wreg free
   835  003426  0012               	return		;funcret
   836  003428                     __end_of_display_start:
   837                           	opt stack 0
   838                           tblptru	equ	0xFF8
   839                           wreg	equ	0xFE8
   840                           
   841 ;; *************** function _display_rpm *****************
   842 ;; Defined at:
   843 ;;		line 36 in file "display.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  rpm             2   33[COMRAM] int 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   859 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   860 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   861 ;;Total ram usage:        5 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; Hardware stack levels required when called:    7
   864 ;; This function calls:
   865 ;;		___awdiv
   866 ;;		_cmd
   867 ;;		_cmd_incrementn
   868 ;;		_wr16
   869 ;;		_wr8s
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text3
   876  000F4A                     __ptext3:
   877                           	opt stack 0
   878  000F4A                     _display_rpm:
   879                           	opt stack 23
   880                           
   881                           ;display.c: 37: cmd(((31UL<<24)|(((2UL)&15UL)<<0)));
   882                           
   883                           ;incstack = 0
   884  000F4A  0E02               	movlw	2
   885  000F4C  6E1B               	movwf	cmd@command,c
   886  000F4E  0E00               	movlw	0
   887  000F50  6E1C               	movwf	cmd@command+1,c
   888  000F52  0E00               	movlw	0
   889  000F54  6E1D               	movwf	cmd@command+2,c
   890  000F56  0E1F               	movlw	31
   891  000F58  6E1E               	movwf	cmd@command+3,c
   892  000F5A  EC51  F01A         	call	_cmd	;wreg free
   893                           
   894                           ;display.c: 38: cmd(((4UL<<24)|(((80)&255UL)<<16)|(((80)&255UL)<<8)|(((80)&255UL)<<0)));
   895  000F5E  0E50               	movlw	80
   896  000F60  6E1B               	movwf	cmd@command,c
   897  000F62  0E50               	movlw	80
   898  000F64  6E1C               	movwf	cmd@command+1,c
   899  000F66  0E50               	movlw	80
   900  000F68  6E1D               	movwf	cmd@command+2,c
   901  000F6A  0E04               	movlw	4
   902  000F6C  6E1E               	movwf	cmd@command+3,c
   903  000F6E  EC51  F01A         	call	_cmd	;wreg free
   904                           
   905                           ;display.c: 39: cmd(((13UL<<24)|(((1750)&8191UL)<<0)));
   906  000F72  0ED6               	movlw	214
   907  000F74  6E1B               	movwf	cmd@command,c
   908  000F76  0E06               	movlw	6
   909  000F78  6E1C               	movwf	cmd@command+1,c
   910  000F7A  0E00               	movlw	0
   911  000F7C  6E1D               	movwf	cmd@command+2,c
   912  000F7E  0E0D               	movlw	13
   913  000F80  6E1E               	movwf	cmd@command+3,c
   914  000F82  EC51  F01A         	call	_cmd	;wreg free
   915                           
   916                           ;display.c: 40: cmd(((2UL<<30)|(((240)&511UL)<<21)|(((115)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
   917  000F86  0E00               	movlw	0
   918  000F88  6E1B               	movwf	cmd@command,c
   919  000F8A  0E30               	movlw	48
   920  000F8C  6E1C               	movwf	cmd@command+1,c
   921  000F8E  0E07               	movlw	7
   922  000F90  6E1D               	movwf	cmd@command+2,c
   923  000F92  0E9E               	movlw	158
   924  000F94  6E1E               	movwf	cmd@command+3,c
   925  000F96  EC51  F01A         	call	_cmd	;wreg free
   926                           
   927                           ;display.c: 41: cmd(((4UL<<24)|(((0)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
   928  000F9A  0E00               	movlw	0
   929  000F9C  6E1B               	movwf	cmd@command,c
   930  000F9E  0E00               	movlw	0
   931  000FA0  6E1C               	movwf	cmd@command+1,c
   932  000FA2  0E00               	movlw	0
   933  000FA4  6E1D               	movwf	cmd@command+2,c
   934  000FA6  0E04               	movlw	4
   935  000FA8  6E1E               	movwf	cmd@command+3,c
   936  000FAA  EC51  F01A         	call	_cmd	;wreg free
   937                           
   938                           ;display.c: 42: cmd(((13UL<<24)|(((1650)&8191UL)<<0)));
   939  000FAE  0E72               	movlw	114
   940  000FB0  6E1B               	movwf	cmd@command,c
   941  000FB2  0E06               	movlw	6
   942  000FB4  6E1C               	movwf	cmd@command+1,c
   943  000FB6  0E00               	movlw	0
   944  000FB8  6E1D               	movwf	cmd@command+2,c
   945  000FBA  0E0D               	movlw	13
   946  000FBC  6E1E               	movwf	cmd@command+3,c
   947  000FBE  EC51  F01A         	call	_cmd	;wreg free
   948                           
   949                           ;display.c: 43: cmd(((2UL<<30)|(((240)&511UL)<<21)|(((115)&511UL)<<12)|(((0)&31UL)<<7)|(
      +                          ((0)&127UL)<<0)));
   950  000FC2  0E00               	movlw	0
   951  000FC4  6E1B               	movwf	cmd@command,c
   952  000FC6  0E30               	movlw	48
   953  000FC8  6E1C               	movwf	cmd@command+1,c
   954  000FCA  0E07               	movlw	7
   955  000FCC  6E1D               	movwf	cmd@command+2,c
   956  000FCE  0E9E               	movlw	158
   957  000FD0  6E1E               	movwf	cmd@command+3,c
   958  000FD2  EC51  F01A         	call	_cmd	;wreg free
   959                           
   960                           ;display.c: 45: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0)
      +                          ));
   961  000FD6  0EFF               	movlw	255
   962  000FD8  6E1B               	movwf	cmd@command,c
   963  000FDA  0EFF               	movlw	255
   964  000FDC  6E1C               	movwf	cmd@command+1,c
   965  000FDE  0EFF               	movlw	255
   966  000FE0  6E1D               	movwf	cmd@command+2,c
   967  000FE2  0E04               	movlw	4
   968  000FE4  6E1E               	movwf	cmd@command+3,c
   969  000FE6  EC51  F01A         	call	_cmd	;wreg free
   970                           
   971                           ;display.c: 46: cmd(4294967049UL);cmd(0x323232);
   972  000FEA  0E09               	movlw	9
   973  000FEC  6E1B               	movwf	cmd@command,c
   974  000FEE  0EFF               	movlw	255
   975  000FF0  6E1C               	movwf	cmd@command+1,c
   976  000FF2  0EFF               	movlw	255
   977  000FF4  6E1D               	movwf	cmd@command+2,c
   978  000FF6  0EFF               	movlw	255
   979  000FF8  6E1E               	movwf	cmd@command+3,c
   980  000FFA  EC51  F01A         	call	_cmd	;wreg free
   981  000FFE  0E32               	movlw	50
   982  001000  6E1B               	movwf	cmd@command,c
   983  001002  0E32               	movlw	50
   984  001004  6E1C               	movwf	cmd@command+1,c
   985  001006  0E32               	movlw	50
   986  001008  6E1D               	movwf	cmd@command+2,c
   987  00100A  0E00               	movlw	0
   988  00100C  6E1E               	movwf	cmd@command+3,c
   989  00100E  EC51  F01A         	call	_cmd	;wreg free
   990                           
   991                           ;display.c: 47: cmd(4294967059UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 115);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 130);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 16384UL|4096UL | 256UL);cmd_incrementn(2);wr16(108134
      +                          4U
   992  001012  0E13               	movlw	19
   993  001014  6E1B               	movwf	cmd@command,c
   994  001016  0EFF               	movlw	255
   995  001018  6E1C               	movwf	cmd@command+1,c
   996  00101A  0EFF               	movlw	255
   997  00101C  6E1D               	movwf	cmd@command+2,c
   998  00101E  0EFF               	movlw	255
   999  001020  6E1E               	movwf	cmd@command+3,c
  1000  001022  EC51  F01A         	call	_cmd	;wreg free
  1001  001026  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1002  00102A  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1003  00102E  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1004  001030  0E00               	movlw	0
  1005  001032  2424               	addwf	??_display_rpm,w,c
  1006  001034  6E17               	movwf	wr16@addr,c
  1007  001036  0E80               	movlw	128
  1008  001038  2025               	addwfc	??_display_rpm+1,w,c
  1009  00103A  6E18               	movwf	wr16@addr+1,c
  1010  00103C  0E10               	movlw	16
  1011  00103E  2026               	addwfc	??_display_rpm+2,w,c
  1012  001040  6E19               	movwf	wr16@addr+2,c
  1013  001042  0E00               	movlw	0
  1014  001044  6E1B               	movwf	wr16@value+1,c
  1015  001046  0EF0               	movlw	240
  1016  001048  6E1A               	movwf	wr16@value,c
  1017  00104A  EC33  F01A         	call	_wr16	;wreg free
  1018  00104E  0E02               	movlw	2
  1019  001050  EC98  F01A         	call	_cmd_incrementn
  1020  001054  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1021  001058  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1022  00105C  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1023  00105E  0E00               	movlw	0
  1024  001060  2424               	addwf	??_display_rpm,w,c
  1025  001062  6E17               	movwf	wr16@addr,c
  1026  001064  0E80               	movlw	128
  1027  001066  2025               	addwfc	??_display_rpm+1,w,c
  1028  001068  6E18               	movwf	wr16@addr+1,c
  1029  00106A  0E10               	movlw	16
  1030  00106C  2026               	addwfc	??_display_rpm+2,w,c
  1031  00106E  6E19               	movwf	wr16@addr+2,c
  1032  001070  0E00               	movlw	0
  1033  001072  6E1B               	movwf	wr16@value+1,c
  1034  001074  0E73               	movlw	115
  1035  001076  6E1A               	movwf	wr16@value,c
  1036  001078  EC33  F01A         	call	_wr16	;wreg free
  1037  00107C  0E02               	movlw	2
  1038  00107E  EC98  F01A         	call	_cmd_incrementn
  1039  001082  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1040  001086  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1041  00108A  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1042  00108C  0E00               	movlw	0
  1043  00108E  2424               	addwf	??_display_rpm,w,c
  1044  001090  6E17               	movwf	wr16@addr,c
  1045  001092  0E80               	movlw	128
  1046  001094  2025               	addwfc	??_display_rpm+1,w,c
  1047  001096  6E18               	movwf	wr16@addr+1,c
  1048  001098  0E10               	movlw	16
  1049  00109A  2026               	addwfc	??_display_rpm+2,w,c
  1050  00109C  6E19               	movwf	wr16@addr+2,c
  1051  00109E  0E00               	movlw	0
  1052  0010A0  6E1B               	movwf	wr16@value+1,c
  1053  0010A2  0E82               	movlw	130
  1054  0010A4  6E1A               	movwf	wr16@value,c
  1055  0010A6  EC33  F01A         	call	_wr16	;wreg free
  1056  0010AA  0E02               	movlw	2
  1057  0010AC  EC98  F01A         	call	_cmd_incrementn
  1058  0010B0  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1059  0010B4  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1060  0010B8  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1061  0010BA  0E00               	movlw	0
  1062  0010BC  2424               	addwf	??_display_rpm,w,c
  1063  0010BE  6E17               	movwf	wr16@addr,c
  1064  0010C0  0E80               	movlw	128
  1065  0010C2  2025               	addwfc	??_display_rpm+1,w,c
  1066  0010C4  6E18               	movwf	wr16@addr+1,c
  1067  0010C6  0E10               	movlw	16
  1068  0010C8  2026               	addwfc	??_display_rpm+2,w,c
  1069  0010CA  6E19               	movwf	wr16@addr+2,c
  1070  0010CC  0E51               	movlw	81
  1071  0010CE  6E1B               	movwf	wr16@value+1,c
  1072  0010D0  0E00               	movlw	0
  1073  0010D2  6E1A               	movwf	wr16@value,c
  1074  0010D4  EC33  F01A         	call	_wr16	;wreg free
  1075  0010D8  0E02               	movlw	2
  1076  0010DA  EC98  F01A         	call	_cmd_incrementn
  1077  0010DE  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1078  0010E2  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1079  0010E6  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1080  0010E8  0E00               	movlw	0
  1081  0010EA  2424               	addwf	??_display_rpm,w,c
  1082  0010EC  6E17               	movwf	wr16@addr,c
  1083  0010EE  0E80               	movlw	128
  1084  0010F0  2025               	addwfc	??_display_rpm+1,w,c
  1085  0010F2  6E18               	movwf	wr16@addr+1,c
  1086  0010F4  0E10               	movlw	16
  1087  0010F6  2026               	addwfc	??_display_rpm+2,w,c
  1088  0010F8  6E19               	movwf	wr16@addr+2,c
  1089  0010FA  0E00               	movlw	0
  1090  0010FC  6E1B               	movwf	wr16@value+1,c
  1091  0010FE  0E0A               	movlw	10
  1092  001100  6E1A               	movwf	wr16@value,c
  1093  001102  EC33  F01A         	call	_wr16	;wreg free
  1094  001106  0E02               	movlw	2
  1095  001108  EC98  F01A         	call	_cmd_incrementn
  1096  00110C  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1097  001110  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1098  001114  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1099  001116  0E00               	movlw	0
  1100  001118  2424               	addwf	??_display_rpm,w,c
  1101  00111A  6E17               	movwf	wr16@addr,c
  1102  00111C  0E80               	movlw	128
  1103  00111E  2025               	addwfc	??_display_rpm+1,w,c
  1104  001120  6E18               	movwf	wr16@addr+1,c
  1105  001122  0E10               	movlw	16
  1106  001124  2026               	addwfc	??_display_rpm+2,w,c
  1107  001126  6E19               	movwf	wr16@addr+2,c
  1108  001128  0E00               	movlw	0
  1109  00112A  6E1B               	movwf	wr16@value+1,c
  1110  00112C  0E05               	movlw	5
  1111  00112E  6E1A               	movwf	wr16@value,c
  1112  001130  EC33  F01A         	call	_wr16	;wreg free
  1113  001134  0E02               	movlw	2
  1114  001136  EC98  F01A         	call	_cmd_incrementn
  1115  00113A  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1116  00113E  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1117  001142  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1118  001144  0E00               	movlw	0
  1119  001146  2424               	addwf	??_display_rpm,w,c
  1120  001148  6E17               	movwf	wr16@addr,c
  1121  00114A  0E80               	movlw	128
  1122  00114C  2025               	addwfc	??_display_rpm+1,w,c
  1123  00114E  6E18               	movwf	wr16@addr+1,c
  1124  001150  0E10               	movlw	16
  1125  001152  2026               	addwfc	??_display_rpm+2,w,c
  1126  001154  6E19               	movwf	wr16@addr+2,c
  1127  001156  C022  F00F         	movff	display_rpm@rpm,___awdiv@dividend
  1128  00115A  C023  F010         	movff	display_rpm@rpm+1,___awdiv@dividend+1
  1129  00115E  0E03               	movlw	3
  1130  001160  6E12               	movwf	___awdiv@divisor+1,c
  1131  001162  0EE8               	movlw	232
  1132  001164  6E11               	movwf	___awdiv@divisor,c
  1133  001166  EC08  F019         	call	___awdiv	;wreg free
  1134  00116A  C00F  F01A         	movff	?___awdiv,wr16@value
  1135  00116E  C010  F01B         	movff	?___awdiv+1,wr16@value+1
  1136  001172  EC33  F01A         	call	_wr16	;wreg free
  1137  001176  0E02               	movlw	2
  1138  001178  EC98  F01A         	call	_cmd_incrementn
  1139  00117C  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1140  001180  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1141  001184  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1142  001186  0E00               	movlw	0
  1143  001188  2424               	addwf	??_display_rpm,w,c
  1144  00118A  6E17               	movwf	wr16@addr,c
  1145  00118C  0E80               	movlw	128
  1146  00118E  2025               	addwfc	??_display_rpm+1,w,c
  1147  001190  6E18               	movwf	wr16@addr+1,c
  1148  001192  0E10               	movlw	16
  1149  001194  2026               	addwfc	??_display_rpm+2,w,c
  1150  001196  6E19               	movwf	wr16@addr+2,c
  1151  001198  0E00               	movlw	0
  1152  00119A  6E1B               	movwf	wr16@value+1,c
  1153  00119C  0E0A               	movlw	10
  1154  00119E  6E1A               	movwf	wr16@value,c
  1155  0011A0  EC33  F01A         	call	_wr16	;wreg free
  1156  0011A4  0E02               	movlw	2
  1157  0011A6  EC98  F01A         	call	_cmd_incrementn
  1158                           
  1159                           ;display.c: 48: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((0)&255UL)<<8)|(((0)&255UL)<<0)));
  1160  0011AA  0E00               	movlw	0
  1161  0011AC  6E1B               	movwf	cmd@command,c
  1162  0011AE  0E00               	movlw	0
  1163  0011B0  6E1C               	movwf	cmd@command+1,c
  1164  0011B2  0EFF               	movlw	255
  1165  0011B4  6E1D               	movwf	cmd@command+2,c
  1166  0011B6  0E04               	movlw	4
  1167  0011B8  6E1E               	movwf	cmd@command+3,c
  1168  0011BA  EC51  F01A         	call	_cmd	;wreg free
  1169                           
  1170                           ;display.c: 49: cmd(4294967059UL);wr16(1081344UL+cmd_offset, 240);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 115);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 130);cmd_increm
      +                          entn(2);wr16(1081344UL+cmd_offset, 8192UL|4096UL | 256UL);cmd_incrementn(2);wr16(1081344
      +                          UL
  1171  0011BE  0E13               	movlw	19
  1172  0011C0  6E1B               	movwf	cmd@command,c
  1173  0011C2  0EFF               	movlw	255
  1174  0011C4  6E1C               	movwf	cmd@command+1,c
  1175  0011C6  0EFF               	movlw	255
  1176  0011C8  6E1D               	movwf	cmd@command+2,c
  1177  0011CA  0EFF               	movlw	255
  1178  0011CC  6E1E               	movwf	cmd@command+3,c
  1179  0011CE  EC51  F01A         	call	_cmd	;wreg free
  1180  0011D2  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1181  0011D6  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1182  0011DA  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1183  0011DC  0E00               	movlw	0
  1184  0011DE  2424               	addwf	??_display_rpm,w,c
  1185  0011E0  6E17               	movwf	wr16@addr,c
  1186  0011E2  0E80               	movlw	128
  1187  0011E4  2025               	addwfc	??_display_rpm+1,w,c
  1188  0011E6  6E18               	movwf	wr16@addr+1,c
  1189  0011E8  0E10               	movlw	16
  1190  0011EA  2026               	addwfc	??_display_rpm+2,w,c
  1191  0011EC  6E19               	movwf	wr16@addr+2,c
  1192  0011EE  0E00               	movlw	0
  1193  0011F0  6E1B               	movwf	wr16@value+1,c
  1194  0011F2  0EF0               	movlw	240
  1195  0011F4  6E1A               	movwf	wr16@value,c
  1196  0011F6  EC33  F01A         	call	_wr16	;wreg free
  1197  0011FA  0E02               	movlw	2
  1198  0011FC  EC98  F01A         	call	_cmd_incrementn
  1199  001200  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1200  001204  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1201  001208  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1202  00120A  0E00               	movlw	0
  1203  00120C  2424               	addwf	??_display_rpm,w,c
  1204  00120E  6E17               	movwf	wr16@addr,c
  1205  001210  0E80               	movlw	128
  1206  001212  2025               	addwfc	??_display_rpm+1,w,c
  1207  001214  6E18               	movwf	wr16@addr+1,c
  1208  001216  0E10               	movlw	16
  1209  001218  2026               	addwfc	??_display_rpm+2,w,c
  1210  00121A  6E19               	movwf	wr16@addr+2,c
  1211  00121C  0E00               	movlw	0
  1212  00121E  6E1B               	movwf	wr16@value+1,c
  1213  001220  0E73               	movlw	115
  1214  001222  6E1A               	movwf	wr16@value,c
  1215  001224  EC33  F01A         	call	_wr16	;wreg free
  1216  001228  0E02               	movlw	2
  1217  00122A  EC98  F01A         	call	_cmd_incrementn
  1218  00122E  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1219  001232  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1220  001236  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1221  001238  0E00               	movlw	0
  1222  00123A  2424               	addwf	??_display_rpm,w,c
  1223  00123C  6E17               	movwf	wr16@addr,c
  1224  00123E  0E80               	movlw	128
  1225  001240  2025               	addwfc	??_display_rpm+1,w,c
  1226  001242  6E18               	movwf	wr16@addr+1,c
  1227  001244  0E10               	movlw	16
  1228  001246  2026               	addwfc	??_display_rpm+2,w,c
  1229  001248  6E19               	movwf	wr16@addr+2,c
  1230  00124A  0E00               	movlw	0
  1231  00124C  6E1B               	movwf	wr16@value+1,c
  1232  00124E  0E82               	movlw	130
  1233  001250  6E1A               	movwf	wr16@value,c
  1234  001252  EC33  F01A         	call	_wr16	;wreg free
  1235  001256  0E02               	movlw	2
  1236  001258  EC98  F01A         	call	_cmd_incrementn
  1237  00125C  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1238  001260  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1239  001264  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1240  001266  0E00               	movlw	0
  1241  001268  2424               	addwf	??_display_rpm,w,c
  1242  00126A  6E17               	movwf	wr16@addr,c
  1243  00126C  0E80               	movlw	128
  1244  00126E  2025               	addwfc	??_display_rpm+1,w,c
  1245  001270  6E18               	movwf	wr16@addr+1,c
  1246  001272  0E10               	movlw	16
  1247  001274  2026               	addwfc	??_display_rpm+2,w,c
  1248  001276  6E19               	movwf	wr16@addr+2,c
  1249  001278  0E31               	movlw	49
  1250  00127A  6E1B               	movwf	wr16@value+1,c
  1251  00127C  0E00               	movlw	0
  1252  00127E  6E1A               	movwf	wr16@value,c
  1253  001280  EC33  F01A         	call	_wr16	;wreg free
  1254  001284  0E02               	movlw	2
  1255  001286  EC98  F01A         	call	_cmd_incrementn
  1256  00128A  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1257  00128E  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1258  001292  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1259  001294  0E00               	movlw	0
  1260  001296  2424               	addwf	??_display_rpm,w,c
  1261  001298  6E17               	movwf	wr16@addr,c
  1262  00129A  0E80               	movlw	128
  1263  00129C  2025               	addwfc	??_display_rpm+1,w,c
  1264  00129E  6E18               	movwf	wr16@addr+1,c
  1265  0012A0  0E10               	movlw	16
  1266  0012A2  2026               	addwfc	??_display_rpm+2,w,c
  1267  0012A4  6E19               	movwf	wr16@addr+2,c
  1268  0012A6  0E00               	movlw	0
  1269  0012A8  6E1B               	movwf	wr16@value+1,c
  1270  0012AA  0E0A               	movlw	10
  1271  0012AC  6E1A               	movwf	wr16@value,c
  1272  0012AE  EC33  F01A         	call	_wr16	;wreg free
  1273  0012B2  0E02               	movlw	2
  1274  0012B4  EC98  F01A         	call	_cmd_incrementn
  1275  0012B8  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1276  0012BC  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1277  0012C0  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1278  0012C2  0E00               	movlw	0
  1279  0012C4  2424               	addwf	??_display_rpm,w,c
  1280  0012C6  6E17               	movwf	wr16@addr,c
  1281  0012C8  0E80               	movlw	128
  1282  0012CA  2025               	addwfc	??_display_rpm+1,w,c
  1283  0012CC  6E18               	movwf	wr16@addr+1,c
  1284  0012CE  0E10               	movlw	16
  1285  0012D0  2026               	addwfc	??_display_rpm+2,w,c
  1286  0012D2  6E19               	movwf	wr16@addr+2,c
  1287  0012D4  0E00               	movlw	0
  1288  0012D6  6E1B               	movwf	wr16@value+1,c
  1289  0012D8  0E05               	movlw	5
  1290  0012DA  6E1A               	movwf	wr16@value,c
  1291  0012DC  EC33  F01A         	call	_wr16	;wreg free
  1292  0012E0  0E02               	movlw	2
  1293  0012E2  EC98  F01A         	call	_cmd_incrementn
  1294  0012E6  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1295  0012EA  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1296  0012EE  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1297  0012F0  0E00               	movlw	0
  1298  0012F2  2424               	addwf	??_display_rpm,w,c
  1299  0012F4  6E17               	movwf	wr16@addr,c
  1300  0012F6  0E80               	movlw	128
  1301  0012F8  2025               	addwfc	??_display_rpm+1,w,c
  1302  0012FA  6E18               	movwf	wr16@addr+1,c
  1303  0012FC  0E10               	movlw	16
  1304  0012FE  2026               	addwfc	??_display_rpm+2,w,c
  1305  001300  6E19               	movwf	wr16@addr+2,c
  1306  001302  C022  F00F         	movff	display_rpm@rpm,___awdiv@dividend
  1307  001306  C023  F010         	movff	display_rpm@rpm+1,___awdiv@dividend+1
  1308  00130A  0E03               	movlw	3
  1309  00130C  6E12               	movwf	___awdiv@divisor+1,c
  1310  00130E  0EE8               	movlw	232
  1311  001310  6E11               	movwf	___awdiv@divisor,c
  1312  001312  EC08  F019         	call	___awdiv	;wreg free
  1313  001316  C00F  F01A         	movff	?___awdiv,wr16@value
  1314  00131A  C010  F01B         	movff	?___awdiv+1,wr16@value+1
  1315  00131E  EC33  F01A         	call	_wr16	;wreg free
  1316  001322  0E02               	movlw	2
  1317  001324  EC98  F01A         	call	_cmd_incrementn
  1318  001328  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1319  00132C  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1320  001330  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1321  001332  0E00               	movlw	0
  1322  001334  2424               	addwf	??_display_rpm,w,c
  1323  001336  6E17               	movwf	wr16@addr,c
  1324  001338  0E80               	movlw	128
  1325  00133A  2025               	addwfc	??_display_rpm+1,w,c
  1326  00133C  6E18               	movwf	wr16@addr+1,c
  1327  00133E  0E10               	movlw	16
  1328  001340  2026               	addwfc	??_display_rpm+2,w,c
  1329  001342  6E19               	movwf	wr16@addr+2,c
  1330  001344  0E00               	movlw	0
  1331  001346  6E1B               	movwf	wr16@value+1,c
  1332  001348  0E0A               	movlw	10
  1333  00134A  6E1A               	movwf	wr16@value,c
  1334  00134C  EC33  F01A         	call	_wr16	;wreg free
  1335  001350  0E02               	movlw	2
  1336  001352  EC98  F01A         	call	_cmd_incrementn
  1337                           
  1338                           ;display.c: 51: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0)
      +                          ));
  1339  001356  0EFF               	movlw	255
  1340  001358  6E1B               	movwf	cmd@command,c
  1341  00135A  0EFF               	movlw	255
  1342  00135C  6E1C               	movwf	cmd@command+1,c
  1343  00135E  0EFF               	movlw	255
  1344  001360  6E1D               	movwf	cmd@command+2,c
  1345  001362  0E04               	movlw	4
  1346  001364  6E1E               	movwf	cmd@command+3,c
  1347  001366  EC51  F01A         	call	_cmd	;wreg free
  1348                           
  1349                           ;display.c: 52: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 183);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 161);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _o
  1350  00136A  0E0C               	movlw	12
  1351  00136C  6E1B               	movwf	cmd@command,c
  1352  00136E  0EFF               	movlw	255
  1353  001370  6E1C               	movwf	cmd@command+1,c
  1354  001372  0EFF               	movlw	255
  1355  001374  6E1D               	movwf	cmd@command+2,c
  1356  001376  0EFF               	movlw	255
  1357  001378  6E1E               	movwf	cmd@command+3,c
  1358  00137A  EC51  F01A         	call	_cmd	;wreg free
  1359  00137E  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1360  001382  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1361  001386  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1362  001388  0E00               	movlw	0
  1363  00138A  2424               	addwf	??_display_rpm,w,c
  1364  00138C  6E17               	movwf	wr16@addr,c
  1365  00138E  0E80               	movlw	128
  1366  001390  2025               	addwfc	??_display_rpm+1,w,c
  1367  001392  6E18               	movwf	wr16@addr+1,c
  1368  001394  0E10               	movlw	16
  1369  001396  2026               	addwfc	??_display_rpm+2,w,c
  1370  001398  6E19               	movwf	wr16@addr+2,c
  1371  00139A  0E00               	movlw	0
  1372  00139C  6E1B               	movwf	wr16@value+1,c
  1373  00139E  0EB7               	movlw	183
  1374  0013A0  6E1A               	movwf	wr16@value,c
  1375  0013A2  EC33  F01A         	call	_wr16	;wreg free
  1376  0013A6  0E02               	movlw	2
  1377  0013A8  EC98  F01A         	call	_cmd_incrementn
  1378  0013AC  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1379  0013B0  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1380  0013B4  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1381  0013B6  0E00               	movlw	0
  1382  0013B8  2424               	addwf	??_display_rpm,w,c
  1383  0013BA  6E17               	movwf	wr16@addr,c
  1384  0013BC  0E80               	movlw	128
  1385  0013BE  2025               	addwfc	??_display_rpm+1,w,c
  1386  0013C0  6E18               	movwf	wr16@addr+1,c
  1387  0013C2  0E10               	movlw	16
  1388  0013C4  2026               	addwfc	??_display_rpm+2,w,c
  1389  0013C6  6E19               	movwf	wr16@addr+2,c
  1390  0013C8  0E00               	movlw	0
  1391  0013CA  6E1B               	movwf	wr16@value+1,c
  1392  0013CC  0EA1               	movlw	161
  1393  0013CE  6E1A               	movwf	wr16@value,c
  1394  0013D0  EC33  F01A         	call	_wr16	;wreg free
  1395  0013D4  0E02               	movlw	2
  1396  0013D6  EC98  F01A         	call	_cmd_incrementn
  1397  0013DA  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1398  0013DE  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1399  0013E2  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1400  0013E4  0E00               	movlw	0
  1401  0013E6  2424               	addwf	??_display_rpm,w,c
  1402  0013E8  6E17               	movwf	wr16@addr,c
  1403  0013EA  0E80               	movlw	128
  1404  0013EC  2025               	addwfc	??_display_rpm+1,w,c
  1405  0013EE  6E18               	movwf	wr16@addr+1,c
  1406  0013F0  0E10               	movlw	16
  1407  0013F2  2026               	addwfc	??_display_rpm+2,w,c
  1408  0013F4  6E19               	movwf	wr16@addr+2,c
  1409  0013F6  0E00               	movlw	0
  1410  0013F8  6E1B               	movwf	wr16@value+1,c
  1411  0013FA  0E1C               	movlw	28
  1412  0013FC  6E1A               	movwf	wr16@value,c
  1413  0013FE  EC33  F01A         	call	_wr16	;wreg free
  1414  001402  0E02               	movlw	2
  1415  001404  EC98  F01A         	call	_cmd_incrementn
  1416  001408  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1417  00140C  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1418  001410  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1419  001412  0E00               	movlw	0
  1420  001414  2424               	addwf	??_display_rpm,w,c
  1421  001416  6E17               	movwf	wr16@addr,c
  1422  001418  0E80               	movlw	128
  1423  00141A  2025               	addwfc	??_display_rpm+1,w,c
  1424  00141C  6E18               	movwf	wr16@addr+1,c
  1425  00141E  0E10               	movlw	16
  1426  001420  2026               	addwfc	??_display_rpm+2,w,c
  1427  001422  6E19               	movwf	wr16@addr+2,c
  1428  001424  0E00               	movlw	0
  1429  001426  6E1B               	movwf	wr16@value+1,c
  1430  001428  0E00               	movlw	0
  1431  00142A  6E1A               	movwf	wr16@value,c
  1432  00142C  EC33  F01A         	call	_wr16	;wreg free
  1433  001430  0E02               	movlw	2
  1434  001432  EC98  F01A         	call	_cmd_incrementn
  1435  001436  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1436  00143A  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1437  00143E  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1438  001440  0E00               	movlw	0
  1439  001442  2424               	addwf	??_display_rpm,w,c
  1440  001444  6E15               	movwf	wr8s@addr,c
  1441  001446  0E80               	movlw	128
  1442  001448  2025               	addwfc	??_display_rpm+1,w,c
  1443  00144A  6E16               	movwf	wr8s@addr+1,c
  1444  00144C  0E10               	movlw	16
  1445  00144E  2026               	addwfc	??_display_rpm+2,w,c
  1446  001450  6E17               	movwf	wr8s@addr+2,c
  1447  001452  0E3A               	movlw	low (STR_22+1)
  1448  001454  6E18               	movwf	wr8s@s,c
  1449  001456  0E0F               	movlw	high (STR_22+1)
  1450  001458  6E19               	movwf	wr8s@s+1,c
  1451  00145A  ECC2  F018         	call	_wr8s	;wreg free
  1452  00145E  EC98  F01A         	call	_cmd_incrementn
  1453                           
  1454                           ;display.c: 53: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 160);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 130);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _o
  1455  001462  0E0C               	movlw	12
  1456  001464  6E1B               	movwf	cmd@command,c
  1457  001466  0EFF               	movlw	255
  1458  001468  6E1C               	movwf	cmd@command+1,c
  1459  00146A  0EFF               	movlw	255
  1460  00146C  6E1D               	movwf	cmd@command+2,c
  1461  00146E  0EFF               	movlw	255
  1462  001470  6E1E               	movwf	cmd@command+3,c
  1463  001472  EC51  F01A         	call	_cmd	;wreg free
  1464  001476  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1465  00147A  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1466  00147E  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1467  001480  0E00               	movlw	0
  1468  001482  2424               	addwf	??_display_rpm,w,c
  1469  001484  6E17               	movwf	wr16@addr,c
  1470  001486  0E80               	movlw	128
  1471  001488  2025               	addwfc	??_display_rpm+1,w,c
  1472  00148A  6E18               	movwf	wr16@addr+1,c
  1473  00148C  0E10               	movlw	16
  1474  00148E  2026               	addwfc	??_display_rpm+2,w,c
  1475  001490  6E19               	movwf	wr16@addr+2,c
  1476  001492  0E00               	movlw	0
  1477  001494  6E1B               	movwf	wr16@value+1,c
  1478  001496  0EA0               	movlw	160
  1479  001498  6E1A               	movwf	wr16@value,c
  1480  00149A  EC33  F01A         	call	_wr16	;wreg free
  1481  00149E  0E02               	movlw	2
  1482  0014A0  EC98  F01A         	call	_cmd_incrementn
  1483  0014A4  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1484  0014A8  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1485  0014AC  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1486  0014AE  0E00               	movlw	0
  1487  0014B0  2424               	addwf	??_display_rpm,w,c
  1488  0014B2  6E17               	movwf	wr16@addr,c
  1489  0014B4  0E80               	movlw	128
  1490  0014B6  2025               	addwfc	??_display_rpm+1,w,c
  1491  0014B8  6E18               	movwf	wr16@addr+1,c
  1492  0014BA  0E10               	movlw	16
  1493  0014BC  2026               	addwfc	??_display_rpm+2,w,c
  1494  0014BE  6E19               	movwf	wr16@addr+2,c
  1495  0014C0  0E00               	movlw	0
  1496  0014C2  6E1B               	movwf	wr16@value+1,c
  1497  0014C4  0E82               	movlw	130
  1498  0014C6  6E1A               	movwf	wr16@value,c
  1499  0014C8  EC33  F01A         	call	_wr16	;wreg free
  1500  0014CC  0E02               	movlw	2
  1501  0014CE  EC98  F01A         	call	_cmd_incrementn
  1502  0014D2  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1503  0014D6  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1504  0014DA  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1505  0014DC  0E00               	movlw	0
  1506  0014DE  2424               	addwf	??_display_rpm,w,c
  1507  0014E0  6E17               	movwf	wr16@addr,c
  1508  0014E2  0E80               	movlw	128
  1509  0014E4  2025               	addwfc	??_display_rpm+1,w,c
  1510  0014E6  6E18               	movwf	wr16@addr+1,c
  1511  0014E8  0E10               	movlw	16
  1512  0014EA  2026               	addwfc	??_display_rpm+2,w,c
  1513  0014EC  6E19               	movwf	wr16@addr+2,c
  1514  0014EE  0E00               	movlw	0
  1515  0014F0  6E1B               	movwf	wr16@value+1,c
  1516  0014F2  0E1C               	movlw	28
  1517  0014F4  6E1A               	movwf	wr16@value,c
  1518  0014F6  EC33  F01A         	call	_wr16	;wreg free
  1519  0014FA  0E02               	movlw	2
  1520  0014FC  EC98  F01A         	call	_cmd_incrementn
  1521  001500  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1522  001504  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1523  001508  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1524  00150A  0E00               	movlw	0
  1525  00150C  2424               	addwf	??_display_rpm,w,c
  1526  00150E  6E17               	movwf	wr16@addr,c
  1527  001510  0E80               	movlw	128
  1528  001512  2025               	addwfc	??_display_rpm+1,w,c
  1529  001514  6E18               	movwf	wr16@addr+1,c
  1530  001516  0E10               	movlw	16
  1531  001518  2026               	addwfc	??_display_rpm+2,w,c
  1532  00151A  6E19               	movwf	wr16@addr+2,c
  1533  00151C  0E00               	movlw	0
  1534  00151E  6E1B               	movwf	wr16@value+1,c
  1535  001520  0E00               	movlw	0
  1536  001522  6E1A               	movwf	wr16@value,c
  1537  001524  EC33  F01A         	call	_wr16	;wreg free
  1538  001528  0E02               	movlw	2
  1539  00152A  EC98  F01A         	call	_cmd_incrementn
  1540  00152E  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1541  001532  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1542  001536  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1543  001538  0E00               	movlw	0
  1544  00153A  2424               	addwf	??_display_rpm,w,c
  1545  00153C  6E15               	movwf	wr8s@addr,c
  1546  00153E  0E80               	movlw	128
  1547  001540  2025               	addwfc	??_display_rpm+1,w,c
  1548  001542  6E16               	movwf	wr8s@addr+1,c
  1549  001544  0E10               	movlw	16
  1550  001546  2026               	addwfc	??_display_rpm+2,w,c
  1551  001548  6E17               	movwf	wr8s@addr+2,c
  1552  00154A  0E3C               	movlw	low STR_13
  1553  00154C  6E18               	movwf	wr8s@s,c
  1554  00154E  0E0F               	movlw	high STR_13
  1555  001550  6E19               	movwf	wr8s@s+1,c
  1556  001552  ECC2  F018         	call	_wr8s	;wreg free
  1557  001556  EC98  F01A         	call	_cmd_incrementn
  1558                           
  1559                           ;display.c: 54: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 155);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 92);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_
      +                          of
  1560  00155A  0E0C               	movlw	12
  1561  00155C  6E1B               	movwf	cmd@command,c
  1562  00155E  0EFF               	movlw	255
  1563  001560  6E1C               	movwf	cmd@command+1,c
  1564  001562  0EFF               	movlw	255
  1565  001564  6E1D               	movwf	cmd@command+2,c
  1566  001566  0EFF               	movlw	255
  1567  001568  6E1E               	movwf	cmd@command+3,c
  1568  00156A  EC51  F01A         	call	_cmd	;wreg free
  1569  00156E  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1570  001572  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1571  001576  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1572  001578  0E00               	movlw	0
  1573  00157A  2424               	addwf	??_display_rpm,w,c
  1574  00157C  6E17               	movwf	wr16@addr,c
  1575  00157E  0E80               	movlw	128
  1576  001580  2025               	addwfc	??_display_rpm+1,w,c
  1577  001582  6E18               	movwf	wr16@addr+1,c
  1578  001584  0E10               	movlw	16
  1579  001586  2026               	addwfc	??_display_rpm+2,w,c
  1580  001588  6E19               	movwf	wr16@addr+2,c
  1581  00158A  0E00               	movlw	0
  1582  00158C  6E1B               	movwf	wr16@value+1,c
  1583  00158E  0E9B               	movlw	155
  1584  001590  6E1A               	movwf	wr16@value,c
  1585  001592  EC33  F01A         	call	_wr16	;wreg free
  1586  001596  0E02               	movlw	2
  1587  001598  EC98  F01A         	call	_cmd_incrementn
  1588  00159C  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1589  0015A0  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1590  0015A4  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1591  0015A6  0E00               	movlw	0
  1592  0015A8  2424               	addwf	??_display_rpm,w,c
  1593  0015AA  6E17               	movwf	wr16@addr,c
  1594  0015AC  0E80               	movlw	128
  1595  0015AE  2025               	addwfc	??_display_rpm+1,w,c
  1596  0015B0  6E18               	movwf	wr16@addr+1,c
  1597  0015B2  0E10               	movlw	16
  1598  0015B4  2026               	addwfc	??_display_rpm+2,w,c
  1599  0015B6  6E19               	movwf	wr16@addr+2,c
  1600  0015B8  0E00               	movlw	0
  1601  0015BA  6E1B               	movwf	wr16@value+1,c
  1602  0015BC  0E5C               	movlw	92
  1603  0015BE  6E1A               	movwf	wr16@value,c
  1604  0015C0  EC33  F01A         	call	_wr16	;wreg free
  1605  0015C4  0E02               	movlw	2
  1606  0015C6  EC98  F01A         	call	_cmd_incrementn
  1607  0015CA  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1608  0015CE  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1609  0015D2  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1610  0015D4  0E00               	movlw	0
  1611  0015D6  2424               	addwf	??_display_rpm,w,c
  1612  0015D8  6E17               	movwf	wr16@addr,c
  1613  0015DA  0E80               	movlw	128
  1614  0015DC  2025               	addwfc	??_display_rpm+1,w,c
  1615  0015DE  6E18               	movwf	wr16@addr+1,c
  1616  0015E0  0E10               	movlw	16
  1617  0015E2  2026               	addwfc	??_display_rpm+2,w,c
  1618  0015E4  6E19               	movwf	wr16@addr+2,c
  1619  0015E6  0E00               	movlw	0
  1620  0015E8  6E1B               	movwf	wr16@value+1,c
  1621  0015EA  0E1C               	movlw	28
  1622  0015EC  6E1A               	movwf	wr16@value,c
  1623  0015EE  EC33  F01A         	call	_wr16	;wreg free
  1624  0015F2  0E02               	movlw	2
  1625  0015F4  EC98  F01A         	call	_cmd_incrementn
  1626  0015F8  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1627  0015FC  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1628  001600  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1629  001602  0E00               	movlw	0
  1630  001604  2424               	addwf	??_display_rpm,w,c
  1631  001606  6E17               	movwf	wr16@addr,c
  1632  001608  0E80               	movlw	128
  1633  00160A  2025               	addwfc	??_display_rpm+1,w,c
  1634  00160C  6E18               	movwf	wr16@addr+1,c
  1635  00160E  0E10               	movlw	16
  1636  001610  2026               	addwfc	??_display_rpm+2,w,c
  1637  001612  6E19               	movwf	wr16@addr+2,c
  1638  001614  0E00               	movlw	0
  1639  001616  6E1B               	movwf	wr16@value+1,c
  1640  001618  0E00               	movlw	0
  1641  00161A  6E1A               	movwf	wr16@value,c
  1642  00161C  EC33  F01A         	call	_wr16	;wreg free
  1643  001620  0E02               	movlw	2
  1644  001622  EC98  F01A         	call	_cmd_incrementn
  1645  001626  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1646  00162A  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1647  00162E  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1648  001630  0E00               	movlw	0
  1649  001632  2424               	addwf	??_display_rpm,w,c
  1650  001634  6E15               	movwf	wr8s@addr,c
  1651  001636  0E80               	movlw	128
  1652  001638  2025               	addwfc	??_display_rpm+1,w,c
  1653  00163A  6E16               	movwf	wr8s@addr+1,c
  1654  00163C  0E10               	movlw	16
  1655  00163E  2026               	addwfc	??_display_rpm+2,w,c
  1656  001640  6E17               	movwf	wr8s@addr+2,c
  1657  001642  0E3E               	movlw	low STR_14
  1658  001644  6E18               	movwf	wr8s@s,c
  1659  001646  0E0F               	movlw	high STR_14
  1660  001648  6E19               	movwf	wr8s@s+1,c
  1661  00164A  ECC2  F018         	call	_wr8s	;wreg free
  1662  00164E  EC98  F01A         	call	_cmd_incrementn
  1663                           
  1664                           ;display.c: 55: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 171);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 58);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_
      +                          of
  1665  001652  0E0C               	movlw	12
  1666  001654  6E1B               	movwf	cmd@command,c
  1667  001656  0EFF               	movlw	255
  1668  001658  6E1C               	movwf	cmd@command+1,c
  1669  00165A  0EFF               	movlw	255
  1670  00165C  6E1D               	movwf	cmd@command+2,c
  1671  00165E  0EFF               	movlw	255
  1672  001660  6E1E               	movwf	cmd@command+3,c
  1673  001662  EC51  F01A         	call	_cmd	;wreg free
  1674  001666  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1675  00166A  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1676  00166E  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1677  001670  0E00               	movlw	0
  1678  001672  2424               	addwf	??_display_rpm,w,c
  1679  001674  6E17               	movwf	wr16@addr,c
  1680  001676  0E80               	movlw	128
  1681  001678  2025               	addwfc	??_display_rpm+1,w,c
  1682  00167A  6E18               	movwf	wr16@addr+1,c
  1683  00167C  0E10               	movlw	16
  1684  00167E  2026               	addwfc	??_display_rpm+2,w,c
  1685  001680  6E19               	movwf	wr16@addr+2,c
  1686  001682  0E00               	movlw	0
  1687  001684  6E1B               	movwf	wr16@value+1,c
  1688  001686  0EAB               	movlw	171
  1689  001688  6E1A               	movwf	wr16@value,c
  1690  00168A  EC33  F01A         	call	_wr16	;wreg free
  1691  00168E  0E02               	movlw	2
  1692  001690  EC98  F01A         	call	_cmd_incrementn
  1693  001694  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1694  001698  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1695  00169C  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1696  00169E  0E00               	movlw	0
  1697  0016A0  2424               	addwf	??_display_rpm,w,c
  1698  0016A2  6E17               	movwf	wr16@addr,c
  1699  0016A4  0E80               	movlw	128
  1700  0016A6  2025               	addwfc	??_display_rpm+1,w,c
  1701  0016A8  6E18               	movwf	wr16@addr+1,c
  1702  0016AA  0E10               	movlw	16
  1703  0016AC  2026               	addwfc	??_display_rpm+2,w,c
  1704  0016AE  6E19               	movwf	wr16@addr+2,c
  1705  0016B0  0E00               	movlw	0
  1706  0016B2  6E1B               	movwf	wr16@value+1,c
  1707  0016B4  0E3A               	movlw	58
  1708  0016B6  6E1A               	movwf	wr16@value,c
  1709  0016B8  EC33  F01A         	call	_wr16	;wreg free
  1710  0016BC  0E02               	movlw	2
  1711  0016BE  EC98  F01A         	call	_cmd_incrementn
  1712  0016C2  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1713  0016C6  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1714  0016CA  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1715  0016CC  0E00               	movlw	0
  1716  0016CE  2424               	addwf	??_display_rpm,w,c
  1717  0016D0  6E17               	movwf	wr16@addr,c
  1718  0016D2  0E80               	movlw	128
  1719  0016D4  2025               	addwfc	??_display_rpm+1,w,c
  1720  0016D6  6E18               	movwf	wr16@addr+1,c
  1721  0016D8  0E10               	movlw	16
  1722  0016DA  2026               	addwfc	??_display_rpm+2,w,c
  1723  0016DC  6E19               	movwf	wr16@addr+2,c
  1724  0016DE  0E00               	movlw	0
  1725  0016E0  6E1B               	movwf	wr16@value+1,c
  1726  0016E2  0E1C               	movlw	28
  1727  0016E4  6E1A               	movwf	wr16@value,c
  1728  0016E6  EC33  F01A         	call	_wr16	;wreg free
  1729  0016EA  0E02               	movlw	2
  1730  0016EC  EC98  F01A         	call	_cmd_incrementn
  1731  0016F0  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1732  0016F4  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1733  0016F8  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1734  0016FA  0E00               	movlw	0
  1735  0016FC  2424               	addwf	??_display_rpm,w,c
  1736  0016FE  6E17               	movwf	wr16@addr,c
  1737  001700  0E80               	movlw	128
  1738  001702  2025               	addwfc	??_display_rpm+1,w,c
  1739  001704  6E18               	movwf	wr16@addr+1,c
  1740  001706  0E10               	movlw	16
  1741  001708  2026               	addwfc	??_display_rpm+2,w,c
  1742  00170A  6E19               	movwf	wr16@addr+2,c
  1743  00170C  0E00               	movlw	0
  1744  00170E  6E1B               	movwf	wr16@value+1,c
  1745  001710  0E00               	movlw	0
  1746  001712  6E1A               	movwf	wr16@value,c
  1747  001714  EC33  F01A         	call	_wr16	;wreg free
  1748  001718  0E02               	movlw	2
  1749  00171A  EC98  F01A         	call	_cmd_incrementn
  1750  00171E  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1751  001722  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1752  001726  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1753  001728  0E00               	movlw	0
  1754  00172A  2424               	addwf	??_display_rpm,w,c
  1755  00172C  6E15               	movwf	wr8s@addr,c
  1756  00172E  0E80               	movlw	128
  1757  001730  2025               	addwfc	??_display_rpm+1,w,c
  1758  001732  6E16               	movwf	wr8s@addr+1,c
  1759  001734  0E10               	movlw	16
  1760  001736  2026               	addwfc	??_display_rpm+2,w,c
  1761  001738  6E17               	movwf	wr8s@addr+2,c
  1762  00173A  0E29               	movlw	low (STR_11+2)
  1763  00173C  6E18               	movwf	wr8s@s,c
  1764  00173E  0E0F               	movlw	high (STR_11+2)
  1765  001740  6E19               	movwf	wr8s@s+1,c
  1766  001742  ECC2  F018         	call	_wr8s	;wreg free
  1767  001746  EC98  F01A         	call	_cmd_incrementn
  1768                           
  1769                           ;display.c: 56: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 201);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 33);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_
      +                          of
  1770  00174A  0E0C               	movlw	12
  1771  00174C  6E1B               	movwf	cmd@command,c
  1772  00174E  0EFF               	movlw	255
  1773  001750  6E1C               	movwf	cmd@command+1,c
  1774  001752  0EFF               	movlw	255
  1775  001754  6E1D               	movwf	cmd@command+2,c
  1776  001756  0EFF               	movlw	255
  1777  001758  6E1E               	movwf	cmd@command+3,c
  1778  00175A  EC51  F01A         	call	_cmd	;wreg free
  1779  00175E  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1780  001762  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1781  001766  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1782  001768  0E00               	movlw	0
  1783  00176A  2424               	addwf	??_display_rpm,w,c
  1784  00176C  6E17               	movwf	wr16@addr,c
  1785  00176E  0E80               	movlw	128
  1786  001770  2025               	addwfc	??_display_rpm+1,w,c
  1787  001772  6E18               	movwf	wr16@addr+1,c
  1788  001774  0E10               	movlw	16
  1789  001776  2026               	addwfc	??_display_rpm+2,w,c
  1790  001778  6E19               	movwf	wr16@addr+2,c
  1791  00177A  0E00               	movlw	0
  1792  00177C  6E1B               	movwf	wr16@value+1,c
  1793  00177E  0EC9               	movlw	201
  1794  001780  6E1A               	movwf	wr16@value,c
  1795  001782  EC33  F01A         	call	_wr16	;wreg free
  1796  001786  0E02               	movlw	2
  1797  001788  EC98  F01A         	call	_cmd_incrementn
  1798  00178C  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1799  001790  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1800  001794  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1801  001796  0E00               	movlw	0
  1802  001798  2424               	addwf	??_display_rpm,w,c
  1803  00179A  6E17               	movwf	wr16@addr,c
  1804  00179C  0E80               	movlw	128
  1805  00179E  2025               	addwfc	??_display_rpm+1,w,c
  1806  0017A0  6E18               	movwf	wr16@addr+1,c
  1807  0017A2  0E10               	movlw	16
  1808  0017A4  2026               	addwfc	??_display_rpm+2,w,c
  1809  0017A6  6E19               	movwf	wr16@addr+2,c
  1810  0017A8  0E00               	movlw	0
  1811  0017AA  6E1B               	movwf	wr16@value+1,c
  1812  0017AC  0E21               	movlw	33
  1813  0017AE  6E1A               	movwf	wr16@value,c
  1814  0017B0  EC33  F01A         	call	_wr16	;wreg free
  1815  0017B4  0E02               	movlw	2
  1816  0017B6  EC98  F01A         	call	_cmd_incrementn
  1817  0017BA  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1818  0017BE  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1819  0017C2  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1820  0017C4  0E00               	movlw	0
  1821  0017C6  2424               	addwf	??_display_rpm,w,c
  1822  0017C8  6E17               	movwf	wr16@addr,c
  1823  0017CA  0E80               	movlw	128
  1824  0017CC  2025               	addwfc	??_display_rpm+1,w,c
  1825  0017CE  6E18               	movwf	wr16@addr+1,c
  1826  0017D0  0E10               	movlw	16
  1827  0017D2  2026               	addwfc	??_display_rpm+2,w,c
  1828  0017D4  6E19               	movwf	wr16@addr+2,c
  1829  0017D6  0E00               	movlw	0
  1830  0017D8  6E1B               	movwf	wr16@value+1,c
  1831  0017DA  0E1C               	movlw	28
  1832  0017DC  6E1A               	movwf	wr16@value,c
  1833  0017DE  EC33  F01A         	call	_wr16	;wreg free
  1834  0017E2  0E02               	movlw	2
  1835  0017E4  EC98  F01A         	call	_cmd_incrementn
  1836  0017E8  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1837  0017EC  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1838  0017F0  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1839  0017F2  0E00               	movlw	0
  1840  0017F4  2424               	addwf	??_display_rpm,w,c
  1841  0017F6  6E17               	movwf	wr16@addr,c
  1842  0017F8  0E80               	movlw	128
  1843  0017FA  2025               	addwfc	??_display_rpm+1,w,c
  1844  0017FC  6E18               	movwf	wr16@addr+1,c
  1845  0017FE  0E10               	movlw	16
  1846  001800  2026               	addwfc	??_display_rpm+2,w,c
  1847  001802  6E19               	movwf	wr16@addr+2,c
  1848  001804  0E00               	movlw	0
  1849  001806  6E1B               	movwf	wr16@value+1,c
  1850  001808  0E00               	movlw	0
  1851  00180A  6E1A               	movwf	wr16@value,c
  1852  00180C  EC33  F01A         	call	_wr16	;wreg free
  1853  001810  0E02               	movlw	2
  1854  001812  EC98  F01A         	call	_cmd_incrementn
  1855  001816  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1856  00181A  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1857  00181E  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1858  001820  0E00               	movlw	0
  1859  001822  2424               	addwf	??_display_rpm,w,c
  1860  001824  6E15               	movwf	wr8s@addr,c
  1861  001826  0E80               	movlw	128
  1862  001828  2025               	addwfc	??_display_rpm+1,w,c
  1863  00182A  6E16               	movwf	wr8s@addr+1,c
  1864  00182C  0E10               	movlw	16
  1865  00182E  2026               	addwfc	??_display_rpm+2,w,c
  1866  001830  6E17               	movwf	wr8s@addr+2,c
  1867  001832  0E40               	movlw	low STR_16
  1868  001834  6E18               	movwf	wr8s@s,c
  1869  001836  0E0F               	movlw	high STR_16
  1870  001838  6E19               	movwf	wr8s@s+1,c
  1871  00183A  ECC2  F018         	call	_wr8s	;wreg free
  1872  00183E  EC98  F01A         	call	_cmd_incrementn
  1873                           
  1874                           ;display.c: 57: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 235);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 26);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_
      +                          of
  1875  001842  0E0C               	movlw	12
  1876  001844  6E1B               	movwf	cmd@command,c
  1877  001846  0EFF               	movlw	255
  1878  001848  6E1C               	movwf	cmd@command+1,c
  1879  00184A  0EFF               	movlw	255
  1880  00184C  6E1D               	movwf	cmd@command+2,c
  1881  00184E  0EFF               	movlw	255
  1882  001850  6E1E               	movwf	cmd@command+3,c
  1883  001852  EC51  F01A         	call	_cmd	;wreg free
  1884  001856  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1885  00185A  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1886  00185E  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1887  001860  0E00               	movlw	0
  1888  001862  2424               	addwf	??_display_rpm,w,c
  1889  001864  6E17               	movwf	wr16@addr,c
  1890  001866  0E80               	movlw	128
  1891  001868  2025               	addwfc	??_display_rpm+1,w,c
  1892  00186A  6E18               	movwf	wr16@addr+1,c
  1893  00186C  0E10               	movlw	16
  1894  00186E  2026               	addwfc	??_display_rpm+2,w,c
  1895  001870  6E19               	movwf	wr16@addr+2,c
  1896  001872  0E00               	movlw	0
  1897  001874  6E1B               	movwf	wr16@value+1,c
  1898  001876  0EEB               	movlw	235
  1899  001878  6E1A               	movwf	wr16@value,c
  1900  00187A  EC33  F01A         	call	_wr16	;wreg free
  1901  00187E  0E02               	movlw	2
  1902  001880  EC98  F01A         	call	_cmd_incrementn
  1903  001884  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1904  001888  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1905  00188C  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1906  00188E  0E00               	movlw	0
  1907  001890  2424               	addwf	??_display_rpm,w,c
  1908  001892  6E17               	movwf	wr16@addr,c
  1909  001894  0E80               	movlw	128
  1910  001896  2025               	addwfc	??_display_rpm+1,w,c
  1911  001898  6E18               	movwf	wr16@addr+1,c
  1912  00189A  0E10               	movlw	16
  1913  00189C  2026               	addwfc	??_display_rpm+2,w,c
  1914  00189E  6E19               	movwf	wr16@addr+2,c
  1915  0018A0  0E00               	movlw	0
  1916  0018A2  6E1B               	movwf	wr16@value+1,c
  1917  0018A4  0E1A               	movlw	26
  1918  0018A6  6E1A               	movwf	wr16@value,c
  1919  0018A8  EC33  F01A         	call	_wr16	;wreg free
  1920  0018AC  0E02               	movlw	2
  1921  0018AE  EC98  F01A         	call	_cmd_incrementn
  1922  0018B2  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1923  0018B6  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1924  0018BA  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1925  0018BC  0E00               	movlw	0
  1926  0018BE  2424               	addwf	??_display_rpm,w,c
  1927  0018C0  6E17               	movwf	wr16@addr,c
  1928  0018C2  0E80               	movlw	128
  1929  0018C4  2025               	addwfc	??_display_rpm+1,w,c
  1930  0018C6  6E18               	movwf	wr16@addr+1,c
  1931  0018C8  0E10               	movlw	16
  1932  0018CA  2026               	addwfc	??_display_rpm+2,w,c
  1933  0018CC  6E19               	movwf	wr16@addr+2,c
  1934  0018CE  0E00               	movlw	0
  1935  0018D0  6E1B               	movwf	wr16@value+1,c
  1936  0018D2  0E1C               	movlw	28
  1937  0018D4  6E1A               	movwf	wr16@value,c
  1938  0018D6  EC33  F01A         	call	_wr16	;wreg free
  1939  0018DA  0E02               	movlw	2
  1940  0018DC  EC98  F01A         	call	_cmd_incrementn
  1941  0018E0  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1942  0018E4  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1943  0018E8  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1944  0018EA  0E00               	movlw	0
  1945  0018EC  2424               	addwf	??_display_rpm,w,c
  1946  0018EE  6E17               	movwf	wr16@addr,c
  1947  0018F0  0E80               	movlw	128
  1948  0018F2  2025               	addwfc	??_display_rpm+1,w,c
  1949  0018F4  6E18               	movwf	wr16@addr+1,c
  1950  0018F6  0E10               	movlw	16
  1951  0018F8  2026               	addwfc	??_display_rpm+2,w,c
  1952  0018FA  6E19               	movwf	wr16@addr+2,c
  1953  0018FC  0E00               	movlw	0
  1954  0018FE  6E1B               	movwf	wr16@value+1,c
  1955  001900  0E00               	movlw	0
  1956  001902  6E1A               	movwf	wr16@value,c
  1957  001904  EC33  F01A         	call	_wr16	;wreg free
  1958  001908  0E02               	movlw	2
  1959  00190A  EC98  F01A         	call	_cmd_incrementn
  1960  00190E  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1961  001912  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1962  001916  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1963  001918  0E00               	movlw	0
  1964  00191A  2424               	addwf	??_display_rpm,w,c
  1965  00191C  6E15               	movwf	wr8s@addr,c
  1966  00191E  0E80               	movlw	128
  1967  001920  2025               	addwfc	??_display_rpm+1,w,c
  1968  001922  6E16               	movwf	wr8s@addr+1,c
  1969  001924  0E10               	movlw	16
  1970  001926  2026               	addwfc	??_display_rpm+2,w,c
  1971  001928  6E17               	movwf	wr8s@addr+2,c
  1972  00192A  0E42               	movlw	low STR_17
  1973  00192C  6E18               	movwf	wr8s@s,c
  1974  00192E  0E0F               	movlw	high STR_17
  1975  001930  6E19               	movwf	wr8s@s+1,c
  1976  001932  ECC2  F018         	call	_wr8s	;wreg free
  1977  001936  EC98  F01A         	call	_cmd_incrementn
  1978                           
  1979                           ;display.c: 58: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 269);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 33);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_
      +                          of
  1980  00193A  0E0C               	movlw	12
  1981  00193C  6E1B               	movwf	cmd@command,c
  1982  00193E  0EFF               	movlw	255
  1983  001940  6E1C               	movwf	cmd@command+1,c
  1984  001942  0EFF               	movlw	255
  1985  001944  6E1D               	movwf	cmd@command+2,c
  1986  001946  0EFF               	movlw	255
  1987  001948  6E1E               	movwf	cmd@command+3,c
  1988  00194A  EC51  F01A         	call	_cmd	;wreg free
  1989  00194E  C02B  F024         	movff	_cmd_offset,??_display_rpm
  1990  001952  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  1991  001956  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  1992  001958  0E00               	movlw	0
  1993  00195A  2424               	addwf	??_display_rpm,w,c
  1994  00195C  6E17               	movwf	wr16@addr,c
  1995  00195E  0E80               	movlw	128
  1996  001960  2025               	addwfc	??_display_rpm+1,w,c
  1997  001962  6E18               	movwf	wr16@addr+1,c
  1998  001964  0E10               	movlw	16
  1999  001966  2026               	addwfc	??_display_rpm+2,w,c
  2000  001968  6E19               	movwf	wr16@addr+2,c
  2001  00196A  0E01               	movlw	1
  2002  00196C  6E1B               	movwf	wr16@value+1,c
  2003  00196E  0E0D               	movlw	13
  2004  001970  6E1A               	movwf	wr16@value,c
  2005  001972  EC33  F01A         	call	_wr16	;wreg free
  2006  001976  0E02               	movlw	2
  2007  001978  EC98  F01A         	call	_cmd_incrementn
  2008  00197C  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2009  001980  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2010  001984  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2011  001986  0E00               	movlw	0
  2012  001988  2424               	addwf	??_display_rpm,w,c
  2013  00198A  6E17               	movwf	wr16@addr,c
  2014  00198C  0E80               	movlw	128
  2015  00198E  2025               	addwfc	??_display_rpm+1,w,c
  2016  001990  6E18               	movwf	wr16@addr+1,c
  2017  001992  0E10               	movlw	16
  2018  001994  2026               	addwfc	??_display_rpm+2,w,c
  2019  001996  6E19               	movwf	wr16@addr+2,c
  2020  001998  0E00               	movlw	0
  2021  00199A  6E1B               	movwf	wr16@value+1,c
  2022  00199C  0E21               	movlw	33
  2023  00199E  6E1A               	movwf	wr16@value,c
  2024  0019A0  EC33  F01A         	call	_wr16	;wreg free
  2025  0019A4  0E02               	movlw	2
  2026  0019A6  EC98  F01A         	call	_cmd_incrementn
  2027  0019AA  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2028  0019AE  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2029  0019B2  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2030  0019B4  0E00               	movlw	0
  2031  0019B6  2424               	addwf	??_display_rpm,w,c
  2032  0019B8  6E17               	movwf	wr16@addr,c
  2033  0019BA  0E80               	movlw	128
  2034  0019BC  2025               	addwfc	??_display_rpm+1,w,c
  2035  0019BE  6E18               	movwf	wr16@addr+1,c
  2036  0019C0  0E10               	movlw	16
  2037  0019C2  2026               	addwfc	??_display_rpm+2,w,c
  2038  0019C4  6E19               	movwf	wr16@addr+2,c
  2039  0019C6  0E00               	movlw	0
  2040  0019C8  6E1B               	movwf	wr16@value+1,c
  2041  0019CA  0E1C               	movlw	28
  2042  0019CC  6E1A               	movwf	wr16@value,c
  2043  0019CE  EC33  F01A         	call	_wr16	;wreg free
  2044  0019D2  0E02               	movlw	2
  2045  0019D4  EC98  F01A         	call	_cmd_incrementn
  2046  0019D8  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2047  0019DC  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2048  0019E0  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2049  0019E2  0E00               	movlw	0
  2050  0019E4  2424               	addwf	??_display_rpm,w,c
  2051  0019E6  6E17               	movwf	wr16@addr,c
  2052  0019E8  0E80               	movlw	128
  2053  0019EA  2025               	addwfc	??_display_rpm+1,w,c
  2054  0019EC  6E18               	movwf	wr16@addr+1,c
  2055  0019EE  0E10               	movlw	16
  2056  0019F0  2026               	addwfc	??_display_rpm+2,w,c
  2057  0019F2  6E19               	movwf	wr16@addr+2,c
  2058  0019F4  0E00               	movlw	0
  2059  0019F6  6E1B               	movwf	wr16@value+1,c
  2060  0019F8  0E00               	movlw	0
  2061  0019FA  6E1A               	movwf	wr16@value,c
  2062  0019FC  EC33  F01A         	call	_wr16	;wreg free
  2063  001A00  0E02               	movlw	2
  2064  001A02  EC98  F01A         	call	_cmd_incrementn
  2065  001A06  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2066  001A0A  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2067  001A0E  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2068  001A10  0E00               	movlw	0
  2069  001A12  2424               	addwf	??_display_rpm,w,c
  2070  001A14  6E15               	movwf	wr8s@addr,c
  2071  001A16  0E80               	movlw	128
  2072  001A18  2025               	addwfc	??_display_rpm+1,w,c
  2073  001A1A  6E16               	movwf	wr8s@addr+1,c
  2074  001A1C  0E10               	movlw	16
  2075  001A1E  2026               	addwfc	??_display_rpm+2,w,c
  2076  001A20  6E17               	movwf	wr8s@addr+2,c
  2077  001A22  0E44               	movlw	low STR_18
  2078  001A24  6E18               	movwf	wr8s@s,c
  2079  001A26  0E0F               	movlw	high STR_18
  2080  001A28  6E19               	movwf	wr8s@s+1,c
  2081  001A2A  ECC2  F018         	call	_wr8s	;wreg free
  2082  001A2E  EC98  F01A         	call	_cmd_incrementn
  2083                           
  2084                           ;display.c: 59: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 298);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 58);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_
      +                          of
  2085  001A32  0E0C               	movlw	12
  2086  001A34  6E1B               	movwf	cmd@command,c
  2087  001A36  0EFF               	movlw	255
  2088  001A38  6E1C               	movwf	cmd@command+1,c
  2089  001A3A  0EFF               	movlw	255
  2090  001A3C  6E1D               	movwf	cmd@command+2,c
  2091  001A3E  0EFF               	movlw	255
  2092  001A40  6E1E               	movwf	cmd@command+3,c
  2093  001A42  EC51  F01A         	call	_cmd	;wreg free
  2094  001A46  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2095  001A4A  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2096  001A4E  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2097  001A50  0E00               	movlw	0
  2098  001A52  2424               	addwf	??_display_rpm,w,c
  2099  001A54  6E17               	movwf	wr16@addr,c
  2100  001A56  0E80               	movlw	128
  2101  001A58  2025               	addwfc	??_display_rpm+1,w,c
  2102  001A5A  6E18               	movwf	wr16@addr+1,c
  2103  001A5C  0E10               	movlw	16
  2104  001A5E  2026               	addwfc	??_display_rpm+2,w,c
  2105  001A60  6E19               	movwf	wr16@addr+2,c
  2106  001A62  0E01               	movlw	1
  2107  001A64  6E1B               	movwf	wr16@value+1,c
  2108  001A66  0E2A               	movlw	42
  2109  001A68  6E1A               	movwf	wr16@value,c
  2110  001A6A  EC33  F01A         	call	_wr16	;wreg free
  2111  001A6E  0E02               	movlw	2
  2112  001A70  EC98  F01A         	call	_cmd_incrementn
  2113  001A74  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2114  001A78  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2115  001A7C  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2116  001A7E  0E00               	movlw	0
  2117  001A80  2424               	addwf	??_display_rpm,w,c
  2118  001A82  6E17               	movwf	wr16@addr,c
  2119  001A84  0E80               	movlw	128
  2120  001A86  2025               	addwfc	??_display_rpm+1,w,c
  2121  001A88  6E18               	movwf	wr16@addr+1,c
  2122  001A8A  0E10               	movlw	16
  2123  001A8C  2026               	addwfc	??_display_rpm+2,w,c
  2124  001A8E  6E19               	movwf	wr16@addr+2,c
  2125  001A90  0E00               	movlw	0
  2126  001A92  6E1B               	movwf	wr16@value+1,c
  2127  001A94  0E3A               	movlw	58
  2128  001A96  6E1A               	movwf	wr16@value,c
  2129  001A98  EC33  F01A         	call	_wr16	;wreg free
  2130  001A9C  0E02               	movlw	2
  2131  001A9E  EC98  F01A         	call	_cmd_incrementn
  2132  001AA2  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2133  001AA6  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2134  001AAA  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2135  001AAC  0E00               	movlw	0
  2136  001AAE  2424               	addwf	??_display_rpm,w,c
  2137  001AB0  6E17               	movwf	wr16@addr,c
  2138  001AB2  0E80               	movlw	128
  2139  001AB4  2025               	addwfc	??_display_rpm+1,w,c
  2140  001AB6  6E18               	movwf	wr16@addr+1,c
  2141  001AB8  0E10               	movlw	16
  2142  001ABA  2026               	addwfc	??_display_rpm+2,w,c
  2143  001ABC  6E19               	movwf	wr16@addr+2,c
  2144  001ABE  0E00               	movlw	0
  2145  001AC0  6E1B               	movwf	wr16@value+1,c
  2146  001AC2  0E1C               	movlw	28
  2147  001AC4  6E1A               	movwf	wr16@value,c
  2148  001AC6  EC33  F01A         	call	_wr16	;wreg free
  2149  001ACA  0E02               	movlw	2
  2150  001ACC  EC98  F01A         	call	_cmd_incrementn
  2151  001AD0  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2152  001AD4  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2153  001AD8  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2154  001ADA  0E00               	movlw	0
  2155  001ADC  2424               	addwf	??_display_rpm,w,c
  2156  001ADE  6E17               	movwf	wr16@addr,c
  2157  001AE0  0E80               	movlw	128
  2158  001AE2  2025               	addwfc	??_display_rpm+1,w,c
  2159  001AE4  6E18               	movwf	wr16@addr+1,c
  2160  001AE6  0E10               	movlw	16
  2161  001AE8  2026               	addwfc	??_display_rpm+2,w,c
  2162  001AEA  6E19               	movwf	wr16@addr+2,c
  2163  001AEC  0E00               	movlw	0
  2164  001AEE  6E1B               	movwf	wr16@value+1,c
  2165  001AF0  0E00               	movlw	0
  2166  001AF2  6E1A               	movwf	wr16@value,c
  2167  001AF4  EC33  F01A         	call	_wr16	;wreg free
  2168  001AF8  0E02               	movlw	2
  2169  001AFA  EC98  F01A         	call	_cmd_incrementn
  2170  001AFE  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2171  001B02  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2172  001B06  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2173  001B08  0E00               	movlw	0
  2174  001B0A  2424               	addwf	??_display_rpm,w,c
  2175  001B0C  6E15               	movwf	wr8s@addr,c
  2176  001B0E  0E80               	movlw	128
  2177  001B10  2025               	addwfc	??_display_rpm+1,w,c
  2178  001B12  6E16               	movwf	wr8s@addr+1,c
  2179  001B14  0E10               	movlw	16
  2180  001B16  2026               	addwfc	??_display_rpm+2,w,c
  2181  001B18  6E17               	movwf	wr8s@addr+2,c
  2182  001B1A  0E46               	movlw	low STR_19
  2183  001B1C  6E18               	movwf	wr8s@s,c
  2184  001B1E  0E0F               	movlw	high STR_19
  2185  001B20  6E19               	movwf	wr8s@s+1,c
  2186  001B22  ECC2  F018         	call	_wr8s	;wreg free
  2187  001B26  EC98  F01A         	call	_cmd_incrementn
  2188                           
  2189                           ;display.c: 60: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 301);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 92);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_incremen
      +                          tn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd_
      +                          of
  2190  001B2A  0E0C               	movlw	12
  2191  001B2C  6E1B               	movwf	cmd@command,c
  2192  001B2E  0EFF               	movlw	255
  2193  001B30  6E1C               	movwf	cmd@command+1,c
  2194  001B32  0EFF               	movlw	255
  2195  001B34  6E1D               	movwf	cmd@command+2,c
  2196  001B36  0EFF               	movlw	255
  2197  001B38  6E1E               	movwf	cmd@command+3,c
  2198  001B3A  EC51  F01A         	call	_cmd	;wreg free
  2199  001B3E  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2200  001B42  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2201  001B46  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2202  001B48  0E00               	movlw	0
  2203  001B4A  2424               	addwf	??_display_rpm,w,c
  2204  001B4C  6E17               	movwf	wr16@addr,c
  2205  001B4E  0E80               	movlw	128
  2206  001B50  2025               	addwfc	??_display_rpm+1,w,c
  2207  001B52  6E18               	movwf	wr16@addr+1,c
  2208  001B54  0E10               	movlw	16
  2209  001B56  2026               	addwfc	??_display_rpm+2,w,c
  2210  001B58  6E19               	movwf	wr16@addr+2,c
  2211  001B5A  0E01               	movlw	1
  2212  001B5C  6E1B               	movwf	wr16@value+1,c
  2213  001B5E  0E2D               	movlw	45
  2214  001B60  6E1A               	movwf	wr16@value,c
  2215  001B62  EC33  F01A         	call	_wr16	;wreg free
  2216  001B66  0E02               	movlw	2
  2217  001B68  EC98  F01A         	call	_cmd_incrementn
  2218  001B6C  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2219  001B70  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2220  001B74  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2221  001B76  0E00               	movlw	0
  2222  001B78  2424               	addwf	??_display_rpm,w,c
  2223  001B7A  6E17               	movwf	wr16@addr,c
  2224  001B7C  0E80               	movlw	128
  2225  001B7E  2025               	addwfc	??_display_rpm+1,w,c
  2226  001B80  6E18               	movwf	wr16@addr+1,c
  2227  001B82  0E10               	movlw	16
  2228  001B84  2026               	addwfc	??_display_rpm+2,w,c
  2229  001B86  6E19               	movwf	wr16@addr+2,c
  2230  001B88  0E00               	movlw	0
  2231  001B8A  6E1B               	movwf	wr16@value+1,c
  2232  001B8C  0E5C               	movlw	92
  2233  001B8E  6E1A               	movwf	wr16@value,c
  2234  001B90  EC33  F01A         	call	_wr16	;wreg free
  2235  001B94  0E02               	movlw	2
  2236  001B96  EC98  F01A         	call	_cmd_incrementn
  2237  001B9A  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2238  001B9E  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2239  001BA2  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2240  001BA4  0E00               	movlw	0
  2241  001BA6  2424               	addwf	??_display_rpm,w,c
  2242  001BA8  6E17               	movwf	wr16@addr,c
  2243  001BAA  0E80               	movlw	128
  2244  001BAC  2025               	addwfc	??_display_rpm+1,w,c
  2245  001BAE  6E18               	movwf	wr16@addr+1,c
  2246  001BB0  0E10               	movlw	16
  2247  001BB2  2026               	addwfc	??_display_rpm+2,w,c
  2248  001BB4  6E19               	movwf	wr16@addr+2,c
  2249  001BB6  0E00               	movlw	0
  2250  001BB8  6E1B               	movwf	wr16@value+1,c
  2251  001BBA  0E1C               	movlw	28
  2252  001BBC  6E1A               	movwf	wr16@value,c
  2253  001BBE  EC33  F01A         	call	_wr16	;wreg free
  2254  001BC2  0E02               	movlw	2
  2255  001BC4  EC98  F01A         	call	_cmd_incrementn
  2256  001BC8  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2257  001BCC  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2258  001BD0  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2259  001BD2  0E00               	movlw	0
  2260  001BD4  2424               	addwf	??_display_rpm,w,c
  2261  001BD6  6E17               	movwf	wr16@addr,c
  2262  001BD8  0E80               	movlw	128
  2263  001BDA  2025               	addwfc	??_display_rpm+1,w,c
  2264  001BDC  6E18               	movwf	wr16@addr+1,c
  2265  001BDE  0E10               	movlw	16
  2266  001BE0  2026               	addwfc	??_display_rpm+2,w,c
  2267  001BE2  6E19               	movwf	wr16@addr+2,c
  2268  001BE4  0E00               	movlw	0
  2269  001BE6  6E1B               	movwf	wr16@value+1,c
  2270  001BE8  0E00               	movlw	0
  2271  001BEA  6E1A               	movwf	wr16@value,c
  2272  001BEC  EC33  F01A         	call	_wr16	;wreg free
  2273  001BF0  0E02               	movlw	2
  2274  001BF2  EC98  F01A         	call	_cmd_incrementn
  2275  001BF6  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2276  001BFA  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2277  001BFE  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2278  001C00  0E00               	movlw	0
  2279  001C02  2424               	addwf	??_display_rpm,w,c
  2280  001C04  6E15               	movwf	wr8s@addr,c
  2281  001C06  0E80               	movlw	128
  2282  001C08  2025               	addwfc	??_display_rpm+1,w,c
  2283  001C0A  6E16               	movwf	wr8s@addr+1,c
  2284  001C0C  0E10               	movlw	16
  2285  001C0E  2026               	addwfc	??_display_rpm+2,w,c
  2286  001C10  6E17               	movwf	wr8s@addr+2,c
  2287  001C12  0E33               	movlw	low STR_20
  2288  001C14  6E18               	movwf	wr8s@s,c
  2289  001C16  0E0F               	movlw	high STR_20
  2290  001C18  6E19               	movwf	wr8s@s+1,c
  2291  001C1A  ECC2  F018         	call	_wr8s	;wreg free
  2292  001C1E  EC98  F01A         	call	_cmd_incrementn
  2293                           
  2294                           ;display.c: 61: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 299);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 130);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _o
  2295  001C22  0E0C               	movlw	12
  2296  001C24  6E1B               	movwf	cmd@command,c
  2297  001C26  0EFF               	movlw	255
  2298  001C28  6E1C               	movwf	cmd@command+1,c
  2299  001C2A  0EFF               	movlw	255
  2300  001C2C  6E1D               	movwf	cmd@command+2,c
  2301  001C2E  0EFF               	movlw	255
  2302  001C30  6E1E               	movwf	cmd@command+3,c
  2303  001C32  EC51  F01A         	call	_cmd	;wreg free
  2304  001C36  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2305  001C3A  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2306  001C3E  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2307  001C40  0E00               	movlw	0
  2308  001C42  2424               	addwf	??_display_rpm,w,c
  2309  001C44  6E17               	movwf	wr16@addr,c
  2310  001C46  0E80               	movlw	128
  2311  001C48  2025               	addwfc	??_display_rpm+1,w,c
  2312  001C4A  6E18               	movwf	wr16@addr+1,c
  2313  001C4C  0E10               	movlw	16
  2314  001C4E  2026               	addwfc	??_display_rpm+2,w,c
  2315  001C50  6E19               	movwf	wr16@addr+2,c
  2316  001C52  0E01               	movlw	1
  2317  001C54  6E1B               	movwf	wr16@value+1,c
  2318  001C56  0E2B               	movlw	43
  2319  001C58  6E1A               	movwf	wr16@value,c
  2320  001C5A  EC33  F01A         	call	_wr16	;wreg free
  2321  001C5E  0E02               	movlw	2
  2322  001C60  EC98  F01A         	call	_cmd_incrementn
  2323  001C64  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2324  001C68  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2325  001C6C  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2326  001C6E  0E00               	movlw	0
  2327  001C70  2424               	addwf	??_display_rpm,w,c
  2328  001C72  6E17               	movwf	wr16@addr,c
  2329  001C74  0E80               	movlw	128
  2330  001C76  2025               	addwfc	??_display_rpm+1,w,c
  2331  001C78  6E18               	movwf	wr16@addr+1,c
  2332  001C7A  0E10               	movlw	16
  2333  001C7C  2026               	addwfc	??_display_rpm+2,w,c
  2334  001C7E  6E19               	movwf	wr16@addr+2,c
  2335  001C80  0E00               	movlw	0
  2336  001C82  6E1B               	movwf	wr16@value+1,c
  2337  001C84  0E82               	movlw	130
  2338  001C86  6E1A               	movwf	wr16@value,c
  2339  001C88  EC33  F01A         	call	_wr16	;wreg free
  2340  001C8C  0E02               	movlw	2
  2341  001C8E  EC98  F01A         	call	_cmd_incrementn
  2342  001C92  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2343  001C96  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2344  001C9A  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2345  001C9C  0E00               	movlw	0
  2346  001C9E  2424               	addwf	??_display_rpm,w,c
  2347  001CA0  6E17               	movwf	wr16@addr,c
  2348  001CA2  0E80               	movlw	128
  2349  001CA4  2025               	addwfc	??_display_rpm+1,w,c
  2350  001CA6  6E18               	movwf	wr16@addr+1,c
  2351  001CA8  0E10               	movlw	16
  2352  001CAA  2026               	addwfc	??_display_rpm+2,w,c
  2353  001CAC  6E19               	movwf	wr16@addr+2,c
  2354  001CAE  0E00               	movlw	0
  2355  001CB0  6E1B               	movwf	wr16@value+1,c
  2356  001CB2  0E1C               	movlw	28
  2357  001CB4  6E1A               	movwf	wr16@value,c
  2358  001CB6  EC33  F01A         	call	_wr16	;wreg free
  2359  001CBA  0E02               	movlw	2
  2360  001CBC  EC98  F01A         	call	_cmd_incrementn
  2361  001CC0  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2362  001CC4  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2363  001CC8  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2364  001CCA  0E00               	movlw	0
  2365  001CCC  2424               	addwf	??_display_rpm,w,c
  2366  001CCE  6E17               	movwf	wr16@addr,c
  2367  001CD0  0E80               	movlw	128
  2368  001CD2  2025               	addwfc	??_display_rpm+1,w,c
  2369  001CD4  6E18               	movwf	wr16@addr+1,c
  2370  001CD6  0E10               	movlw	16
  2371  001CD8  2026               	addwfc	??_display_rpm+2,w,c
  2372  001CDA  6E19               	movwf	wr16@addr+2,c
  2373  001CDC  0E00               	movlw	0
  2374  001CDE  6E1B               	movwf	wr16@value+1,c
  2375  001CE0  0E00               	movlw	0
  2376  001CE2  6E1A               	movwf	wr16@value,c
  2377  001CE4  EC33  F01A         	call	_wr16	;wreg free
  2378  001CE8  0E02               	movlw	2
  2379  001CEA  EC98  F01A         	call	_cmd_incrementn
  2380  001CEE  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2381  001CF2  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2382  001CF6  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2383  001CF8  0E00               	movlw	0
  2384  001CFA  2424               	addwf	??_display_rpm,w,c
  2385  001CFC  6E15               	movwf	wr8s@addr,c
  2386  001CFE  0E80               	movlw	128
  2387  001D00  2025               	addwfc	??_display_rpm+1,w,c
  2388  001D02  6E16               	movwf	wr8s@addr+1,c
  2389  001D04  0E10               	movlw	16
  2390  001D06  2026               	addwfc	??_display_rpm+2,w,c
  2391  001D08  6E17               	movwf	wr8s@addr+2,c
  2392  001D0A  0E36               	movlw	low STR_21
  2393  001D0C  6E18               	movwf	wr8s@s,c
  2394  001D0E  0E0F               	movlw	high STR_21
  2395  001D10  6E19               	movwf	wr8s@s+1,c
  2396  001D12  ECC2  F018         	call	_wr8s	;wreg free
  2397  001D16  EC98  F01A         	call	_cmd_incrementn
  2398                           
  2399                           ;display.c: 62: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 274);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 161);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 28);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _o
  2400  001D1A  0E0C               	movlw	12
  2401  001D1C  6E1B               	movwf	cmd@command,c
  2402  001D1E  0EFF               	movlw	255
  2403  001D20  6E1C               	movwf	cmd@command+1,c
  2404  001D22  0EFF               	movlw	255
  2405  001D24  6E1D               	movwf	cmd@command+2,c
  2406  001D26  0EFF               	movlw	255
  2407  001D28  6E1E               	movwf	cmd@command+3,c
  2408  001D2A  EC51  F01A         	call	_cmd	;wreg free
  2409  001D2E  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2410  001D32  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2411  001D36  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2412  001D38  0E00               	movlw	0
  2413  001D3A  2424               	addwf	??_display_rpm,w,c
  2414  001D3C  6E17               	movwf	wr16@addr,c
  2415  001D3E  0E80               	movlw	128
  2416  001D40  2025               	addwfc	??_display_rpm+1,w,c
  2417  001D42  6E18               	movwf	wr16@addr+1,c
  2418  001D44  0E10               	movlw	16
  2419  001D46  2026               	addwfc	??_display_rpm+2,w,c
  2420  001D48  6E19               	movwf	wr16@addr+2,c
  2421  001D4A  0E01               	movlw	1
  2422  001D4C  6E1B               	movwf	wr16@value+1,c
  2423  001D4E  0E12               	movlw	18
  2424  001D50  6E1A               	movwf	wr16@value,c
  2425  001D52  EC33  F01A         	call	_wr16	;wreg free
  2426  001D56  0E02               	movlw	2
  2427  001D58  EC98  F01A         	call	_cmd_incrementn
  2428  001D5C  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2429  001D60  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2430  001D64  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2431  001D66  0E00               	movlw	0
  2432  001D68  2424               	addwf	??_display_rpm,w,c
  2433  001D6A  6E17               	movwf	wr16@addr,c
  2434  001D6C  0E80               	movlw	128
  2435  001D6E  2025               	addwfc	??_display_rpm+1,w,c
  2436  001D70  6E18               	movwf	wr16@addr+1,c
  2437  001D72  0E10               	movlw	16
  2438  001D74  2026               	addwfc	??_display_rpm+2,w,c
  2439  001D76  6E19               	movwf	wr16@addr+2,c
  2440  001D78  0E00               	movlw	0
  2441  001D7A  6E1B               	movwf	wr16@value+1,c
  2442  001D7C  0EA1               	movlw	161
  2443  001D7E  6E1A               	movwf	wr16@value,c
  2444  001D80  EC33  F01A         	call	_wr16	;wreg free
  2445  001D84  0E02               	movlw	2
  2446  001D86  EC98  F01A         	call	_cmd_incrementn
  2447  001D8A  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2448  001D8E  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2449  001D92  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2450  001D94  0E00               	movlw	0
  2451  001D96  2424               	addwf	??_display_rpm,w,c
  2452  001D98  6E17               	movwf	wr16@addr,c
  2453  001D9A  0E80               	movlw	128
  2454  001D9C  2025               	addwfc	??_display_rpm+1,w,c
  2455  001D9E  6E18               	movwf	wr16@addr+1,c
  2456  001DA0  0E10               	movlw	16
  2457  001DA2  2026               	addwfc	??_display_rpm+2,w,c
  2458  001DA4  6E19               	movwf	wr16@addr+2,c
  2459  001DA6  0E00               	movlw	0
  2460  001DA8  6E1B               	movwf	wr16@value+1,c
  2461  001DAA  0E1C               	movlw	28
  2462  001DAC  6E1A               	movwf	wr16@value,c
  2463  001DAE  EC33  F01A         	call	_wr16	;wreg free
  2464  001DB2  0E02               	movlw	2
  2465  001DB4  EC98  F01A         	call	_cmd_incrementn
  2466  001DB8  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2467  001DBC  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2468  001DC0  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2469  001DC2  0E00               	movlw	0
  2470  001DC4  2424               	addwf	??_display_rpm,w,c
  2471  001DC6  6E17               	movwf	wr16@addr,c
  2472  001DC8  0E80               	movlw	128
  2473  001DCA  2025               	addwfc	??_display_rpm+1,w,c
  2474  001DCC  6E18               	movwf	wr16@addr+1,c
  2475  001DCE  0E10               	movlw	16
  2476  001DD0  2026               	addwfc	??_display_rpm+2,w,c
  2477  001DD2  6E19               	movwf	wr16@addr+2,c
  2478  001DD4  0E00               	movlw	0
  2479  001DD6  6E1B               	movwf	wr16@value+1,c
  2480  001DD8  0E00               	movlw	0
  2481  001DDA  6E1A               	movwf	wr16@value,c
  2482  001DDC  EC33  F01A         	call	_wr16	;wreg free
  2483  001DE0  0E02               	movlw	2
  2484  001DE2  EC98  F01A         	call	_cmd_incrementn
  2485  001DE6  C02B  F024         	movff	_cmd_offset,??_display_rpm
  2486  001DEA  C02C  F025         	movff	_cmd_offset+1,??_display_rpm+1
  2487  001DEE  6A26               	clrf	(??_display_rpm+2)& (0+255),c
  2488  001DF0  0E00               	movlw	0
  2489  001DF2  2424               	addwf	??_display_rpm,w,c
  2490  001DF4  6E15               	movwf	wr8s@addr,c
  2491  001DF6  0E80               	movlw	128
  2492  001DF8  2025               	addwfc	??_display_rpm+1,w,c
  2493  001DFA  6E16               	movwf	wr8s@addr+1,c
  2494  001DFC  0E10               	movlw	16
  2495  001DFE  2026               	addwfc	??_display_rpm+2,w,c
  2496  001E00  6E17               	movwf	wr8s@addr+2,c
  2497  001E02  0E39               	movlw	low STR_22
  2498  001E04  6E18               	movwf	wr8s@s,c
  2499  001E06  0E0F               	movlw	high STR_22
  2500  001E08  6E19               	movwf	wr8s@s+1,c
  2501  001E0A  ECC2  F018         	call	_wr8s	;wreg free
  2502  001E0E  EC98  F01A         	call	_cmd_incrementn
  2503  001E12  0012               	return		;funcret
  2504  001E14                     __end_of_display_rpm:
  2505                           	opt stack 0
  2506                           tblptru	equ	0xFF8
  2507                           wreg	equ	0xFE8
  2508                           
  2509 ;; *************** function ___awdiv *****************
  2510 ;; Defined at:
  2511 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  dividend        2   14[COMRAM] int 
  2514 ;;  divisor         2   16[COMRAM] int 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  quotient        2   20[COMRAM] int 
  2517 ;;  sign            1   19[COMRAM] unsigned char 
  2518 ;;  counter         1   18[COMRAM] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  2   14[COMRAM] int 
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2529 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2531 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2532 ;;Total ram usage:        8 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    4
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_display_rpm
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text4
  2543  003210                     __ptext4:
  2544                           	opt stack 0
  2545  003210                     ___awdiv:
  2546                           	opt stack 25
  2547                           
  2548                           ;incstack = 0
  2549  003210  0E00               	movlw	0
  2550  003212  6E14               	movwf	___awdiv@sign,c
  2551  003214  AE12               	btfss	___awdiv@divisor+1,7,c
  2552  003216  D006               	goto	l2503
  2553  003218  6C11               	negf	___awdiv@divisor,c
  2554  00321A  1E12               	comf	___awdiv@divisor+1,f,c
  2555  00321C  B0D8               	btfsc	status,0,c
  2556  00321E  2A12               	incf	___awdiv@divisor+1,f,c
  2557  003220  0E01               	movlw	1
  2558  003222  6E14               	movwf	___awdiv@sign,c
  2559  003224                     l2503:
  2560  003224  AE10               	btfss	___awdiv@dividend+1,7,c
  2561  003226  D006               	goto	l2509
  2562  003228  6C0F               	negf	___awdiv@dividend,c
  2563  00322A  1E10               	comf	___awdiv@dividend+1,f,c
  2564  00322C  B0D8               	btfsc	status,0,c
  2565  00322E  2A10               	incf	___awdiv@dividend+1,f,c
  2566  003230  0E01               	movlw	1
  2567  003232  1A14               	xorwf	___awdiv@sign,f,c
  2568  003234                     l2509:
  2569  003234  0E00               	movlw	0
  2570  003236  6E16               	movwf	___awdiv@quotient+1,c
  2571  003238  0E00               	movlw	0
  2572  00323A  6E15               	movwf	___awdiv@quotient,c
  2573  00323C  5011               	movf	___awdiv@divisor,w,c
  2574  00323E  1012               	iorwf	___awdiv@divisor+1,w,c
  2575  003240  B4D8               	btfsc	status,2,c
  2576  003242  D01C               	goto	l2531
  2577  003244  0E01               	movlw	1
  2578  003246  6E13               	movwf	___awdiv@counter,c
  2579  003248  D004               	goto	l2517
  2580  00324A                     l2515:
  2581  00324A  90D8               	bcf	status,0,c
  2582  00324C  3611               	rlcf	___awdiv@divisor,f,c
  2583  00324E  3612               	rlcf	___awdiv@divisor+1,f,c
  2584  003250  2A13               	incf	___awdiv@counter,f,c
  2585  003252                     l2517:
  2586  003252  AE12               	btfss	___awdiv@divisor+1,7,c
  2587  003254  D7FA               	goto	l2515
  2588  003256                     l2519:
  2589  003256  90D8               	bcf	status,0,c
  2590  003258  3615               	rlcf	___awdiv@quotient,f,c
  2591  00325A  3616               	rlcf	___awdiv@quotient+1,f,c
  2592  00325C  5011               	movf	___awdiv@divisor,w,c
  2593  00325E  5C0F               	subwf	___awdiv@dividend,w,c
  2594  003260  5012               	movf	___awdiv@divisor+1,w,c
  2595  003262  5810               	subwfb	___awdiv@dividend+1,w,c
  2596  003264  A0D8               	btfss	status,0,c
  2597  003266  D005               	goto	l2527
  2598  003268  5011               	movf	___awdiv@divisor,w,c
  2599  00326A  5E0F               	subwf	___awdiv@dividend,f,c
  2600  00326C  5012               	movf	___awdiv@divisor+1,w,c
  2601  00326E  5A10               	subwfb	___awdiv@dividend+1,f,c
  2602  003270  8015               	bsf	___awdiv@quotient,0,c
  2603  003272                     l2527:
  2604  003272  90D8               	bcf	status,0,c
  2605  003274  3212               	rrcf	___awdiv@divisor+1,f,c
  2606  003276  3211               	rrcf	___awdiv@divisor,f,c
  2607  003278  2E13               	decfsz	___awdiv@counter,f,c
  2608  00327A  D7ED               	goto	l2519
  2609  00327C                     l2531:
  2610  00327C  5014               	movf	___awdiv@sign,w,c
  2611  00327E  B4D8               	btfsc	status,2,c
  2612  003280  D004               	goto	l2535
  2613  003282  6C15               	negf	___awdiv@quotient,c
  2614  003284  1E16               	comf	___awdiv@quotient+1,f,c
  2615  003286  B0D8               	btfsc	status,0,c
  2616  003288  2A16               	incf	___awdiv@quotient+1,f,c
  2617  00328A                     l2535:
  2618  00328A  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  2619  00328E  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  2620  003292  0012               	return	
  2621  003294                     __end_of___awdiv:
  2622                           	opt stack 0
  2623                           tblptru	equ	0xFF8
  2624                           wreg	equ	0xFE8
  2625                           status	equ	0xFD8
  2626                           
  2627 ;; *************** function _display_labels *****************
  2628 ;; Defined at:
  2629 ;;		line 15 in file "display.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  y_start         2   36[COMRAM] int 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2645 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2646 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2647 ;;Total ram usage:        5 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    7
  2650 ;; This function calls:
  2651 ;;		_cmd
  2652 ;;		_cmd_incrementn
  2653 ;;		_wr16
  2654 ;;		_wr8s
  2655 ;; This function is called by:
  2656 ;;		_main
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text5
  2661  001E14                     __ptext5:
  2662                           	opt stack 0
  2663  001E14                     _display_labels:
  2664                           	opt stack 23
  2665                           
  2666                           ;display.c: 16: int y_start = 5;
  2667                           
  2668                           ;incstack = 0
  2669  001E14  0E00               	movlw	0
  2670  001E16  6E26               	movwf	display_labels@y_start+1,c
  2671  001E18  0E05               	movlw	5
  2672  001E1A  6E25               	movwf	display_labels@y_start,c
  2673                           
  2674                           ;display.c: 18: cmd(((4UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((255)&255UL)<<0)
      +                          ));
  2675  001E1C  0EFF               	movlw	255
  2676  001E1E  6E1B               	movwf	cmd@command,c
  2677  001E20  0EFF               	movlw	255
  2678  001E22  6E1C               	movwf	cmd@command+1,c
  2679  001E24  0EFF               	movlw	255
  2680  001E26  6E1D               	movwf	cmd@command+2,c
  2681  001E28  0E04               	movlw	4
  2682  001E2A  6E1E               	movwf	cmd@command+3,c
  2683  001E2C  EC51  F01A         	call	_cmd	;wreg free
  2684                           
  2685                           ;display.c: 19: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd_incre
      +                          mentn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+c
      +                          md
  2686  001E30  0E0C               	movlw	12
  2687  001E32  6E1B               	movwf	cmd@command,c
  2688  001E34  0EFF               	movlw	255
  2689  001E36  6E1C               	movwf	cmd@command+1,c
  2690  001E38  0EFF               	movlw	255
  2691  001E3A  6E1D               	movwf	cmd@command+2,c
  2692  001E3C  0EFF               	movlw	255
  2693  001E3E  6E1E               	movwf	cmd@command+3,c
  2694  001E40  EC51  F01A         	call	_cmd	;wreg free
  2695  001E44  C02B  F022         	movff	_cmd_offset,??_display_labels
  2696  001E48  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2697  001E4C  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2698  001E4E  0E00               	movlw	0
  2699  001E50  2422               	addwf	??_display_labels,w,c
  2700  001E52  6E17               	movwf	wr16@addr,c
  2701  001E54  0E80               	movlw	128
  2702  001E56  2023               	addwfc	??_display_labels+1,w,c
  2703  001E58  6E18               	movwf	wr16@addr+1,c
  2704  001E5A  0E10               	movlw	16
  2705  001E5C  2024               	addwfc	??_display_labels+2,w,c
  2706  001E5E  6E19               	movwf	wr16@addr+2,c
  2707  001E60  0E00               	movlw	0
  2708  001E62  6E1B               	movwf	wr16@value+1,c
  2709  001E64  0E05               	movlw	5
  2710  001E66  6E1A               	movwf	wr16@value,c
  2711  001E68  EC33  F01A         	call	_wr16	;wreg free
  2712  001E6C  0E02               	movlw	2
  2713  001E6E  EC98  F01A         	call	_cmd_incrementn
  2714  001E72  C02B  F022         	movff	_cmd_offset,??_display_labels
  2715  001E76  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2716  001E7A  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2717  001E7C  0E00               	movlw	0
  2718  001E7E  2422               	addwf	??_display_labels,w,c
  2719  001E80  6E17               	movwf	wr16@addr,c
  2720  001E82  0E80               	movlw	128
  2721  001E84  2023               	addwfc	??_display_labels+1,w,c
  2722  001E86  6E18               	movwf	wr16@addr+1,c
  2723  001E88  0E10               	movlw	16
  2724  001E8A  2024               	addwfc	??_display_labels+2,w,c
  2725  001E8C  6E19               	movwf	wr16@addr+2,c
  2726  001E8E  C025  F01A         	movff	display_labels@y_start,wr16@value
  2727  001E92  C026  F01B         	movff	display_labels@y_start+1,wr16@value+1
  2728  001E96  EC33  F01A         	call	_wr16	;wreg free
  2729  001E9A  0E02               	movlw	2
  2730  001E9C  EC98  F01A         	call	_cmd_incrementn
  2731  001EA0  C02B  F022         	movff	_cmd_offset,??_display_labels
  2732  001EA4  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2733  001EA8  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2734  001EAA  0E00               	movlw	0
  2735  001EAC  2422               	addwf	??_display_labels,w,c
  2736  001EAE  6E17               	movwf	wr16@addr,c
  2737  001EB0  0E80               	movlw	128
  2738  001EB2  2023               	addwfc	??_display_labels+1,w,c
  2739  001EB4  6E18               	movwf	wr16@addr+1,c
  2740  001EB6  0E10               	movlw	16
  2741  001EB8  2024               	addwfc	??_display_labels+2,w,c
  2742  001EBA  6E19               	movwf	wr16@addr+2,c
  2743  001EBC  0E00               	movlw	0
  2744  001EBE  6E1B               	movwf	wr16@value+1,c
  2745  001EC0  0E1A               	movlw	26
  2746  001EC2  6E1A               	movwf	wr16@value,c
  2747  001EC4  EC33  F01A         	call	_wr16	;wreg free
  2748  001EC8  0E02               	movlw	2
  2749  001ECA  EC98  F01A         	call	_cmd_incrementn
  2750  001ECE  C02B  F022         	movff	_cmd_offset,??_display_labels
  2751  001ED2  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2752  001ED6  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2753  001ED8  0E00               	movlw	0
  2754  001EDA  2422               	addwf	??_display_labels,w,c
  2755  001EDC  6E17               	movwf	wr16@addr,c
  2756  001EDE  0E80               	movlw	128
  2757  001EE0  2023               	addwfc	??_display_labels+1,w,c
  2758  001EE2  6E18               	movwf	wr16@addr+1,c
  2759  001EE4  0E10               	movlw	16
  2760  001EE6  2024               	addwfc	??_display_labels+2,w,c
  2761  001EE8  6E19               	movwf	wr16@addr+2,c
  2762  001EEA  0E00               	movlw	0
  2763  001EEC  6E1B               	movwf	wr16@value+1,c
  2764  001EEE  0E00               	movlw	0
  2765  001EF0  6E1A               	movwf	wr16@value,c
  2766  001EF2  EC33  F01A         	call	_wr16	;wreg free
  2767  001EF6  0E02               	movlw	2
  2768  001EF8  EC98  F01A         	call	_cmd_incrementn
  2769  001EFC  C02B  F022         	movff	_cmd_offset,??_display_labels
  2770  001F00  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2771  001F04  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2772  001F06  0E00               	movlw	0
  2773  001F08  2422               	addwf	??_display_labels,w,c
  2774  001F0A  6E15               	movwf	wr8s@addr,c
  2775  001F0C  0E80               	movlw	128
  2776  001F0E  2023               	addwfc	??_display_labels+1,w,c
  2777  001F10  6E16               	movwf	wr8s@addr+1,c
  2778  001F12  0E10               	movlw	16
  2779  001F14  2024               	addwfc	??_display_labels+2,w,c
  2780  001F16  6E17               	movwf	wr8s@addr+2,c
  2781  001F18  0E07               	movlw	low STR_1
  2782  001F1A  6E18               	movwf	wr8s@s,c
  2783  001F1C  0E0F               	movlw	high STR_1
  2784  001F1E  6E19               	movwf	wr8s@s+1,c
  2785  001F20  ECC2  F018         	call	_wr8s	;wreg free
  2786  001F24  EC98  F01A         	call	_cmd_incrementn
  2787                           
  2788                           ;display.c: 20: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += (26/2 +2));cmd_incrementn(2);wr16(1081344UL+cmd_offset, 
      +                          26);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8
      +                          s(
  2789  001F28  0E0C               	movlw	12
  2790  001F2A  6E1B               	movwf	cmd@command,c
  2791  001F2C  0EFF               	movlw	255
  2792  001F2E  6E1C               	movwf	cmd@command+1,c
  2793  001F30  0EFF               	movlw	255
  2794  001F32  6E1D               	movwf	cmd@command+2,c
  2795  001F34  0EFF               	movlw	255
  2796  001F36  6E1E               	movwf	cmd@command+3,c
  2797  001F38  EC51  F01A         	call	_cmd	;wreg free
  2798  001F3C  C02B  F022         	movff	_cmd_offset,??_display_labels
  2799  001F40  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2800  001F44  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2801  001F46  0E00               	movlw	0
  2802  001F48  2422               	addwf	??_display_labels,w,c
  2803  001F4A  6E17               	movwf	wr16@addr,c
  2804  001F4C  0E80               	movlw	128
  2805  001F4E  2023               	addwfc	??_display_labels+1,w,c
  2806  001F50  6E18               	movwf	wr16@addr+1,c
  2807  001F52  0E10               	movlw	16
  2808  001F54  2024               	addwfc	??_display_labels+2,w,c
  2809  001F56  6E19               	movwf	wr16@addr+2,c
  2810  001F58  0E00               	movlw	0
  2811  001F5A  6E1B               	movwf	wr16@value+1,c
  2812  001F5C  0E05               	movlw	5
  2813  001F5E  6E1A               	movwf	wr16@value,c
  2814  001F60  EC33  F01A         	call	_wr16	;wreg free
  2815  001F64  0E02               	movlw	2
  2816  001F66  EC98  F01A         	call	_cmd_incrementn
  2817  001F6A  C02B  F022         	movff	_cmd_offset,??_display_labels
  2818  001F6E  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2819  001F72  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2820  001F74  0E00               	movlw	0
  2821  001F76  2422               	addwf	??_display_labels,w,c
  2822  001F78  6E17               	movwf	wr16@addr,c
  2823  001F7A  0E80               	movlw	128
  2824  001F7C  2023               	addwfc	??_display_labels+1,w,c
  2825  001F7E  6E18               	movwf	wr16@addr+1,c
  2826  001F80  0E10               	movlw	16
  2827  001F82  2024               	addwfc	??_display_labels+2,w,c
  2828  001F84  6E19               	movwf	wr16@addr+2,c
  2829  001F86  0E0F               	movlw	15
  2830  001F88  2625               	addwf	display_labels@y_start,f,c
  2831  001F8A  0E00               	movlw	0
  2832  001F8C  2226               	addwfc	display_labels@y_start+1,f,c
  2833  001F8E  C025  F01A         	movff	display_labels@y_start,wr16@value
  2834  001F92  C026  F01B         	movff	display_labels@y_start+1,wr16@value+1
  2835  001F96  EC33  F01A         	call	_wr16	;wreg free
  2836  001F9A  0E02               	movlw	2
  2837  001F9C  EC98  F01A         	call	_cmd_incrementn
  2838  001FA0  C02B  F022         	movff	_cmd_offset,??_display_labels
  2839  001FA4  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2840  001FA8  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2841  001FAA  0E00               	movlw	0
  2842  001FAC  2422               	addwf	??_display_labels,w,c
  2843  001FAE  6E17               	movwf	wr16@addr,c
  2844  001FB0  0E80               	movlw	128
  2845  001FB2  2023               	addwfc	??_display_labels+1,w,c
  2846  001FB4  6E18               	movwf	wr16@addr+1,c
  2847  001FB6  0E10               	movlw	16
  2848  001FB8  2024               	addwfc	??_display_labels+2,w,c
  2849  001FBA  6E19               	movwf	wr16@addr+2,c
  2850  001FBC  0E00               	movlw	0
  2851  001FBE  6E1B               	movwf	wr16@value+1,c
  2852  001FC0  0E1A               	movlw	26
  2853  001FC2  6E1A               	movwf	wr16@value,c
  2854  001FC4  EC33  F01A         	call	_wr16	;wreg free
  2855  001FC8  0E02               	movlw	2
  2856  001FCA  EC98  F01A         	call	_cmd_incrementn
  2857  001FCE  C02B  F022         	movff	_cmd_offset,??_display_labels
  2858  001FD2  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2859  001FD6  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2860  001FD8  0E00               	movlw	0
  2861  001FDA  2422               	addwf	??_display_labels,w,c
  2862  001FDC  6E17               	movwf	wr16@addr,c
  2863  001FDE  0E80               	movlw	128
  2864  001FE0  2023               	addwfc	??_display_labels+1,w,c
  2865  001FE2  6E18               	movwf	wr16@addr+1,c
  2866  001FE4  0E10               	movlw	16
  2867  001FE6  2024               	addwfc	??_display_labels+2,w,c
  2868  001FE8  6E19               	movwf	wr16@addr+2,c
  2869  001FEA  0E00               	movlw	0
  2870  001FEC  6E1B               	movwf	wr16@value+1,c
  2871  001FEE  0E00               	movlw	0
  2872  001FF0  6E1A               	movwf	wr16@value,c
  2873  001FF2  EC33  F01A         	call	_wr16	;wreg free
  2874  001FF6  0E02               	movlw	2
  2875  001FF8  EC98  F01A         	call	_cmd_incrementn
  2876  001FFC  C02B  F022         	movff	_cmd_offset,??_display_labels
  2877  002000  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2878  002004  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2879  002006  0E00               	movlw	0
  2880  002008  2422               	addwf	??_display_labels,w,c
  2881  00200A  6E15               	movwf	wr8s@addr,c
  2882  00200C  0E80               	movlw	128
  2883  00200E  2023               	addwfc	??_display_labels+1,w,c
  2884  002010  6E16               	movwf	wr8s@addr+1,c
  2885  002012  0E10               	movlw	16
  2886  002014  2024               	addwfc	??_display_labels+2,w,c
  2887  002016  6E17               	movwf	wr8s@addr+2,c
  2888  002018  0E1D               	movlw	low STR_2
  2889  00201A  6E18               	movwf	wr8s@s,c
  2890  00201C  0E0F               	movlw	high STR_2
  2891  00201E  6E19               	movwf	wr8s@s+1,c
  2892  002020  ECC2  F018         	call	_wr8s	;wreg free
  2893  002024  EC98  F01A         	call	_cmd_incrementn
  2894                           
  2895                           ;display.c: 21: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += (26/2 +2) + (26/2 +2));cmd_incrementn(2);wr16(1081344UL+
      +                          cmd_offset, 26);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_in
      +                          cr
  2896  002028  0E0C               	movlw	12
  2897  00202A  6E1B               	movwf	cmd@command,c
  2898  00202C  0EFF               	movlw	255
  2899  00202E  6E1C               	movwf	cmd@command+1,c
  2900  002030  0EFF               	movlw	255
  2901  002032  6E1D               	movwf	cmd@command+2,c
  2902  002034  0EFF               	movlw	255
  2903  002036  6E1E               	movwf	cmd@command+3,c
  2904  002038  EC51  F01A         	call	_cmd	;wreg free
  2905  00203C  C02B  F022         	movff	_cmd_offset,??_display_labels
  2906  002040  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2907  002044  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2908  002046  0E00               	movlw	0
  2909  002048  2422               	addwf	??_display_labels,w,c
  2910  00204A  6E17               	movwf	wr16@addr,c
  2911  00204C  0E80               	movlw	128
  2912  00204E  2023               	addwfc	??_display_labels+1,w,c
  2913  002050  6E18               	movwf	wr16@addr+1,c
  2914  002052  0E10               	movlw	16
  2915  002054  2024               	addwfc	??_display_labels+2,w,c
  2916  002056  6E19               	movwf	wr16@addr+2,c
  2917  002058  0E00               	movlw	0
  2918  00205A  6E1B               	movwf	wr16@value+1,c
  2919  00205C  0E05               	movlw	5
  2920  00205E  6E1A               	movwf	wr16@value,c
  2921  002060  EC33  F01A         	call	_wr16	;wreg free
  2922  002064  0E02               	movlw	2
  2923  002066  EC98  F01A         	call	_cmd_incrementn
  2924  00206A  C02B  F022         	movff	_cmd_offset,??_display_labels
  2925  00206E  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2926  002072  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2927  002074  0E00               	movlw	0
  2928  002076  2422               	addwf	??_display_labels,w,c
  2929  002078  6E17               	movwf	wr16@addr,c
  2930  00207A  0E80               	movlw	128
  2931  00207C  2023               	addwfc	??_display_labels+1,w,c
  2932  00207E  6E18               	movwf	wr16@addr+1,c
  2933  002080  0E10               	movlw	16
  2934  002082  2024               	addwfc	??_display_labels+2,w,c
  2935  002084  6E19               	movwf	wr16@addr+2,c
  2936  002086  0E1E               	movlw	30
  2937  002088  2625               	addwf	display_labels@y_start,f,c
  2938  00208A  0E00               	movlw	0
  2939  00208C  2226               	addwfc	display_labels@y_start+1,f,c
  2940  00208E  C025  F01A         	movff	display_labels@y_start,wr16@value
  2941  002092  C026  F01B         	movff	display_labels@y_start+1,wr16@value+1
  2942  002096  EC33  F01A         	call	_wr16	;wreg free
  2943  00209A  0E02               	movlw	2
  2944  00209C  EC98  F01A         	call	_cmd_incrementn
  2945  0020A0  C02B  F022         	movff	_cmd_offset,??_display_labels
  2946  0020A4  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2947  0020A8  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2948  0020AA  0E00               	movlw	0
  2949  0020AC  2422               	addwf	??_display_labels,w,c
  2950  0020AE  6E17               	movwf	wr16@addr,c
  2951  0020B0  0E80               	movlw	128
  2952  0020B2  2023               	addwfc	??_display_labels+1,w,c
  2953  0020B4  6E18               	movwf	wr16@addr+1,c
  2954  0020B6  0E10               	movlw	16
  2955  0020B8  2024               	addwfc	??_display_labels+2,w,c
  2956  0020BA  6E19               	movwf	wr16@addr+2,c
  2957  0020BC  0E00               	movlw	0
  2958  0020BE  6E1B               	movwf	wr16@value+1,c
  2959  0020C0  0E1A               	movlw	26
  2960  0020C2  6E1A               	movwf	wr16@value,c
  2961  0020C4  EC33  F01A         	call	_wr16	;wreg free
  2962  0020C8  0E02               	movlw	2
  2963  0020CA  EC98  F01A         	call	_cmd_incrementn
  2964  0020CE  C02B  F022         	movff	_cmd_offset,??_display_labels
  2965  0020D2  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2966  0020D6  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2967  0020D8  0E00               	movlw	0
  2968  0020DA  2422               	addwf	??_display_labels,w,c
  2969  0020DC  6E17               	movwf	wr16@addr,c
  2970  0020DE  0E80               	movlw	128
  2971  0020E0  2023               	addwfc	??_display_labels+1,w,c
  2972  0020E2  6E18               	movwf	wr16@addr+1,c
  2973  0020E4  0E10               	movlw	16
  2974  0020E6  2024               	addwfc	??_display_labels+2,w,c
  2975  0020E8  6E19               	movwf	wr16@addr+2,c
  2976  0020EA  0E00               	movlw	0
  2977  0020EC  6E1B               	movwf	wr16@value+1,c
  2978  0020EE  0E00               	movlw	0
  2979  0020F0  6E1A               	movwf	wr16@value,c
  2980  0020F2  EC33  F01A         	call	_wr16	;wreg free
  2981  0020F6  0E02               	movlw	2
  2982  0020F8  EC98  F01A         	call	_cmd_incrementn
  2983  0020FC  C02B  F022         	movff	_cmd_offset,??_display_labels
  2984  002100  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  2985  002104  6A24               	clrf	(??_display_labels+2)& (0+255),c
  2986  002106  0E00               	movlw	0
  2987  002108  2422               	addwf	??_display_labels,w,c
  2988  00210A  6E15               	movwf	wr8s@addr,c
  2989  00210C  0E80               	movlw	128
  2990  00210E  2023               	addwfc	??_display_labels+1,w,c
  2991  002110  6E16               	movwf	wr8s@addr+1,c
  2992  002112  0E10               	movlw	16
  2993  002114  2024               	addwfc	??_display_labels+2,w,c
  2994  002116  6E17               	movwf	wr8s@addr+2,c
  2995  002118  0E2F               	movlw	low STR_3
  2996  00211A  6E18               	movwf	wr8s@s,c
  2997  00211C  0E0F               	movlw	high STR_3
  2998  00211E  6E19               	movwf	wr8s@s+1,c
  2999  002120  ECC2  F018         	call	_wr8s	;wreg free
  3000  002124  EC98  F01A         	call	_cmd_incrementn
  3001                           
  3002                           ;display.c: 22: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += (26/2 +2));cmd_incrementn(2);wr16(1081344UL+cmd_offset, 
      +                          26);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8
      +                          s(
  3003  002128  0E0C               	movlw	12
  3004  00212A  6E1B               	movwf	cmd@command,c
  3005  00212C  0EFF               	movlw	255
  3006  00212E  6E1C               	movwf	cmd@command+1,c
  3007  002130  0EFF               	movlw	255
  3008  002132  6E1D               	movwf	cmd@command+2,c
  3009  002134  0EFF               	movlw	255
  3010  002136  6E1E               	movwf	cmd@command+3,c
  3011  002138  EC51  F01A         	call	_cmd	;wreg free
  3012  00213C  C02B  F022         	movff	_cmd_offset,??_display_labels
  3013  002140  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3014  002144  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3015  002146  0E00               	movlw	0
  3016  002148  2422               	addwf	??_display_labels,w,c
  3017  00214A  6E17               	movwf	wr16@addr,c
  3018  00214C  0E80               	movlw	128
  3019  00214E  2023               	addwfc	??_display_labels+1,w,c
  3020  002150  6E18               	movwf	wr16@addr+1,c
  3021  002152  0E10               	movlw	16
  3022  002154  2024               	addwfc	??_display_labels+2,w,c
  3023  002156  6E19               	movwf	wr16@addr+2,c
  3024  002158  0E00               	movlw	0
  3025  00215A  6E1B               	movwf	wr16@value+1,c
  3026  00215C  0E05               	movlw	5
  3027  00215E  6E1A               	movwf	wr16@value,c
  3028  002160  EC33  F01A         	call	_wr16	;wreg free
  3029  002164  0E02               	movlw	2
  3030  002166  EC98  F01A         	call	_cmd_incrementn
  3031  00216A  C02B  F022         	movff	_cmd_offset,??_display_labels
  3032  00216E  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3033  002172  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3034  002174  0E00               	movlw	0
  3035  002176  2422               	addwf	??_display_labels,w,c
  3036  002178  6E17               	movwf	wr16@addr,c
  3037  00217A  0E80               	movlw	128
  3038  00217C  2023               	addwfc	??_display_labels+1,w,c
  3039  00217E  6E18               	movwf	wr16@addr+1,c
  3040  002180  0E10               	movlw	16
  3041  002182  2024               	addwfc	??_display_labels+2,w,c
  3042  002184  6E19               	movwf	wr16@addr+2,c
  3043  002186  0E0F               	movlw	15
  3044  002188  2625               	addwf	display_labels@y_start,f,c
  3045  00218A  0E00               	movlw	0
  3046  00218C  2226               	addwfc	display_labels@y_start+1,f,c
  3047  00218E  C025  F01A         	movff	display_labels@y_start,wr16@value
  3048  002192  C026  F01B         	movff	display_labels@y_start+1,wr16@value+1
  3049  002196  EC33  F01A         	call	_wr16	;wreg free
  3050  00219A  0E02               	movlw	2
  3051  00219C  EC98  F01A         	call	_cmd_incrementn
  3052  0021A0  C02B  F022         	movff	_cmd_offset,??_display_labels
  3053  0021A4  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3054  0021A8  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3055  0021AA  0E00               	movlw	0
  3056  0021AC  2422               	addwf	??_display_labels,w,c
  3057  0021AE  6E17               	movwf	wr16@addr,c
  3058  0021B0  0E80               	movlw	128
  3059  0021B2  2023               	addwfc	??_display_labels+1,w,c
  3060  0021B4  6E18               	movwf	wr16@addr+1,c
  3061  0021B6  0E10               	movlw	16
  3062  0021B8  2024               	addwfc	??_display_labels+2,w,c
  3063  0021BA  6E19               	movwf	wr16@addr+2,c
  3064  0021BC  0E00               	movlw	0
  3065  0021BE  6E1B               	movwf	wr16@value+1,c
  3066  0021C0  0E1A               	movlw	26
  3067  0021C2  6E1A               	movwf	wr16@value,c
  3068  0021C4  EC33  F01A         	call	_wr16	;wreg free
  3069  0021C8  0E02               	movlw	2
  3070  0021CA  EC98  F01A         	call	_cmd_incrementn
  3071  0021CE  C02B  F022         	movff	_cmd_offset,??_display_labels
  3072  0021D2  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3073  0021D6  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3074  0021D8  0E00               	movlw	0
  3075  0021DA  2422               	addwf	??_display_labels,w,c
  3076  0021DC  6E17               	movwf	wr16@addr,c
  3077  0021DE  0E80               	movlw	128
  3078  0021E0  2023               	addwfc	??_display_labels+1,w,c
  3079  0021E2  6E18               	movwf	wr16@addr+1,c
  3080  0021E4  0E10               	movlw	16
  3081  0021E6  2024               	addwfc	??_display_labels+2,w,c
  3082  0021E8  6E19               	movwf	wr16@addr+2,c
  3083  0021EA  0E00               	movlw	0
  3084  0021EC  6E1B               	movwf	wr16@value+1,c
  3085  0021EE  0E00               	movlw	0
  3086  0021F0  6E1A               	movwf	wr16@value,c
  3087  0021F2  EC33  F01A         	call	_wr16	;wreg free
  3088  0021F6  0E02               	movlw	2
  3089  0021F8  EC98  F01A         	call	_cmd_incrementn
  3090  0021FC  C02B  F022         	movff	_cmd_offset,??_display_labels
  3091  002200  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3092  002204  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3093  002206  0E00               	movlw	0
  3094  002208  2422               	addwf	??_display_labels,w,c
  3095  00220A  6E15               	movwf	wr8s@addr,c
  3096  00220C  0E80               	movlw	128
  3097  00220E  2023               	addwfc	??_display_labels+1,w,c
  3098  002210  6E16               	movwf	wr8s@addr+1,c
  3099  002212  0E10               	movlw	16
  3100  002214  2024               	addwfc	??_display_labels+2,w,c
  3101  002216  6E17               	movwf	wr8s@addr+2,c
  3102  002218  0E1D               	movlw	low STR_2
  3103  00221A  6E18               	movwf	wr8s@s,c
  3104  00221C  0E0F               	movlw	high STR_2
  3105  00221E  6E19               	movwf	wr8s@s+1,c
  3106  002220  ECC2  F018         	call	_wr8s	;wreg free
  3107  002224  EC98  F01A         	call	_cmd_incrementn
  3108                           
  3109                           ;display.c: 23: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += (26/2 +2) + (26/2 +2));cmd_incrementn(2);wr16(1081344UL+
      +                          cmd_offset, 26);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_in
      +                          cr
  3110  002228  0E0C               	movlw	12
  3111  00222A  6E1B               	movwf	cmd@command,c
  3112  00222C  0EFF               	movlw	255
  3113  00222E  6E1C               	movwf	cmd@command+1,c
  3114  002230  0EFF               	movlw	255
  3115  002232  6E1D               	movwf	cmd@command+2,c
  3116  002234  0EFF               	movlw	255
  3117  002236  6E1E               	movwf	cmd@command+3,c
  3118  002238  EC51  F01A         	call	_cmd	;wreg free
  3119  00223C  C02B  F022         	movff	_cmd_offset,??_display_labels
  3120  002240  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3121  002244  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3122  002246  0E00               	movlw	0
  3123  002248  2422               	addwf	??_display_labels,w,c
  3124  00224A  6E17               	movwf	wr16@addr,c
  3125  00224C  0E80               	movlw	128
  3126  00224E  2023               	addwfc	??_display_labels+1,w,c
  3127  002250  6E18               	movwf	wr16@addr+1,c
  3128  002252  0E10               	movlw	16
  3129  002254  2024               	addwfc	??_display_labels+2,w,c
  3130  002256  6E19               	movwf	wr16@addr+2,c
  3131  002258  0E00               	movlw	0
  3132  00225A  6E1B               	movwf	wr16@value+1,c
  3133  00225C  0E05               	movlw	5
  3134  00225E  6E1A               	movwf	wr16@value,c
  3135  002260  EC33  F01A         	call	_wr16	;wreg free
  3136  002264  0E02               	movlw	2
  3137  002266  EC98  F01A         	call	_cmd_incrementn
  3138  00226A  C02B  F022         	movff	_cmd_offset,??_display_labels
  3139  00226E  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3140  002272  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3141  002274  0E00               	movlw	0
  3142  002276  2422               	addwf	??_display_labels,w,c
  3143  002278  6E17               	movwf	wr16@addr,c
  3144  00227A  0E80               	movlw	128
  3145  00227C  2023               	addwfc	??_display_labels+1,w,c
  3146  00227E  6E18               	movwf	wr16@addr+1,c
  3147  002280  0E10               	movlw	16
  3148  002282  2024               	addwfc	??_display_labels+2,w,c
  3149  002284  6E19               	movwf	wr16@addr+2,c
  3150  002286  0E1E               	movlw	30
  3151  002288  2625               	addwf	display_labels@y_start,f,c
  3152  00228A  0E00               	movlw	0
  3153  00228C  2226               	addwfc	display_labels@y_start+1,f,c
  3154  00228E  C025  F01A         	movff	display_labels@y_start,wr16@value
  3155  002292  C026  F01B         	movff	display_labels@y_start+1,wr16@value+1
  3156  002296  EC33  F01A         	call	_wr16	;wreg free
  3157  00229A  0E02               	movlw	2
  3158  00229C  EC98  F01A         	call	_cmd_incrementn
  3159  0022A0  C02B  F022         	movff	_cmd_offset,??_display_labels
  3160  0022A4  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3161  0022A8  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3162  0022AA  0E00               	movlw	0
  3163  0022AC  2422               	addwf	??_display_labels,w,c
  3164  0022AE  6E17               	movwf	wr16@addr,c
  3165  0022B0  0E80               	movlw	128
  3166  0022B2  2023               	addwfc	??_display_labels+1,w,c
  3167  0022B4  6E18               	movwf	wr16@addr+1,c
  3168  0022B6  0E10               	movlw	16
  3169  0022B8  2024               	addwfc	??_display_labels+2,w,c
  3170  0022BA  6E19               	movwf	wr16@addr+2,c
  3171  0022BC  0E00               	movlw	0
  3172  0022BE  6E1B               	movwf	wr16@value+1,c
  3173  0022C0  0E1A               	movlw	26
  3174  0022C2  6E1A               	movwf	wr16@value,c
  3175  0022C4  EC33  F01A         	call	_wr16	;wreg free
  3176  0022C8  0E02               	movlw	2
  3177  0022CA  EC98  F01A         	call	_cmd_incrementn
  3178  0022CE  C02B  F022         	movff	_cmd_offset,??_display_labels
  3179  0022D2  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3180  0022D6  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3181  0022D8  0E00               	movlw	0
  3182  0022DA  2422               	addwf	??_display_labels,w,c
  3183  0022DC  6E17               	movwf	wr16@addr,c
  3184  0022DE  0E80               	movlw	128
  3185  0022E0  2023               	addwfc	??_display_labels+1,w,c
  3186  0022E2  6E18               	movwf	wr16@addr+1,c
  3187  0022E4  0E10               	movlw	16
  3188  0022E6  2024               	addwfc	??_display_labels+2,w,c
  3189  0022E8  6E19               	movwf	wr16@addr+2,c
  3190  0022EA  0E00               	movlw	0
  3191  0022EC  6E1B               	movwf	wr16@value+1,c
  3192  0022EE  0E00               	movlw	0
  3193  0022F0  6E1A               	movwf	wr16@value,c
  3194  0022F2  EC33  F01A         	call	_wr16	;wreg free
  3195  0022F6  0E02               	movlw	2
  3196  0022F8  EC98  F01A         	call	_cmd_incrementn
  3197  0022FC  C02B  F022         	movff	_cmd_offset,??_display_labels
  3198  002300  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3199  002304  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3200  002306  0E00               	movlw	0
  3201  002308  2422               	addwf	??_display_labels,w,c
  3202  00230A  6E15               	movwf	wr8s@addr,c
  3203  00230C  0E80               	movlw	128
  3204  00230E  2023               	addwfc	??_display_labels+1,w,c
  3205  002310  6E16               	movwf	wr8s@addr+1,c
  3206  002312  0E10               	movlw	16
  3207  002314  2024               	addwfc	??_display_labels+2,w,c
  3208  002316  6E17               	movwf	wr8s@addr+2,c
  3209  002318  0E18               	movlw	low STR_5
  3210  00231A  6E18               	movwf	wr8s@s,c
  3211  00231C  0E0F               	movlw	high STR_5
  3212  00231E  6E19               	movwf	wr8s@s+1,c
  3213  002320  ECC2  F018         	call	_wr8s	;wreg free
  3214  002324  EC98  F01A         	call	_cmd_incrementn
  3215                           
  3216                           ;display.c: 24: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += (26/2 +2));cmd_incrementn(2);wr16(1081344UL+cmd_offset, 
      +                          26);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8
      +                          s(
  3217  002328  0E0C               	movlw	12
  3218  00232A  6E1B               	movwf	cmd@command,c
  3219  00232C  0EFF               	movlw	255
  3220  00232E  6E1C               	movwf	cmd@command+1,c
  3221  002330  0EFF               	movlw	255
  3222  002332  6E1D               	movwf	cmd@command+2,c
  3223  002334  0EFF               	movlw	255
  3224  002336  6E1E               	movwf	cmd@command+3,c
  3225  002338  EC51  F01A         	call	_cmd	;wreg free
  3226  00233C  C02B  F022         	movff	_cmd_offset,??_display_labels
  3227  002340  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3228  002344  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3229  002346  0E00               	movlw	0
  3230  002348  2422               	addwf	??_display_labels,w,c
  3231  00234A  6E17               	movwf	wr16@addr,c
  3232  00234C  0E80               	movlw	128
  3233  00234E  2023               	addwfc	??_display_labels+1,w,c
  3234  002350  6E18               	movwf	wr16@addr+1,c
  3235  002352  0E10               	movlw	16
  3236  002354  2024               	addwfc	??_display_labels+2,w,c
  3237  002356  6E19               	movwf	wr16@addr+2,c
  3238  002358  0E00               	movlw	0
  3239  00235A  6E1B               	movwf	wr16@value+1,c
  3240  00235C  0E05               	movlw	5
  3241  00235E  6E1A               	movwf	wr16@value,c
  3242  002360  EC33  F01A         	call	_wr16	;wreg free
  3243  002364  0E02               	movlw	2
  3244  002366  EC98  F01A         	call	_cmd_incrementn
  3245  00236A  C02B  F022         	movff	_cmd_offset,??_display_labels
  3246  00236E  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3247  002372  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3248  002374  0E00               	movlw	0
  3249  002376  2422               	addwf	??_display_labels,w,c
  3250  002378  6E17               	movwf	wr16@addr,c
  3251  00237A  0E80               	movlw	128
  3252  00237C  2023               	addwfc	??_display_labels+1,w,c
  3253  00237E  6E18               	movwf	wr16@addr+1,c
  3254  002380  0E10               	movlw	16
  3255  002382  2024               	addwfc	??_display_labels+2,w,c
  3256  002384  6E19               	movwf	wr16@addr+2,c
  3257  002386  0E0F               	movlw	15
  3258  002388  2625               	addwf	display_labels@y_start,f,c
  3259  00238A  0E00               	movlw	0
  3260  00238C  2226               	addwfc	display_labels@y_start+1,f,c
  3261  00238E  C025  F01A         	movff	display_labels@y_start,wr16@value
  3262  002392  C026  F01B         	movff	display_labels@y_start+1,wr16@value+1
  3263  002396  EC33  F01A         	call	_wr16	;wreg free
  3264  00239A  0E02               	movlw	2
  3265  00239C  EC98  F01A         	call	_cmd_incrementn
  3266  0023A0  C02B  F022         	movff	_cmd_offset,??_display_labels
  3267  0023A4  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3268  0023A8  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3269  0023AA  0E00               	movlw	0
  3270  0023AC  2422               	addwf	??_display_labels,w,c
  3271  0023AE  6E17               	movwf	wr16@addr,c
  3272  0023B0  0E80               	movlw	128
  3273  0023B2  2023               	addwfc	??_display_labels+1,w,c
  3274  0023B4  6E18               	movwf	wr16@addr+1,c
  3275  0023B6  0E10               	movlw	16
  3276  0023B8  2024               	addwfc	??_display_labels+2,w,c
  3277  0023BA  6E19               	movwf	wr16@addr+2,c
  3278  0023BC  0E00               	movlw	0
  3279  0023BE  6E1B               	movwf	wr16@value+1,c
  3280  0023C0  0E1A               	movlw	26
  3281  0023C2  6E1A               	movwf	wr16@value,c
  3282  0023C4  EC33  F01A         	call	_wr16	;wreg free
  3283  0023C8  0E02               	movlw	2
  3284  0023CA  EC98  F01A         	call	_cmd_incrementn
  3285  0023CE  C02B  F022         	movff	_cmd_offset,??_display_labels
  3286  0023D2  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3287  0023D6  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3288  0023D8  0E00               	movlw	0
  3289  0023DA  2422               	addwf	??_display_labels,w,c
  3290  0023DC  6E17               	movwf	wr16@addr,c
  3291  0023DE  0E80               	movlw	128
  3292  0023E0  2023               	addwfc	??_display_labels+1,w,c
  3293  0023E2  6E18               	movwf	wr16@addr+1,c
  3294  0023E4  0E10               	movlw	16
  3295  0023E6  2024               	addwfc	??_display_labels+2,w,c
  3296  0023E8  6E19               	movwf	wr16@addr+2,c
  3297  0023EA  0E00               	movlw	0
  3298  0023EC  6E1B               	movwf	wr16@value+1,c
  3299  0023EE  0E00               	movlw	0
  3300  0023F0  6E1A               	movwf	wr16@value,c
  3301  0023F2  EC33  F01A         	call	_wr16	;wreg free
  3302  0023F6  0E02               	movlw	2
  3303  0023F8  EC98  F01A         	call	_cmd_incrementn
  3304  0023FC  C02B  F022         	movff	_cmd_offset,??_display_labels
  3305  002400  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3306  002404  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3307  002406  0E00               	movlw	0
  3308  002408  2422               	addwf	??_display_labels,w,c
  3309  00240A  6E15               	movwf	wr8s@addr,c
  3310  00240C  0E80               	movlw	128
  3311  00240E  2023               	addwfc	??_display_labels+1,w,c
  3312  002410  6E16               	movwf	wr8s@addr+1,c
  3313  002412  0E10               	movlw	16
  3314  002414  2024               	addwfc	??_display_labels+2,w,c
  3315  002416  6E17               	movwf	wr8s@addr+2,c
  3316  002418  0E13               	movlw	low STR_6
  3317  00241A  6E18               	movwf	wr8s@s,c
  3318  00241C  0E0F               	movlw	high STR_6
  3319  00241E  6E19               	movwf	wr8s@s+1,c
  3320  002420  ECC2  F018         	call	_wr8s	;wreg free
  3321  002424  EC98  F01A         	call	_cmd_incrementn
  3322                           
  3323                           ;display.c: 25: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += (26/2 +2) + (26/2 +2));cmd_incrementn(2);wr16(1081344UL+
      +                          cmd_offset, 26);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_in
      +                          cr
  3324  002428  0E0C               	movlw	12
  3325  00242A  6E1B               	movwf	cmd@command,c
  3326  00242C  0EFF               	movlw	255
  3327  00242E  6E1C               	movwf	cmd@command+1,c
  3328  002430  0EFF               	movlw	255
  3329  002432  6E1D               	movwf	cmd@command+2,c
  3330  002434  0EFF               	movlw	255
  3331  002436  6E1E               	movwf	cmd@command+3,c
  3332  002438  EC51  F01A         	call	_cmd	;wreg free
  3333  00243C  C02B  F022         	movff	_cmd_offset,??_display_labels
  3334  002440  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3335  002444  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3336  002446  0E00               	movlw	0
  3337  002448  2422               	addwf	??_display_labels,w,c
  3338  00244A  6E17               	movwf	wr16@addr,c
  3339  00244C  0E80               	movlw	128
  3340  00244E  2023               	addwfc	??_display_labels+1,w,c
  3341  002450  6E18               	movwf	wr16@addr+1,c
  3342  002452  0E10               	movlw	16
  3343  002454  2024               	addwfc	??_display_labels+2,w,c
  3344  002456  6E19               	movwf	wr16@addr+2,c
  3345  002458  0E00               	movlw	0
  3346  00245A  6E1B               	movwf	wr16@value+1,c
  3347  00245C  0E05               	movlw	5
  3348  00245E  6E1A               	movwf	wr16@value,c
  3349  002460  EC33  F01A         	call	_wr16	;wreg free
  3350  002464  0E02               	movlw	2
  3351  002466  EC98  F01A         	call	_cmd_incrementn
  3352  00246A  C02B  F022         	movff	_cmd_offset,??_display_labels
  3353  00246E  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3354  002472  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3355  002474  0E00               	movlw	0
  3356  002476  2422               	addwf	??_display_labels,w,c
  3357  002478  6E17               	movwf	wr16@addr,c
  3358  00247A  0E80               	movlw	128
  3359  00247C  2023               	addwfc	??_display_labels+1,w,c
  3360  00247E  6E18               	movwf	wr16@addr+1,c
  3361  002480  0E10               	movlw	16
  3362  002482  2024               	addwfc	??_display_labels+2,w,c
  3363  002484  6E19               	movwf	wr16@addr+2,c
  3364  002486  0E1E               	movlw	30
  3365  002488  2625               	addwf	display_labels@y_start,f,c
  3366  00248A  0E00               	movlw	0
  3367  00248C  2226               	addwfc	display_labels@y_start+1,f,c
  3368  00248E  C025  F01A         	movff	display_labels@y_start,wr16@value
  3369  002492  C026  F01B         	movff	display_labels@y_start+1,wr16@value+1
  3370  002496  EC33  F01A         	call	_wr16	;wreg free
  3371  00249A  0E02               	movlw	2
  3372  00249C  EC98  F01A         	call	_cmd_incrementn
  3373  0024A0  C02B  F022         	movff	_cmd_offset,??_display_labels
  3374  0024A4  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3375  0024A8  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3376  0024AA  0E00               	movlw	0
  3377  0024AC  2422               	addwf	??_display_labels,w,c
  3378  0024AE  6E17               	movwf	wr16@addr,c
  3379  0024B0  0E80               	movlw	128
  3380  0024B2  2023               	addwfc	??_display_labels+1,w,c
  3381  0024B4  6E18               	movwf	wr16@addr+1,c
  3382  0024B6  0E10               	movlw	16
  3383  0024B8  2024               	addwfc	??_display_labels+2,w,c
  3384  0024BA  6E19               	movwf	wr16@addr+2,c
  3385  0024BC  0E00               	movlw	0
  3386  0024BE  6E1B               	movwf	wr16@value+1,c
  3387  0024C0  0E1A               	movlw	26
  3388  0024C2  6E1A               	movwf	wr16@value,c
  3389  0024C4  EC33  F01A         	call	_wr16	;wreg free
  3390  0024C8  0E02               	movlw	2
  3391  0024CA  EC98  F01A         	call	_cmd_incrementn
  3392  0024CE  C02B  F022         	movff	_cmd_offset,??_display_labels
  3393  0024D2  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3394  0024D6  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3395  0024D8  0E00               	movlw	0
  3396  0024DA  2422               	addwf	??_display_labels,w,c
  3397  0024DC  6E17               	movwf	wr16@addr,c
  3398  0024DE  0E80               	movlw	128
  3399  0024E0  2023               	addwfc	??_display_labels+1,w,c
  3400  0024E2  6E18               	movwf	wr16@addr+1,c
  3401  0024E4  0E10               	movlw	16
  3402  0024E6  2024               	addwfc	??_display_labels+2,w,c
  3403  0024E8  6E19               	movwf	wr16@addr+2,c
  3404  0024EA  0E00               	movlw	0
  3405  0024EC  6E1B               	movwf	wr16@value+1,c
  3406  0024EE  0E00               	movlw	0
  3407  0024F0  6E1A               	movwf	wr16@value,c
  3408  0024F2  EC33  F01A         	call	_wr16	;wreg free
  3409  0024F6  0E02               	movlw	2
  3410  0024F8  EC98  F01A         	call	_cmd_incrementn
  3411  0024FC  C02B  F022         	movff	_cmd_offset,??_display_labels
  3412  002500  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3413  002504  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3414  002506  0E00               	movlw	0
  3415  002508  2422               	addwf	??_display_labels,w,c
  3416  00250A  6E15               	movwf	wr8s@addr,c
  3417  00250C  0E80               	movlw	128
  3418  00250E  2023               	addwfc	??_display_labels+1,w,c
  3419  002510  6E16               	movwf	wr8s@addr+1,c
  3420  002512  0E10               	movlw	16
  3421  002514  2024               	addwfc	??_display_labels+2,w,c
  3422  002516  6E17               	movwf	wr8s@addr+2,c
  3423  002518  0E22               	movlw	low STR_7
  3424  00251A  6E18               	movwf	wr8s@s,c
  3425  00251C  0E0F               	movlw	high STR_7
  3426  00251E  6E19               	movwf	wr8s@s+1,c
  3427  002520  ECC2  F018         	call	_wr8s	;wreg free
  3428  002524  EC98  F01A         	call	_cmd_incrementn
  3429                           
  3430                           ;display.c: 26: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 5);cmd_incrementn(2);wr16(1
      +                          081344UL+cmd_offset, y_start += (26/2 +2));cmd_incrementn(2);wr16(1081344UL+cmd_offset, 
      +                          26);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8
      +                          s(
  3431  002528  0E0C               	movlw	12
  3432  00252A  6E1B               	movwf	cmd@command,c
  3433  00252C  0EFF               	movlw	255
  3434  00252E  6E1C               	movwf	cmd@command+1,c
  3435  002530  0EFF               	movlw	255
  3436  002532  6E1D               	movwf	cmd@command+2,c
  3437  002534  0EFF               	movlw	255
  3438  002536  6E1E               	movwf	cmd@command+3,c
  3439  002538  EC51  F01A         	call	_cmd	;wreg free
  3440  00253C  C02B  F022         	movff	_cmd_offset,??_display_labels
  3441  002540  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3442  002544  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3443  002546  0E00               	movlw	0
  3444  002548  2422               	addwf	??_display_labels,w,c
  3445  00254A  6E17               	movwf	wr16@addr,c
  3446  00254C  0E80               	movlw	128
  3447  00254E  2023               	addwfc	??_display_labels+1,w,c
  3448  002550  6E18               	movwf	wr16@addr+1,c
  3449  002552  0E10               	movlw	16
  3450  002554  2024               	addwfc	??_display_labels+2,w,c
  3451  002556  6E19               	movwf	wr16@addr+2,c
  3452  002558  0E00               	movlw	0
  3453  00255A  6E1B               	movwf	wr16@value+1,c
  3454  00255C  0E05               	movlw	5
  3455  00255E  6E1A               	movwf	wr16@value,c
  3456  002560  EC33  F01A         	call	_wr16	;wreg free
  3457  002564  0E02               	movlw	2
  3458  002566  EC98  F01A         	call	_cmd_incrementn
  3459  00256A  C02B  F022         	movff	_cmd_offset,??_display_labels
  3460  00256E  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3461  002572  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3462  002574  0E00               	movlw	0
  3463  002576  2422               	addwf	??_display_labels,w,c
  3464  002578  6E17               	movwf	wr16@addr,c
  3465  00257A  0E80               	movlw	128
  3466  00257C  2023               	addwfc	??_display_labels+1,w,c
  3467  00257E  6E18               	movwf	wr16@addr+1,c
  3468  002580  0E10               	movlw	16
  3469  002582  2024               	addwfc	??_display_labels+2,w,c
  3470  002584  6E19               	movwf	wr16@addr+2,c
  3471  002586  0E0F               	movlw	15
  3472  002588  2625               	addwf	display_labels@y_start,f,c
  3473  00258A  0E00               	movlw	0
  3474  00258C  2226               	addwfc	display_labels@y_start+1,f,c
  3475  00258E  C025  F01A         	movff	display_labels@y_start,wr16@value
  3476  002592  C026  F01B         	movff	display_labels@y_start+1,wr16@value+1
  3477  002596  EC33  F01A         	call	_wr16	;wreg free
  3478  00259A  0E02               	movlw	2
  3479  00259C  EC98  F01A         	call	_cmd_incrementn
  3480  0025A0  C02B  F022         	movff	_cmd_offset,??_display_labels
  3481  0025A4  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3482  0025A8  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3483  0025AA  0E00               	movlw	0
  3484  0025AC  2422               	addwf	??_display_labels,w,c
  3485  0025AE  6E17               	movwf	wr16@addr,c
  3486  0025B0  0E80               	movlw	128
  3487  0025B2  2023               	addwfc	??_display_labels+1,w,c
  3488  0025B4  6E18               	movwf	wr16@addr+1,c
  3489  0025B6  0E10               	movlw	16
  3490  0025B8  2024               	addwfc	??_display_labels+2,w,c
  3491  0025BA  6E19               	movwf	wr16@addr+2,c
  3492  0025BC  0E00               	movlw	0
  3493  0025BE  6E1B               	movwf	wr16@value+1,c
  3494  0025C0  0E1A               	movlw	26
  3495  0025C2  6E1A               	movwf	wr16@value,c
  3496  0025C4  EC33  F01A         	call	_wr16	;wreg free
  3497  0025C8  0E02               	movlw	2
  3498  0025CA  EC98  F01A         	call	_cmd_incrementn
  3499  0025CE  C02B  F022         	movff	_cmd_offset,??_display_labels
  3500  0025D2  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3501  0025D6  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3502  0025D8  0E00               	movlw	0
  3503  0025DA  2422               	addwf	??_display_labels,w,c
  3504  0025DC  6E17               	movwf	wr16@addr,c
  3505  0025DE  0E80               	movlw	128
  3506  0025E0  2023               	addwfc	??_display_labels+1,w,c
  3507  0025E2  6E18               	movwf	wr16@addr+1,c
  3508  0025E4  0E10               	movlw	16
  3509  0025E6  2024               	addwfc	??_display_labels+2,w,c
  3510  0025E8  6E19               	movwf	wr16@addr+2,c
  3511  0025EA  0E00               	movlw	0
  3512  0025EC  6E1B               	movwf	wr16@value+1,c
  3513  0025EE  0E00               	movlw	0
  3514  0025F0  6E1A               	movwf	wr16@value,c
  3515  0025F2  EC33  F01A         	call	_wr16	;wreg free
  3516  0025F6  0E02               	movlw	2
  3517  0025F8  EC98  F01A         	call	_cmd_incrementn
  3518  0025FC  C02B  F022         	movff	_cmd_offset,??_display_labels
  3519  002600  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3520  002604  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3521  002606  0E00               	movlw	0
  3522  002608  2422               	addwf	??_display_labels,w,c
  3523  00260A  6E15               	movwf	wr8s@addr,c
  3524  00260C  0E80               	movlw	128
  3525  00260E  2023               	addwfc	??_display_labels+1,w,c
  3526  002610  6E16               	movwf	wr8s@addr+1,c
  3527  002612  0E10               	movlw	16
  3528  002614  2024               	addwfc	??_display_labels+2,w,c
  3529  002616  6E17               	movwf	wr8s@addr+2,c
  3530  002618  0E0D               	movlw	low STR_8
  3531  00261A  6E18               	movwf	wr8s@s,c
  3532  00261C  0E0F               	movlw	high STR_8
  3533  00261E  6E19               	movwf	wr8s@s+1,c
  3534  002620  ECC2  F018         	call	_wr8s	;wreg free
  3535  002624  EC98  F01A         	call	_cmd_incrementn
  3536                           
  3537                           ;display.c: 27: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 360);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 150);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26);cmd_increme
      +                          ntn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1081344UL+cmd
      +                          _o
  3538  002628  0E0C               	movlw	12
  3539  00262A  6E1B               	movwf	cmd@command,c
  3540  00262C  0EFF               	movlw	255
  3541  00262E  6E1C               	movwf	cmd@command+1,c
  3542  002630  0EFF               	movlw	255
  3543  002632  6E1D               	movwf	cmd@command+2,c
  3544  002634  0EFF               	movlw	255
  3545  002636  6E1E               	movwf	cmd@command+3,c
  3546  002638  EC51  F01A         	call	_cmd	;wreg free
  3547  00263C  C02B  F022         	movff	_cmd_offset,??_display_labels
  3548  002640  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3549  002644  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3550  002646  0E00               	movlw	0
  3551  002648  2422               	addwf	??_display_labels,w,c
  3552  00264A  6E17               	movwf	wr16@addr,c
  3553  00264C  0E80               	movlw	128
  3554  00264E  2023               	addwfc	??_display_labels+1,w,c
  3555  002650  6E18               	movwf	wr16@addr+1,c
  3556  002652  0E10               	movlw	16
  3557  002654  2024               	addwfc	??_display_labels+2,w,c
  3558  002656  6E19               	movwf	wr16@addr+2,c
  3559  002658  0E01               	movlw	1
  3560  00265A  6E1B               	movwf	wr16@value+1,c
  3561  00265C  0E68               	movlw	104
  3562  00265E  6E1A               	movwf	wr16@value,c
  3563  002660  EC33  F01A         	call	_wr16	;wreg free
  3564  002664  0E02               	movlw	2
  3565  002666  EC98  F01A         	call	_cmd_incrementn
  3566  00266A  C02B  F022         	movff	_cmd_offset,??_display_labels
  3567  00266E  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3568  002672  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3569  002674  0E00               	movlw	0
  3570  002676  2422               	addwf	??_display_labels,w,c
  3571  002678  6E17               	movwf	wr16@addr,c
  3572  00267A  0E80               	movlw	128
  3573  00267C  2023               	addwfc	??_display_labels+1,w,c
  3574  00267E  6E18               	movwf	wr16@addr+1,c
  3575  002680  0E10               	movlw	16
  3576  002682  2024               	addwfc	??_display_labels+2,w,c
  3577  002684  6E19               	movwf	wr16@addr+2,c
  3578  002686  0E00               	movlw	0
  3579  002688  6E1B               	movwf	wr16@value+1,c
  3580  00268A  0E96               	movlw	150
  3581  00268C  6E1A               	movwf	wr16@value,c
  3582  00268E  EC33  F01A         	call	_wr16	;wreg free
  3583  002692  0E02               	movlw	2
  3584  002694  EC98  F01A         	call	_cmd_incrementn
  3585  002698  C02B  F022         	movff	_cmd_offset,??_display_labels
  3586  00269C  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3587  0026A0  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3588  0026A2  0E00               	movlw	0
  3589  0026A4  2422               	addwf	??_display_labels,w,c
  3590  0026A6  6E17               	movwf	wr16@addr,c
  3591  0026A8  0E80               	movlw	128
  3592  0026AA  2023               	addwfc	??_display_labels+1,w,c
  3593  0026AC  6E18               	movwf	wr16@addr+1,c
  3594  0026AE  0E10               	movlw	16
  3595  0026B0  2024               	addwfc	??_display_labels+2,w,c
  3596  0026B2  6E19               	movwf	wr16@addr+2,c
  3597  0026B4  0E00               	movlw	0
  3598  0026B6  6E1B               	movwf	wr16@value+1,c
  3599  0026B8  0E1A               	movlw	26
  3600  0026BA  6E1A               	movwf	wr16@value,c
  3601  0026BC  EC33  F01A         	call	_wr16	;wreg free
  3602  0026C0  0E02               	movlw	2
  3603  0026C2  EC98  F01A         	call	_cmd_incrementn
  3604  0026C6  C02B  F022         	movff	_cmd_offset,??_display_labels
  3605  0026CA  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3606  0026CE  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3607  0026D0  0E00               	movlw	0
  3608  0026D2  2422               	addwf	??_display_labels,w,c
  3609  0026D4  6E17               	movwf	wr16@addr,c
  3610  0026D6  0E80               	movlw	128
  3611  0026D8  2023               	addwfc	??_display_labels+1,w,c
  3612  0026DA  6E18               	movwf	wr16@addr+1,c
  3613  0026DC  0E10               	movlw	16
  3614  0026DE  2024               	addwfc	??_display_labels+2,w,c
  3615  0026E0  6E19               	movwf	wr16@addr+2,c
  3616  0026E2  0E00               	movlw	0
  3617  0026E4  6E1B               	movwf	wr16@value+1,c
  3618  0026E6  0E00               	movlw	0
  3619  0026E8  6E1A               	movwf	wr16@value,c
  3620  0026EA  EC33  F01A         	call	_wr16	;wreg free
  3621  0026EE  0E02               	movlw	2
  3622  0026F0  EC98  F01A         	call	_cmd_incrementn
  3623  0026F4  C02B  F022         	movff	_cmd_offset,??_display_labels
  3624  0026F8  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3625  0026FC  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3626  0026FE  0E00               	movlw	0
  3627  002700  2422               	addwf	??_display_labels,w,c
  3628  002702  6E15               	movwf	wr8s@addr,c
  3629  002704  0E80               	movlw	128
  3630  002706  2023               	addwfc	??_display_labels+1,w,c
  3631  002708  6E16               	movwf	wr8s@addr+1,c
  3632  00270A  0E10               	movlw	16
  3633  00270C  2024               	addwfc	??_display_labels+2,w,c
  3634  00270E  6E17               	movwf	wr8s@addr+2,c
  3635  002710  0E01               	movlw	low STR_9
  3636  002712  6E18               	movwf	wr8s@s,c
  3637  002714  0E0F               	movlw	high STR_9
  3638  002716  6E19               	movwf	wr8s@s+1,c
  3639  002718  ECC2  F018         	call	_wr8s	;wreg free
  3640  00271C  EC98  F01A         	call	_cmd_incrementn
  3641                           
  3642                           ;display.c: 28: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 360);cmd_incrementn(2);wr16
      +                          (1081344UL+cmd_offset, 150 + (26/2 +2));cmd_incrementn(2);wr16(1081344UL+cmd_offset, 26)
      +                          ;cmd_incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(1
      +                          08
  3643  002720  0E0C               	movlw	12
  3644  002722  6E1B               	movwf	cmd@command,c
  3645  002724  0EFF               	movlw	255
  3646  002726  6E1C               	movwf	cmd@command+1,c
  3647  002728  0EFF               	movlw	255
  3648  00272A  6E1D               	movwf	cmd@command+2,c
  3649  00272C  0EFF               	movlw	255
  3650  00272E  6E1E               	movwf	cmd@command+3,c
  3651  002730  EC51  F01A         	call	_cmd	;wreg free
  3652  002734  C02B  F022         	movff	_cmd_offset,??_display_labels
  3653  002738  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3654  00273C  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3655  00273E  0E00               	movlw	0
  3656  002740  2422               	addwf	??_display_labels,w,c
  3657  002742  6E17               	movwf	wr16@addr,c
  3658  002744  0E80               	movlw	128
  3659  002746  2023               	addwfc	??_display_labels+1,w,c
  3660  002748  6E18               	movwf	wr16@addr+1,c
  3661  00274A  0E10               	movlw	16
  3662  00274C  2024               	addwfc	??_display_labels+2,w,c
  3663  00274E  6E19               	movwf	wr16@addr+2,c
  3664  002750  0E01               	movlw	1
  3665  002752  6E1B               	movwf	wr16@value+1,c
  3666  002754  0E68               	movlw	104
  3667  002756  6E1A               	movwf	wr16@value,c
  3668  002758  EC33  F01A         	call	_wr16	;wreg free
  3669  00275C  0E02               	movlw	2
  3670  00275E  EC98  F01A         	call	_cmd_incrementn
  3671  002762  C02B  F022         	movff	_cmd_offset,??_display_labels
  3672  002766  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3673  00276A  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3674  00276C  0E00               	movlw	0
  3675  00276E  2422               	addwf	??_display_labels,w,c
  3676  002770  6E17               	movwf	wr16@addr,c
  3677  002772  0E80               	movlw	128
  3678  002774  2023               	addwfc	??_display_labels+1,w,c
  3679  002776  6E18               	movwf	wr16@addr+1,c
  3680  002778  0E10               	movlw	16
  3681  00277A  2024               	addwfc	??_display_labels+2,w,c
  3682  00277C  6E19               	movwf	wr16@addr+2,c
  3683  00277E  0E00               	movlw	0
  3684  002780  6E1B               	movwf	wr16@value+1,c
  3685  002782  0EA5               	movlw	165
  3686  002784  6E1A               	movwf	wr16@value,c
  3687  002786  EC33  F01A         	call	_wr16	;wreg free
  3688  00278A  0E02               	movlw	2
  3689  00278C  EC98  F01A         	call	_cmd_incrementn
  3690  002790  C02B  F022         	movff	_cmd_offset,??_display_labels
  3691  002794  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3692  002798  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3693  00279A  0E00               	movlw	0
  3694  00279C  2422               	addwf	??_display_labels,w,c
  3695  00279E  6E17               	movwf	wr16@addr,c
  3696  0027A0  0E80               	movlw	128
  3697  0027A2  2023               	addwfc	??_display_labels+1,w,c
  3698  0027A4  6E18               	movwf	wr16@addr+1,c
  3699  0027A6  0E10               	movlw	16
  3700  0027A8  2024               	addwfc	??_display_labels+2,w,c
  3701  0027AA  6E19               	movwf	wr16@addr+2,c
  3702  0027AC  0E00               	movlw	0
  3703  0027AE  6E1B               	movwf	wr16@value+1,c
  3704  0027B0  0E1A               	movlw	26
  3705  0027B2  6E1A               	movwf	wr16@value,c
  3706  0027B4  EC33  F01A         	call	_wr16	;wreg free
  3707  0027B8  0E02               	movlw	2
  3708  0027BA  EC98  F01A         	call	_cmd_incrementn
  3709  0027BE  C02B  F022         	movff	_cmd_offset,??_display_labels
  3710  0027C2  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3711  0027C6  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3712  0027C8  0E00               	movlw	0
  3713  0027CA  2422               	addwf	??_display_labels,w,c
  3714  0027CC  6E17               	movwf	wr16@addr,c
  3715  0027CE  0E80               	movlw	128
  3716  0027D0  2023               	addwfc	??_display_labels+1,w,c
  3717  0027D2  6E18               	movwf	wr16@addr+1,c
  3718  0027D4  0E10               	movlw	16
  3719  0027D6  2024               	addwfc	??_display_labels+2,w,c
  3720  0027D8  6E19               	movwf	wr16@addr+2,c
  3721  0027DA  0E00               	movlw	0
  3722  0027DC  6E1B               	movwf	wr16@value+1,c
  3723  0027DE  0E00               	movlw	0
  3724  0027E0  6E1A               	movwf	wr16@value,c
  3725  0027E2  EC33  F01A         	call	_wr16	;wreg free
  3726  0027E6  0E02               	movlw	2
  3727  0027E8  EC98  F01A         	call	_cmd_incrementn
  3728  0027EC  C02B  F022         	movff	_cmd_offset,??_display_labels
  3729  0027F0  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3730  0027F4  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3731  0027F6  0E00               	movlw	0
  3732  0027F8  2422               	addwf	??_display_labels,w,c
  3733  0027FA  6E15               	movwf	wr8s@addr,c
  3734  0027FC  0E80               	movlw	128
  3735  0027FE  2023               	addwfc	??_display_labels+1,w,c
  3736  002800  6E16               	movwf	wr8s@addr+1,c
  3737  002802  0E10               	movlw	16
  3738  002804  2024               	addwfc	??_display_labels+2,w,c
  3739  002806  6E17               	movwf	wr8s@addr+2,c
  3740  002808  0E2B               	movlw	low STR_10
  3741  00280A  6E18               	movwf	wr8s@s,c
  3742  00280C  0E0F               	movlw	high STR_10
  3743  00280E  6E19               	movwf	wr8s@s+1,c
  3744  002810  ECC2  F018         	call	_wr8s	;wreg free
  3745  002814  EC98  F01A         	call	_cmd_incrementn
  3746                           
  3747                           ;display.c: 29: cmd(4294967052UL);wr16(1081344UL+cmd_offset, 360 + 45);cmd_incrementn(2)
      +                          ;wr16(1081344UL+cmd_offset, 150 - 10);cmd_incrementn(2);wr16(1081344UL+cmd_offset, 31);c
      +                          md_incrementn(2);wr16(1081344UL+cmd_offset, 0);cmd_incrementn(2);cmd_incrementn(wr8s(108
      +                          13
  3748  002818  0E0C               	movlw	12
  3749  00281A  6E1B               	movwf	cmd@command,c
  3750  00281C  0EFF               	movlw	255
  3751  00281E  6E1C               	movwf	cmd@command+1,c
  3752  002820  0EFF               	movlw	255
  3753  002822  6E1D               	movwf	cmd@command+2,c
  3754  002824  0EFF               	movlw	255
  3755  002826  6E1E               	movwf	cmd@command+3,c
  3756  002828  EC51  F01A         	call	_cmd	;wreg free
  3757  00282C  C02B  F022         	movff	_cmd_offset,??_display_labels
  3758  002830  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3759  002834  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3760  002836  0E00               	movlw	0
  3761  002838  2422               	addwf	??_display_labels,w,c
  3762  00283A  6E17               	movwf	wr16@addr,c
  3763  00283C  0E80               	movlw	128
  3764  00283E  2023               	addwfc	??_display_labels+1,w,c
  3765  002840  6E18               	movwf	wr16@addr+1,c
  3766  002842  0E10               	movlw	16
  3767  002844  2024               	addwfc	??_display_labels+2,w,c
  3768  002846  6E19               	movwf	wr16@addr+2,c
  3769  002848  0E01               	movlw	1
  3770  00284A  6E1B               	movwf	wr16@value+1,c
  3771  00284C  0E95               	movlw	149
  3772  00284E  6E1A               	movwf	wr16@value,c
  3773  002850  EC33  F01A         	call	_wr16	;wreg free
  3774  002854  0E02               	movlw	2
  3775  002856  EC98  F01A         	call	_cmd_incrementn
  3776  00285A  C02B  F022         	movff	_cmd_offset,??_display_labels
  3777  00285E  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3778  002862  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3779  002864  0E00               	movlw	0
  3780  002866  2422               	addwf	??_display_labels,w,c
  3781  002868  6E17               	movwf	wr16@addr,c
  3782  00286A  0E80               	movlw	128
  3783  00286C  2023               	addwfc	??_display_labels+1,w,c
  3784  00286E  6E18               	movwf	wr16@addr+1,c
  3785  002870  0E10               	movlw	16
  3786  002872  2024               	addwfc	??_display_labels+2,w,c
  3787  002874  6E19               	movwf	wr16@addr+2,c
  3788  002876  0E00               	movlw	0
  3789  002878  6E1B               	movwf	wr16@value+1,c
  3790  00287A  0E8C               	movlw	140
  3791  00287C  6E1A               	movwf	wr16@value,c
  3792  00287E  EC33  F01A         	call	_wr16	;wreg free
  3793  002882  0E02               	movlw	2
  3794  002884  EC98  F01A         	call	_cmd_incrementn
  3795  002888  C02B  F022         	movff	_cmd_offset,??_display_labels
  3796  00288C  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3797  002890  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3798  002892  0E00               	movlw	0
  3799  002894  2422               	addwf	??_display_labels,w,c
  3800  002896  6E17               	movwf	wr16@addr,c
  3801  002898  0E80               	movlw	128
  3802  00289A  2023               	addwfc	??_display_labels+1,w,c
  3803  00289C  6E18               	movwf	wr16@addr+1,c
  3804  00289E  0E10               	movlw	16
  3805  0028A0  2024               	addwfc	??_display_labels+2,w,c
  3806  0028A2  6E19               	movwf	wr16@addr+2,c
  3807  0028A4  0E00               	movlw	0
  3808  0028A6  6E1B               	movwf	wr16@value+1,c
  3809  0028A8  0E1F               	movlw	31
  3810  0028AA  6E1A               	movwf	wr16@value,c
  3811  0028AC  EC33  F01A         	call	_wr16	;wreg free
  3812  0028B0  0E02               	movlw	2
  3813  0028B2  EC98  F01A         	call	_cmd_incrementn
  3814  0028B6  C02B  F022         	movff	_cmd_offset,??_display_labels
  3815  0028BA  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3816  0028BE  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3817  0028C0  0E00               	movlw	0
  3818  0028C2  2422               	addwf	??_display_labels,w,c
  3819  0028C4  6E17               	movwf	wr16@addr,c
  3820  0028C6  0E80               	movlw	128
  3821  0028C8  2023               	addwfc	??_display_labels+1,w,c
  3822  0028CA  6E18               	movwf	wr16@addr+1,c
  3823  0028CC  0E10               	movlw	16
  3824  0028CE  2024               	addwfc	??_display_labels+2,w,c
  3825  0028D0  6E19               	movwf	wr16@addr+2,c
  3826  0028D2  0E00               	movlw	0
  3827  0028D4  6E1B               	movwf	wr16@value+1,c
  3828  0028D6  0E00               	movlw	0
  3829  0028D8  6E1A               	movwf	wr16@value,c
  3830  0028DA  EC33  F01A         	call	_wr16	;wreg free
  3831  0028DE  0E02               	movlw	2
  3832  0028E0  EC98  F01A         	call	_cmd_incrementn
  3833  0028E4  C02B  F022         	movff	_cmd_offset,??_display_labels
  3834  0028E8  C02C  F023         	movff	_cmd_offset+1,??_display_labels+1
  3835  0028EC  6A24               	clrf	(??_display_labels+2)& (0+255),c
  3836  0028EE  0E00               	movlw	0
  3837  0028F0  2422               	addwf	??_display_labels,w,c
  3838  0028F2  6E15               	movwf	wr8s@addr,c
  3839  0028F4  0E80               	movlw	128
  3840  0028F6  2023               	addwfc	??_display_labels+1,w,c
  3841  0028F8  6E16               	movwf	wr8s@addr+1,c
  3842  0028FA  0E10               	movlw	16
  3843  0028FC  2024               	addwfc	??_display_labels+2,w,c
  3844  0028FE  6E17               	movwf	wr8s@addr+2,c
  3845  002900  0E27               	movlw	low STR_11
  3846  002902  6E18               	movwf	wr8s@s,c
  3847  002904  0E0F               	movlw	high STR_11
  3848  002906  6E19               	movwf	wr8s@s+1,c
  3849  002908  ECC2  F018         	call	_wr8s	;wreg free
  3850  00290C  EC98  F01A         	call	_cmd_incrementn
  3851  002910  0012               	return		;funcret
  3852  002912                     __end_of_display_labels:
  3853                           	opt stack 0
  3854                           tblptru	equ	0xFF8
  3855                           wreg	equ	0xFE8
  3856                           status	equ	0xFD8
  3857                           
  3858 ;; *************** function _wr8s *****************
  3859 ;; Defined at:
  3860 ;;		line 43 in file "Gue/FT800.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;  addr            3   20[COMRAM] unsigned um
  3863 ;;  s               2   23[COMRAM] PTR const unsigned char 
  3864 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(2), 
  3865 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  3866 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(4), 
  3867 ;;		 -> STR_10(4), STR_9(6), STR_8(6), STR_7(5), 
  3868 ;;		 -> STR_6(5), STR_5(5), STR_4(5), STR_3(4), 
  3869 ;;		 -> STR_2(5), STR_1(6), 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  i               1   29[COMRAM] unsigned char 
  3872 ;;  l               1   28[COMRAM] unsigned char 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      unsigned char 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3882 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3884 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3885 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3886 ;;Total ram usage:       10 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    5
  3889 ;; This function calls:
  3890 ;;		_SPI_Exchange8bit
  3891 ;;		_strlen
  3892 ;; This function is called by:
  3893 ;;		_display_labels
  3894 ;;		_display_rpm
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text6
  3899  003184                     __ptext6:
  3900                           	opt stack 0
  3901  003184                     _wr8s:
  3902                           	opt stack 24
  3903                           
  3904                           ;FT800.c: 45: LATDbits.LATD0 = 0;
  3905                           
  3906                           ;incstack = 0
  3907  003184  908C               	bcf	3980,0,c	;volatile
  3908                           
  3909                           ;FT800.c: 46: SPI_Exchange8bit(0x80 | (addr >> 16));
  3910  003186  5017               	movf	wr8s@addr+2,w,c
  3911  003188  0980               	iorlw	128
  3912  00318A  ECE8  F01A         	call	_SPI_Exchange8bit
  3913                           
  3914                           ;FT800.c: 47: SPI_Exchange8bit(addr >> 8);
  3915  00318E  C015  F01A         	movff	wr8s@addr,??_wr8s
  3916  003192  C016  F01B         	movff	wr8s@addr+1,??_wr8s+1
  3917  003196  C017  F01C         	movff	wr8s@addr+2,??_wr8s+2
  3918  00319A  C01B  F01A         	movff	??_wr8s+1,??_wr8s
  3919  00319E  C01C  F01B         	movff	??_wr8s+2,??_wr8s+1
  3920  0031A2  6A1C               	clrf	??_wr8s+2,c
  3921  0031A4  501A               	movf	??_wr8s,w,c
  3922  0031A6  ECE8  F01A         	call	_SPI_Exchange8bit
  3923                           
  3924                           ;FT800.c: 48: SPI_Exchange8bit(addr);
  3925  0031AA  5015               	movf	wr8s@addr,w,c
  3926  0031AC  ECE8  F01A         	call	_SPI_Exchange8bit
  3927                           
  3928                           ;FT800.c: 49: ft_uint8_t l = strlen(s);
  3929  0031B0  C018  F00F         	movff	wr8s@s,strlen@s
  3930  0031B4  C019  F010         	movff	wr8s@s+1,strlen@s+1
  3931  0031B8  EC14  F01A         	call	_strlen	;wreg free
  3932  0031BC  500F               	movf	?_strlen,w,c
  3933  0031BE  6E1D               	movwf	wr8s@l,c
  3934                           
  3935                           ;FT800.c: 50: ft_uint8_t i;
  3936                           ;FT800.c: 51: for(i=0;i<=l;i++){
  3937  0031C0  0E00               	movlw	0
  3938  0031C2  6E1E               	movwf	wr8s@i,c
  3939  0031C4  D013               	goto	l2469
  3940  0031C6                     l2465:
  3941                           
  3942                           ;FT800.c: 52: SPI_Exchange8bit(s[i]);
  3943  0031C6  501E               	movf	wr8s@i,w,c
  3944  0031C8  0D01               	mullw	1
  3945  0031CA  C018  F01A         	movff	wr8s@s,??_wr8s
  3946  0031CE  C019  F01B         	movff	wr8s@s+1,??_wr8s+1
  3947  0031D2  50F3               	movf	prodl,w,c
  3948  0031D4  261A               	addwf	??_wr8s,f,c
  3949  0031D6  50F4               	movf	prodh,w,c
  3950  0031D8  221B               	addwfc	??_wr8s+1,f,c
  3951  0031DA  C01A  FFF6         	movff	??_wr8s,tblptrl
  3952  0031DE  C01B  FFF7         	movff	??_wr8s+1,tblptrh
  3953  0031E2                     	if	0	;tblptru may be non-zero
  3954  0031E2                     	endif
  3955  0031E2                     	if	0	;tblptru may be non-zero
  3956  0031E2                     	endif
  3957  0031E2  0008               	tblrd		*
  3958  0031E4  50F5               	movf	tablat,w,c
  3959  0031E6  ECE8  F01A         	call	_SPI_Exchange8bit
  3960  0031EA  2A1E               	incf	wr8s@i,f,c
  3961  0031EC                     l2469:
  3962  0031EC  501E               	movf	wr8s@i,w,c
  3963  0031EE  5C1D               	subwf	wr8s@l,w,c
  3964  0031F0  A0D8               	btfss	status,0,c
  3965  0031F2  D005               	goto	l2475
  3966  0031F4  D7E8               	goto	l2465
  3967  0031F6                     l2471:
  3968                           
  3969                           ;FT800.c: 55: SPI_Exchange8bit(0);
  3970  0031F6  0E00               	movlw	0
  3971  0031F8  ECE8  F01A         	call	_SPI_Exchange8bit
  3972  0031FC  2A1E               	incf	wr8s@i,f,c
  3973  0031FE                     l2475:
  3974  0031FE  C01E  F01A         	movff	wr8s@i,??_wr8s
  3975  003202  0E03               	movlw	3
  3976  003204  161A               	andwf	??_wr8s,f,c
  3977  003206  A4D8               	btfss	status,2,c
  3978  003208  D7F6               	goto	l2471
  3979                           
  3980                           ;FT800.c: 56: }
  3981                           ;FT800.c: 57: LATDbits.LATD0 = 1;
  3982  00320A  808C               	bsf	3980,0,c	;volatile
  3983                           
  3984                           ;FT800.c: 58: return i;
  3985  00320C  501E               	movf	wr8s@i,w,c
  3986  00320E  0012               	return	
  3987  003210                     __end_of_wr8s:
  3988                           	opt stack 0
  3989                           tblptru	equ	0xFF8
  3990                           tblptrh	equ	0xFF7
  3991                           tblptrl	equ	0xFF6
  3992                           tablat	equ	0xFF5
  3993                           prodh	equ	0xFF4
  3994                           prodl	equ	0xFF3
  3995                           wreg	equ	0xFE8
  3996                           status	equ	0xFD8
  3997                           
  3998 ;; *************** function _strlen *****************
  3999 ;; Defined at:
  4000 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strlen.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  s               2   14[COMRAM] PTR const unsigned char 
  4003 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(2), 
  4004 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  4005 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(4), 
  4006 ;;		 -> STR_10(4), STR_9(6), STR_8(6), STR_7(5), 
  4007 ;;		 -> STR_6(5), STR_5(5), STR_4(5), STR_3(4), 
  4008 ;;		 -> STR_2(5), STR_1(6), 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  cp              2   18[COMRAM] PTR const unsigned char 
  4011 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(2), 
  4012 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  4013 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(4), 
  4014 ;;		 -> STR_10(4), STR_9(6), STR_8(6), STR_7(5), 
  4015 ;;		 -> STR_6(5), STR_5(5), STR_4(5), STR_3(4), 
  4016 ;;		 -> STR_2(5), STR_1(6), 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  2   14[COMRAM] unsigned int 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4029 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4030 ;;Total ram usage:        6 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    4
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_wr8s
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text7
  4041  003428                     __ptext7:
  4042                           	opt stack 0
  4043  003428                     _strlen:
  4044                           	opt stack 24
  4045                           
  4046                           ;incstack = 0
  4047  003428  C00F  F013         	movff	strlen@s,strlen@cp
  4048  00342C  C010  F014         	movff	strlen@s+1,strlen@cp+1
  4049  003430  D002               	goto	l2411
  4050  003432                     l2409:
  4051  003432  4A13               	infsnz	strlen@cp,f,c
  4052  003434  2A14               	incf	strlen@cp+1,f,c
  4053  003436                     l2411:
  4054  003436  C013  FFF6         	movff	strlen@cp,tblptrl
  4055  00343A  C014  FFF7         	movff	strlen@cp+1,tblptrh
  4056  00343E                     	if	0	;tblptru may be non-zero
  4057  00343E                     	endif
  4058  00343E                     	if	0	;tblptru may be non-zero
  4059  00343E                     	endif
  4060  00343E  0008               	tblrd		*
  4061  003440  50F5               	movf	tablat,w,c
  4062  003442  0900               	iorlw	0
  4063  003444  A4D8               	btfss	status,2,c
  4064  003446  D7F5               	goto	l2409
  4065  003448  C00F  F011         	movff	strlen@s,??_strlen
  4066  00344C  C010  F012         	movff	strlen@s+1,??_strlen+1
  4067  003450  1E11               	comf	??_strlen,f,c
  4068  003452  1E12               	comf	??_strlen+1,f,c
  4069  003454  4A11               	infsnz	??_strlen,f,c
  4070  003456  2A12               	incf	??_strlen+1,f,c
  4071  003458  5013               	movf	strlen@cp,w,c
  4072  00345A  2411               	addwf	??_strlen,w,c
  4073  00345C  6E0F               	movwf	?_strlen,c
  4074  00345E  5014               	movf	strlen@cp+1,w,c
  4075  003460  2012               	addwfc	??_strlen+1,w,c
  4076  003462  6E10               	movwf	?_strlen+1,c
  4077  003464  0012               	return	
  4078  003466                     __end_of_strlen:
  4079                           	opt stack 0
  4080                           tblptru	equ	0xFF8
  4081                           tblptrh	equ	0xFF7
  4082                           tblptrl	equ	0xFF6
  4083                           tablat	equ	0xFF5
  4084                           prodh	equ	0xFF4
  4085                           prodl	equ	0xFF3
  4086                           wreg	equ	0xFE8
  4087                           status	equ	0xFD8
  4088                           
  4089 ;; *************** function _display_gear *****************
  4090 ;; Defined at:
  4091 ;;		line 65 in file "display.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  gear            2   33[COMRAM] int 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4109 ;;Total ram usage:        4 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    7
  4112 ;; This function calls:
  4113 ;;		_cmd
  4114 ;; This function is called by:
  4115 ;;		_main
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text8
  4120  002912                     __ptext8:
  4121                           	opt stack 0
  4122  002912                     _display_gear:
  4123                           	opt stack 23
  4124                           
  4125                           ;display.c: 66: cmd(((14UL<<24)|(((96)&4095UL)<<0)));
  4126                           
  4127                           ;incstack = 0
  4128  002912  0E60               	movlw	96
  4129  002914  6E1B               	movwf	cmd@command,c
  4130  002916  0E00               	movlw	0
  4131  002918  6E1C               	movwf	cmd@command+1,c
  4132  00291A  0E00               	movlw	0
  4133  00291C  6E1D               	movwf	cmd@command+2,c
  4134  00291E  0E0E               	movlw	14
  4135  002920  6E1E               	movwf	cmd@command+3,c
  4136  002922  EC51  F01A         	call	_cmd	;wreg free
  4137                           
  4138                           ;display.c: 67: cmd(((4UL<<24)|(((202)&255UL)<<16)|(((125)&255UL)<<8)|(((0)&255UL)<<0)))
      +                          ;
  4139  002926  0E00               	movlw	0
  4140  002928  6E1B               	movwf	cmd@command,c
  4141  00292A  0E7D               	movlw	125
  4142  00292C  6E1C               	movwf	cmd@command+1,c
  4143  00292E  0ECA               	movlw	202
  4144  002930  6E1D               	movwf	cmd@command+2,c
  4145  002932  0E04               	movlw	4
  4146  002934  6E1E               	movwf	cmd@command+3,c
  4147  002936  EC51  F01A         	call	_cmd	;wreg free
  4148                           
  4149                           ;display.c: 68: cmd(((31UL<<24)|(((3UL)&15UL)<<0)));
  4150  00293A  0E03               	movlw	3
  4151  00293C  6E1B               	movwf	cmd@command,c
  4152  00293E  0E00               	movlw	0
  4153  002940  6E1C               	movwf	cmd@command+1,c
  4154  002942  0E00               	movlw	0
  4155  002944  6E1D               	movwf	cmd@command+2,c
  4156  002946  0E1F               	movlw	31
  4157  002948  6E1E               	movwf	cmd@command+3,c
  4158  00294A  EC51  F01A         	call	_cmd	;wreg free
  4159                           
  4160                           ;display.c: 69: switch (gear) {
  4161  00294E  D1FA               	goto	l2849
  4162  002950                     l2835:
  4163                           
  4164                           ;display.c: 71: cmd(((2UL<<30)|(((380+40)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4165  002950  0E00               	movlw	0
  4166  002952  6E1B               	movwf	cmd@command,c
  4167  002954  0EF0               	movlw	240
  4168  002956  6E1C               	movwf	cmd@command+1,c
  4169  002958  0E80               	movlw	128
  4170  00295A  6E1D               	movwf	cmd@command+2,c
  4171  00295C  0EB4               	movlw	180
  4172  00295E  6E1E               	movwf	cmd@command+3,c
  4173  002960  EC51  F01A         	call	_cmd	;wreg free
  4174                           
  4175                           ;display.c: 72: cmd(((2UL<<30)|(((380+40)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4176  002964  0E00               	movlw	0
  4177  002966  6E1B               	movwf	cmd@command,c
  4178  002968  0E30               	movlw	48
  4179  00296A  6E1C               	movwf	cmd@command+1,c
  4180  00296C  0E87               	movlw	135
  4181  00296E  6E1D               	movwf	cmd@command+2,c
  4182  002970  0EB4               	movlw	180
  4183  002972  6E1E               	movwf	cmd@command+3,c
  4184  002974  EC51  F01A         	call	_cmd	;wreg free
  4185                           
  4186                           ;display.c: 73: cmd(((2UL<<30)|(((380+39)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4187  002978  0E00               	movlw	0
  4188  00297A  6E1B               	movwf	cmd@command,c
  4189  00297C  0EF0               	movlw	240
  4190  00297E  6E1C               	movwf	cmd@command+1,c
  4191  002980  0E60               	movlw	96
  4192  002982  6E1D               	movwf	cmd@command+2,c
  4193  002984  0EB4               	movlw	180
  4194  002986  6E1E               	movwf	cmd@command+3,c
  4195  002988  EC51  F01A         	call	_cmd	;wreg free
  4196                           
  4197                           ;display.c: 74: cmd(((2UL<<30)|(((380+20)&511UL)<<21)|(((0+30)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4198  00298C  0E00               	movlw	0
  4199  00298E  6E1B               	movwf	cmd@command,c
  4200  002990  0EE0               	movlw	224
  4201  002992  6E1C               	movwf	cmd@command+1,c
  4202  002994  0E01               	movlw	1
  4203  002996  6E1D               	movwf	cmd@command+2,c
  4204  002998  0EB2               	movlw	178
  4205  00299A  6E1E               	movwf	cmd@command+3,c
  4206  00299C  EC51  F01A         	call	_cmd	;wreg free
  4207                           
  4208                           ;display.c: 75: cmd(((2UL<<30)|(((380+25)&511UL)<<21)|(((0+116)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4209  0029A0  0E00               	movlw	0
  4210  0029A2  6E1B               	movwf	cmd@command,c
  4211  0029A4  0E40               	movlw	64
  4212  0029A6  6E1C               	movwf	cmd@command+1,c
  4213  0029A8  0EA7               	movlw	167
  4214  0029AA  6E1D               	movwf	cmd@command+2,c
  4215  0029AC  0EB2               	movlw	178
  4216  0029AE  6E1E               	movwf	cmd@command+3,c
  4217  0029B0  EC51  F01A         	call	_cmd	;wreg free
  4218                           
  4219                           ;display.c: 76: cmd(((2UL<<30)|(((380+55)&511UL)<<21)|(((0+116)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4220  0029B4  0E00               	movlw	0
  4221  0029B6  6E1B               	movwf	cmd@command,c
  4222  0029B8  0E40               	movlw	64
  4223  0029BA  6E1C               	movwf	cmd@command+1,c
  4224  0029BC  0E67               	movlw	103
  4225  0029BE  6E1D               	movwf	cmd@command+2,c
  4226  0029C0  0EB6               	movlw	182
  4227  0029C2  6E1E               	movwf	cmd@command+3,c
  4228  0029C4  EC51  F01A         	call	_cmd	;wreg free
  4229                           
  4230                           ;display.c: 77: break;
  4231  0029C8  0012               	return	
  4232  0029CA                     l2837:
  4233                           
  4234                           ;display.c: 79: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  4235  0029CA  0E00               	movlw	0
  4236  0029CC  6E1B               	movwf	cmd@command,c
  4237  0029CE  0EF0               	movlw	240
  4238  0029D0  6E1C               	movwf	cmd@command+1,c
  4239  0029D2  0E80               	movlw	128
  4240  0029D4  6E1D               	movwf	cmd@command+2,c
  4241  0029D6  0EAF               	movlw	175
  4242  0029D8  6E1E               	movwf	cmd@command+3,c
  4243  0029DA  EC51  F01A         	call	_cmd	;wreg free
  4244                           
  4245                           ;display.c: 80: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4246  0029DE  0E00               	movlw	0
  4247  0029E0  6E1B               	movwf	cmd@command,c
  4248  0029E2  0EF0               	movlw	240
  4249  0029E4  6E1C               	movwf	cmd@command+1,c
  4250  0029E6  0E80               	movlw	128
  4251  0029E8  6E1D               	movwf	cmd@command+2,c
  4252  0029EA  0EB9               	movlw	185
  4253  0029EC  6E1E               	movwf	cmd@command+3,c
  4254  0029EE  EC51  F01A         	call	_cmd	;wreg free
  4255                           
  4256                           ;display.c: 81: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4257  0029F2  0E00               	movlw	0
  4258  0029F4  6E1B               	movwf	cmd@command,c
  4259  0029F6  0E00               	movlw	0
  4260  0029F8  6E1C               	movwf	cmd@command+1,c
  4261  0029FA  0E81               	movlw	129
  4262  0029FC  6E1D               	movwf	cmd@command+2,c
  4263  0029FE  0EB9               	movlw	185
  4264  002A00  6E1E               	movwf	cmd@command+3,c
  4265  002A02  EC51  F01A         	call	_cmd	;wreg free
  4266                           
  4267                           ;display.c: 82: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+64)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4268  002A06  0E00               	movlw	0
  4269  002A08  6E1B               	movwf	cmd@command,c
  4270  002A0A  0E00               	movlw	0
  4271  002A0C  6E1C               	movwf	cmd@command+1,c
  4272  002A0E  0E84               	movlw	132
  4273  002A10  6E1D               	movwf	cmd@command+2,c
  4274  002A12  0EB9               	movlw	185
  4275  002A14  6E1E               	movwf	cmd@command+3,c
  4276  002A16  EC51  F01A         	call	_cmd	;wreg free
  4277                           
  4278                           ;display.c: 83: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4279  002A1A  0E00               	movlw	0
  4280  002A1C  6E1B               	movwf	cmd@command,c
  4281  002A1E  0E10               	movlw	16
  4282  002A20  6E1C               	movwf	cmd@command+1,c
  4283  002A22  0E84               	movlw	132
  4284  002A24  6E1D               	movwf	cmd@command+2,c
  4285  002A26  0EB9               	movlw	185
  4286  002A28  6E1E               	movwf	cmd@command+3,c
  4287  002A2A  EC51  F01A         	call	_cmd	;wreg free
  4288                           
  4289                           ;display.c: 84: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  4290  002A2E  0E00               	movlw	0
  4291  002A30  6E1B               	movwf	cmd@command,c
  4292  002A32  0E10               	movlw	16
  4293  002A34  6E1C               	movwf	cmd@command+1,c
  4294  002A36  0E84               	movlw	132
  4295  002A38  6E1D               	movwf	cmd@command+2,c
  4296  002A3A  0EAF               	movlw	175
  4297  002A3C  6E1E               	movwf	cmd@command+3,c
  4298  002A3E  EC51  F01A         	call	_cmd	;wreg free
  4299                           
  4300                           ;display.c: 85: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+66)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  4301  002A42  0E00               	movlw	0
  4302  002A44  6E1B               	movwf	cmd@command,c
  4303  002A46  0E20               	movlw	32
  4304  002A48  6E1C               	movwf	cmd@command+1,c
  4305  002A4A  0E84               	movlw	132
  4306  002A4C  6E1D               	movwf	cmd@command+2,c
  4307  002A4E  0EAF               	movlw	175
  4308  002A50  6E1E               	movwf	cmd@command+3,c
  4309  002A52  EC51  F01A         	call	_cmd	;wreg free
  4310                           
  4311                           ;display.c: 86: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  4312  002A56  0E00               	movlw	0
  4313  002A58  6E1B               	movwf	cmd@command,c
  4314  002A5A  0E30               	movlw	48
  4315  002A5C  6E1C               	movwf	cmd@command+1,c
  4316  002A5E  0E87               	movlw	135
  4317  002A60  6E1D               	movwf	cmd@command+2,c
  4318  002A62  0EAF               	movlw	175
  4319  002A64  6E1E               	movwf	cmd@command+3,c
  4320  002A66  EC51  F01A         	call	_cmd	;wreg free
  4321                           
  4322                           ;display.c: 87: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4323  002A6A  0E00               	movlw	0
  4324  002A6C  6E1B               	movwf	cmd@command,c
  4325  002A6E  0E30               	movlw	48
  4326  002A70  6E1C               	movwf	cmd@command+1,c
  4327  002A72  0EA7               	movlw	167
  4328  002A74  6E1D               	movwf	cmd@command+2,c
  4329  002A76  0EAF               	movlw	175
  4330  002A78  6E1E               	movwf	cmd@command+3,c
  4331  002A7A  EC51  F01A         	call	_cmd	;wreg free
  4332                           
  4333                           ;display.c: 88: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4334  002A7E  0E00               	movlw	0
  4335  002A80  6E1B               	movwf	cmd@command,c
  4336  002A82  0E30               	movlw	48
  4337  002A84  6E1C               	movwf	cmd@command+1,c
  4338  002A86  0E87               	movlw	135
  4339  002A88  6E1D               	movwf	cmd@command+2,c
  4340  002A8A  0EB9               	movlw	185
  4341  002A8C  6E1E               	movwf	cmd@command+3,c
  4342  002A8E  EC51  F01A         	call	_cmd	;wreg free
  4343                           
  4344                           ;display.c: 89: break;
  4345  002A92  0012               	return	
  4346  002A94                     l2839:
  4347                           
  4348                           ;display.c: 91: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  4349  002A94  0E00               	movlw	0
  4350  002A96  6E1B               	movwf	cmd@command,c
  4351  002A98  0EF0               	movlw	240
  4352  002A9A  6E1C               	movwf	cmd@command+1,c
  4353  002A9C  0E80               	movlw	128
  4354  002A9E  6E1D               	movwf	cmd@command+2,c
  4355  002AA0  0EAF               	movlw	175
  4356  002AA2  6E1E               	movwf	cmd@command+3,c
  4357  002AA4  EC51  F01A         	call	_cmd	;wreg free
  4358                           
  4359                           ;display.c: 92: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4360  002AA8  0E00               	movlw	0
  4361  002AAA  6E1B               	movwf	cmd@command,c
  4362  002AAC  0EF0               	movlw	240
  4363  002AAE  6E1C               	movwf	cmd@command+1,c
  4364  002AB0  0E60               	movlw	96
  4365  002AB2  6E1D               	movwf	cmd@command+2,c
  4366  002AB4  0EB9               	movlw	185
  4367  002AB6  6E1E               	movwf	cmd@command+3,c
  4368  002AB8  EC51  F01A         	call	_cmd	;wreg free
  4369                           
  4370                           ;display.c: 93: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4371  002ABC  0E00               	movlw	0
  4372  002ABE  6E1B               	movwf	cmd@command,c
  4373  002AC0  0E00               	movlw	0
  4374  002AC2  6E1C               	movwf	cmd@command+1,c
  4375  002AC4  0E81               	movlw	129
  4376  002AC6  6E1D               	movwf	cmd@command+2,c
  4377  002AC8  0EB9               	movlw	185
  4378  002ACA  6E1E               	movwf	cmd@command+3,c
  4379  002ACC  EC51  F01A         	call	_cmd	;wreg free
  4380                           
  4381                           ;display.c: 94: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4382  002AD0  0E00               	movlw	0
  4383  002AD2  6E1B               	movwf	cmd@command,c
  4384  002AD4  0E30               	movlw	48
  4385  002AD6  6E1C               	movwf	cmd@command+1,c
  4386  002AD8  0E87               	movlw	135
  4387  002ADA  6E1D               	movwf	cmd@command+2,c
  4388  002ADC  0EB9               	movlw	185
  4389  002ADE  6E1E               	movwf	cmd@command+3,c
  4390  002AE0  EC51  F01A         	call	_cmd	;wreg free
  4391                           
  4392                           ;display.c: 95: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4393  002AE4  0E00               	movlw	0
  4394  002AE6  6E1B               	movwf	cmd@command,c
  4395  002AE8  0E10               	movlw	16
  4396  002AEA  6E1C               	movwf	cmd@command+1,c
  4397  002AEC  0E64               	movlw	100
  4398  002AEE  6E1D               	movwf	cmd@command+2,c
  4399  002AF0  0EB9               	movlw	185
  4400  002AF2  6E1E               	movwf	cmd@command+3,c
  4401  002AF4  EC51  F01A         	call	_cmd	;wreg free
  4402                           
  4403                           ;display.c: 96: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<7)|
      +                          (((0)&127UL)<<0)));
  4404  002AF8  0E00               	movlw	0
  4405  002AFA  6E1B               	movwf	cmd@command,c
  4406  002AFC  0E10               	movlw	16
  4407  002AFE  6E1C               	movwf	cmd@command+1,c
  4408  002B00  0E84               	movlw	132
  4409  002B02  6E1D               	movwf	cmd@command+2,c
  4410  002B04  0EAF               	movlw	175
  4411  002B06  6E1E               	movwf	cmd@command+3,c
  4412  002B08  EC51  F01A         	call	_cmd	;wreg free
  4413                           
  4414                           ;display.c: 97: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4415  002B0C  0E00               	movlw	0
  4416  002B0E  6E1B               	movwf	cmd@command,c
  4417  002B10  0E30               	movlw	48
  4418  002B12  6E1C               	movwf	cmd@command+1,c
  4419  002B14  0EA7               	movlw	167
  4420  002B16  6E1D               	movwf	cmd@command+2,c
  4421  002B18  0EAF               	movlw	175
  4422  002B1A  6E1E               	movwf	cmd@command+3,c
  4423  002B1C  EC51  F01A         	call	_cmd	;wreg free
  4424                           
  4425                           ;display.c: 98: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4426  002B20  0E00               	movlw	0
  4427  002B22  6E1B               	movwf	cmd@command,c
  4428  002B24  0E30               	movlw	48
  4429  002B26  6E1C               	movwf	cmd@command+1,c
  4430  002B28  0E67               	movlw	103
  4431  002B2A  6E1D               	movwf	cmd@command+2,c
  4432  002B2C  0EB9               	movlw	185
  4433  002B2E  6E1E               	movwf	cmd@command+3,c
  4434  002B30  EC51  F01A         	call	_cmd	;wreg free
  4435                           
  4436                           ;display.c: 99: break;
  4437  002B34  0012               	return	
  4438  002B36                     l2841:
  4439                           
  4440                           ;display.c: 101: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  4441  002B36  0E00               	movlw	0
  4442  002B38  6E1B               	movwf	cmd@command,c
  4443  002B3A  0EF0               	movlw	240
  4444  002B3C  6E1C               	movwf	cmd@command+1,c
  4445  002B3E  0E80               	movlw	128
  4446  002B40  6E1D               	movwf	cmd@command+2,c
  4447  002B42  0EAF               	movlw	175
  4448  002B44  6E1E               	movwf	cmd@command+3,c
  4449  002B46  EC51  F01A         	call	_cmd	;wreg free
  4450                           
  4451                           ;display.c: 102: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+64)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  4452  002B4A  0E00               	movlw	0
  4453  002B4C  6E1B               	movwf	cmd@command,c
  4454  002B4E  0E00               	movlw	0
  4455  002B50  6E1C               	movwf	cmd@command+1,c
  4456  002B52  0E84               	movlw	132
  4457  002B54  6E1D               	movwf	cmd@command+2,c
  4458  002B56  0EAF               	movlw	175
  4459  002B58  6E1E               	movwf	cmd@command+3,c
  4460  002B5A  EC51  F01A         	call	_cmd	;wreg free
  4461                           
  4462                           ;display.c: 103: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4463  002B5E  0E00               	movlw	0
  4464  002B60  6E1B               	movwf	cmd@command,c
  4465  002B62  0E00               	movlw	0
  4466  002B64  6E1C               	movwf	cmd@command+1,c
  4467  002B66  0E81               	movlw	129
  4468  002B68  6E1D               	movwf	cmd@command+2,c
  4469  002B6A  0EB9               	movlw	185
  4470  002B6C  6E1E               	movwf	cmd@command+3,c
  4471  002B6E  EC51  F01A         	call	_cmd	;wreg free
  4472                           
  4473                           ;display.c: 104: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  4474  002B72  0E00               	movlw	0
  4475  002B74  6E1B               	movwf	cmd@command,c
  4476  002B76  0E30               	movlw	48
  4477  002B78  6E1C               	movwf	cmd@command+1,c
  4478  002B7A  0E87               	movlw	135
  4479  002B7C  6E1D               	movwf	cmd@command+2,c
  4480  002B7E  0EB9               	movlw	185
  4481  002B80  6E1E               	movwf	cmd@command+3,c
  4482  002B82  EC51  F01A         	call	_cmd	;wreg free
  4483                           
  4484                           ;display.c: 105: cmd(((2UL<<30)|(((380+77)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4485  002B86  0E00               	movlw	0
  4486  002B88  6E1B               	movwf	cmd@command,c
  4487  002B8A  0E10               	movlw	16
  4488  002B8C  6E1C               	movwf	cmd@command+1,c
  4489  002B8E  0E24               	movlw	36
  4490  002B90  6E1D               	movwf	cmd@command+2,c
  4491  002B92  0EB9               	movlw	185
  4492  002B94  6E1E               	movwf	cmd@command+3,c
  4493  002B96  EC51  F01A         	call	_cmd	;wreg free
  4494                           
  4495                           ;display.c: 106: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4496  002B9A  0E00               	movlw	0
  4497  002B9C  6E1B               	movwf	cmd@command,c
  4498  002B9E  0E10               	movlw	16
  4499  002BA0  6E1C               	movwf	cmd@command+1,c
  4500  002BA2  0EA4               	movlw	164
  4501  002BA4  6E1D               	movwf	cmd@command+2,c
  4502  002BA6  0EAF               	movlw	175
  4503  002BA8  6E1E               	movwf	cmd@command+3,c
  4504  002BAA  EC51  F01A         	call	_cmd	;wreg free
  4505                           
  4506                           ;display.c: 107: break;
  4507  002BAE  0012               	return	
  4508  002BB0                     l2843:
  4509                           
  4510                           ;display.c: 109: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  4511  002BB0  0E00               	movlw	0
  4512  002BB2  6E1B               	movwf	cmd@command,c
  4513  002BB4  0EF0               	movlw	240
  4514  002BB6  6E1C               	movwf	cmd@command+1,c
  4515  002BB8  0E80               	movlw	128
  4516  002BBA  6E1D               	movwf	cmd@command+2,c
  4517  002BBC  0EAF               	movlw	175
  4518  002BBE  6E1E               	movwf	cmd@command+3,c
  4519  002BC0  EC51  F01A         	call	_cmd	;wreg free
  4520                           
  4521                           ;display.c: 110: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4522  002BC4  0E00               	movlw	0
  4523  002BC6  6E1B               	movwf	cmd@command,c
  4524  002BC8  0EF0               	movlw	240
  4525  002BCA  6E1C               	movwf	cmd@command+1,c
  4526  002BCC  0E60               	movlw	96
  4527  002BCE  6E1D               	movwf	cmd@command+2,c
  4528  002BD0  0EB9               	movlw	185
  4529  002BD2  6E1E               	movwf	cmd@command+3,c
  4530  002BD4  EC51  F01A         	call	_cmd	;wreg free
  4531                           
  4532                           ;display.c: 111: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  4533  002BD8  0E00               	movlw	0
  4534  002BDA  6E1B               	movwf	cmd@command,c
  4535  002BDC  0E00               	movlw	0
  4536  002BDE  6E1C               	movwf	cmd@command+1,c
  4537  002BE0  0E81               	movlw	129
  4538  002BE2  6E1D               	movwf	cmd@command+2,c
  4539  002BE4  0EAF               	movlw	175
  4540  002BE6  6E1E               	movwf	cmd@command+3,c
  4541  002BE8  EC51  F01A         	call	_cmd	;wreg free
  4542                           
  4543                           ;display.c: 112: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+64)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  4544  002BEC  0E00               	movlw	0
  4545  002BEE  6E1B               	movwf	cmd@command,c
  4546  002BF0  0E00               	movlw	0
  4547  002BF2  6E1C               	movwf	cmd@command+1,c
  4548  002BF4  0E84               	movlw	132
  4549  002BF6  6E1D               	movwf	cmd@command+2,c
  4550  002BF8  0EAF               	movlw	175
  4551  002BFA  6E1E               	movwf	cmd@command+3,c
  4552  002BFC  EC51  F01A         	call	_cmd	;wreg free
  4553                           
  4554                           ;display.c: 113: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4555  002C00  0E00               	movlw	0
  4556  002C02  6E1B               	movwf	cmd@command,c
  4557  002C04  0E10               	movlw	16
  4558  002C06  6E1C               	movwf	cmd@command+1,c
  4559  002C08  0E84               	movlw	132
  4560  002C0A  6E1D               	movwf	cmd@command+2,c
  4561  002C0C  0EB9               	movlw	185
  4562  002C0E  6E1E               	movwf	cmd@command+3,c
  4563  002C10  EC51  F01A         	call	_cmd	;wreg free
  4564                           
  4565                           ;display.c: 114: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+114)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  4566  002C14  0E00               	movlw	0
  4567  002C16  6E1B               	movwf	cmd@command,c
  4568  002C18  0E20               	movlw	32
  4569  002C1A  6E1C               	movwf	cmd@command+1,c
  4570  002C1C  0E87               	movlw	135
  4571  002C1E  6E1D               	movwf	cmd@command+2,c
  4572  002C20  0EB9               	movlw	185
  4573  002C22  6E1E               	movwf	cmd@command+3,c
  4574  002C24  EC51  F01A         	call	_cmd	;wreg free
  4575                           
  4576                           ;display.c: 115: cmd(((2UL<<30)|(((380+77)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4577  002C28  0E00               	movlw	0
  4578  002C2A  6E1B               	movwf	cmd@command,c
  4579  002C2C  0E10               	movlw	16
  4580  002C2E  6E1C               	movwf	cmd@command+1,c
  4581  002C30  0E24               	movlw	36
  4582  002C32  6E1D               	movwf	cmd@command+2,c
  4583  002C34  0EB9               	movlw	185
  4584  002C36  6E1E               	movwf	cmd@command+3,c
  4585  002C38  EC51  F01A         	call	_cmd	;wreg free
  4586                           
  4587                           ;display.c: 116: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4588  002C3C  0E00               	movlw	0
  4589  002C3E  6E1B               	movwf	cmd@command,c
  4590  002C40  0E10               	movlw	16
  4591  002C42  6E1C               	movwf	cmd@command+1,c
  4592  002C44  0EA4               	movlw	164
  4593  002C46  6E1D               	movwf	cmd@command+2,c
  4594  002C48  0EAF               	movlw	175
  4595  002C4A  6E1E               	movwf	cmd@command+3,c
  4596  002C4C  EC51  F01A         	call	_cmd	;wreg free
  4597                           
  4598                           ;display.c: 117: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4599  002C50  0E00               	movlw	0
  4600  002C52  6E1B               	movwf	cmd@command,c
  4601  002C54  0E30               	movlw	48
  4602  002C56  6E1C               	movwf	cmd@command+1,c
  4603  002C58  0EA7               	movlw	167
  4604  002C5A  6E1D               	movwf	cmd@command+2,c
  4605  002C5C  0EAF               	movlw	175
  4606  002C5E  6E1E               	movwf	cmd@command+3,c
  4607  002C60  EC51  F01A         	call	_cmd	;wreg free
  4608                           
  4609                           ;display.c: 118: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  4610  002C64  0E00               	movlw	0
  4611  002C66  6E1B               	movwf	cmd@command,c
  4612  002C68  0E30               	movlw	48
  4613  002C6A  6E1C               	movwf	cmd@command+1,c
  4614  002C6C  0E67               	movlw	103
  4615  002C6E  6E1D               	movwf	cmd@command+2,c
  4616  002C70  0EB9               	movlw	185
  4617  002C72  6E1E               	movwf	cmd@command+3,c
  4618  002C74  EC51  F01A         	call	_cmd	;wreg free
  4619                           
  4620                           ;display.c: 119: break;
  4621  002C78  0012               	return	
  4622  002C7A                     l2845:
  4623                           
  4624                           ;display.c: 121: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  4625  002C7A  0E00               	movlw	0
  4626  002C7C  6E1B               	movwf	cmd@command,c
  4627  002C7E  0EF0               	movlw	240
  4628  002C80  6E1C               	movwf	cmd@command+1,c
  4629  002C82  0E80               	movlw	128
  4630  002C84  6E1D               	movwf	cmd@command+2,c
  4631  002C86  0EAF               	movlw	175
  4632  002C88  6E1E               	movwf	cmd@command+3,c
  4633  002C8A  EC51  F01A         	call	_cmd	;wreg free
  4634                           
  4635                           ;display.c: 122: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+15)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4636  002C8E  0E00               	movlw	0
  4637  002C90  6E1B               	movwf	cmd@command,c
  4638  002C92  0EF0               	movlw	240
  4639  002C94  6E1C               	movwf	cmd@command+1,c
  4640  002C96  0E60               	movlw	96
  4641  002C98  6E1D               	movwf	cmd@command+2,c
  4642  002C9A  0EB9               	movlw	185
  4643  002C9C  6E1E               	movwf	cmd@command+3,c
  4644  002C9E  EC51  F01A         	call	_cmd	;wreg free
  4645                           
  4646                           ;display.c: 123: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+16)&511UL)<<12)|(((0)&31UL)<<7)
      +                          |(((0)&127UL)<<0)));
  4647  002CA2  0E00               	movlw	0
  4648  002CA4  6E1B               	movwf	cmd@command,c
  4649  002CA6  0E00               	movlw	0
  4650  002CA8  6E1C               	movwf	cmd@command+1,c
  4651  002CAA  0E81               	movlw	129
  4652  002CAC  6E1D               	movwf	cmd@command+2,c
  4653  002CAE  0EAF               	movlw	175
  4654  002CB0  6E1E               	movwf	cmd@command+3,c
  4655  002CB2  EC51  F01A         	call	_cmd	;wreg free
  4656                           
  4657                           ;display.c: 124: cmd(((2UL<<30)|(((380)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<<7
      +                          )|(((0)&127UL)<<0)));
  4658  002CB6  0E00               	movlw	0
  4659  002CB8  6E1B               	movwf	cmd@command,c
  4660  002CBA  0E30               	movlw	48
  4661  002CBC  6E1C               	movwf	cmd@command+1,c
  4662  002CBE  0E87               	movlw	135
  4663  002CC0  6E1D               	movwf	cmd@command+2,c
  4664  002CC2  0EAF               	movlw	175
  4665  002CC4  6E1E               	movwf	cmd@command+3,c
  4666  002CC6  EC51  F01A         	call	_cmd	;wreg free
  4667                           
  4668                           ;display.c: 125: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4669  002CCA  0E00               	movlw	0
  4670  002CCC  6E1B               	movwf	cmd@command,c
  4671  002CCE  0E10               	movlw	16
  4672  002CD0  6E1C               	movwf	cmd@command+1,c
  4673  002CD2  0E84               	movlw	132
  4674  002CD4  6E1D               	movwf	cmd@command+2,c
  4675  002CD6  0EB9               	movlw	185
  4676  002CD8  6E1E               	movwf	cmd@command+3,c
  4677  002CDA  EC51  F01A         	call	_cmd	;wreg free
  4678                           
  4679                           ;display.c: 126: cmd(((2UL<<30)|(((380+80)&511UL)<<21)|(((0+114)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  4680  002CDE  0E00               	movlw	0
  4681  002CE0  6E1B               	movwf	cmd@command,c
  4682  002CE2  0E20               	movlw	32
  4683  002CE4  6E1C               	movwf	cmd@command+1,c
  4684  002CE6  0E87               	movlw	135
  4685  002CE8  6E1D               	movwf	cmd@command+2,c
  4686  002CEA  0EB9               	movlw	185
  4687  002CEC  6E1E               	movwf	cmd@command+3,c
  4688  002CEE  EC51  F01A         	call	_cmd	;wreg free
  4689                           
  4690                           ;display.c: 127: cmd(((2UL<<30)|(((380+77)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4691  002CF2  0E00               	movlw	0
  4692  002CF4  6E1B               	movwf	cmd@command,c
  4693  002CF6  0E10               	movlw	16
  4694  002CF8  6E1C               	movwf	cmd@command+1,c
  4695  002CFA  0E24               	movlw	36
  4696  002CFC  6E1D               	movwf	cmd@command+2,c
  4697  002CFE  0EB9               	movlw	185
  4698  002D00  6E1E               	movwf	cmd@command+3,c
  4699  002D02  EC51  F01A         	call	_cmd	;wreg free
  4700                           
  4701                           ;display.c: 128: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+65)&511UL)<<12)|(((0)&31UL)<<
      +                          7)|(((0)&127UL)<<0)));
  4702  002D06  0E00               	movlw	0
  4703  002D08  6E1B               	movwf	cmd@command,c
  4704  002D0A  0E10               	movlw	16
  4705  002D0C  6E1C               	movwf	cmd@command+1,c
  4706  002D0E  0EA4               	movlw	164
  4707  002D10  6E1D               	movwf	cmd@command+2,c
  4708  002D12  0EAF               	movlw	175
  4709  002D14  6E1E               	movwf	cmd@command+3,c
  4710  002D16  EC51  F01A         	call	_cmd	;wreg free
  4711                           
  4712                           ;display.c: 129: cmd(((2UL<<30)|(((380+1)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)<
      +                          <7)|(((0)&127UL)<<0)));
  4713  002D1A  0E00               	movlw	0
  4714  002D1C  6E1B               	movwf	cmd@command,c
  4715  002D1E  0E30               	movlw	48
  4716  002D20  6E1C               	movwf	cmd@command+1,c
  4717  002D22  0EA7               	movlw	167
  4718  002D24  6E1D               	movwf	cmd@command+2,c
  4719  002D26  0EAF               	movlw	175
  4720  002D28  6E1E               	movwf	cmd@command+3,c
  4721  002D2A  EC51  F01A         	call	_cmd	;wreg free
  4722                           
  4723                           ;display.c: 130: cmd(((2UL<<30)|(((380+79)&511UL)<<21)|(((0+115)&511UL)<<12)|(((0)&31UL)
      +                          <<7)|(((0)&127UL)<<0)));
  4724  002D2E  0E00               	movlw	0
  4725  002D30  6E1B               	movwf	cmd@command,c
  4726  002D32  0E30               	movlw	48
  4727  002D34  6E1C               	movwf	cmd@command+1,c
  4728  002D36  0E67               	movlw	103
  4729  002D38  6E1D               	movwf	cmd@command+2,c
  4730  002D3A  0EB9               	movlw	185
  4731  002D3C  6E1E               	movwf	cmd@command+3,c
  4732  002D3E  EC51  F01A         	call	_cmd	;wreg free
  4733                           
  4734                           ;display.c: 134: }
  4735                           
  4736                           ;display.c: 133: break;
  4737                           
  4738                           ;display.c: 132: default:
  4739                           
  4740                           ;display.c: 131: break;
  4741  002D42  0012               	return	
  4742  002D44                     l2849:
  4743  002D44  C022  F024         	movff	display_gear@gear,??_display_gear
  4744  002D48  C023  F025         	movff	display_gear@gear+1,??_display_gear+1
  4745                           
  4746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4747                           ; Switch size 1, requested type "space"
  4748                           ; Number of cases is 1, Range of values is 0 to 0
  4749                           ; switch strategies available:
  4750                           ; Name         Instructions Cycles
  4751                           ; simple_byte            4     3 (average)
  4752                           ;	Chosen strategy is simple_byte
  4753  002D4C  5025               	movf	??_display_gear+1,w,c
  4754  002D4E  0A00               	xorlw	0	; case 0
  4755  002D50  A4D8               	btfss	status,2,c
  4756  002D52  0012               	return	
  4757                           
  4758                           ; Switch size 1, requested type "space"
  4759                           ; Number of cases is 6, Range of values is 1 to 6
  4760                           ; switch strategies available:
  4761                           ; Name         Instructions Cycles
  4762                           ; simple_byte           19    10 (average)
  4763                           ;	Chosen strategy is simple_byte
  4764  002D54  5024               	movf	??_display_gear,w,c
  4765  002D56  0A01               	xorlw	1	; case 1
  4766  002D58  B4D8               	btfsc	status,2,c
  4767  002D5A  D5FA               	goto	l2835
  4768  002D5C  0A03               	xorlw	3	; case 2
  4769  002D5E  B4D8               	btfsc	status,2,c
  4770  002D60  D634               	goto	l2837
  4771  002D62  0A01               	xorlw	1	; case 3
  4772  002D64  B4D8               	btfsc	status,2,c
  4773  002D66  D696               	goto	l2839
  4774  002D68  0A07               	xorlw	7	; case 4
  4775  002D6A  B4D8               	btfsc	status,2,c
  4776  002D6C  D6E4               	goto	l2841
  4777  002D6E  0A01               	xorlw	1	; case 5
  4778  002D70  B4D8               	btfsc	status,2,c
  4779  002D72  D71E               	goto	l2843
  4780  002D74  0A03               	xorlw	3	; case 6
  4781  002D76  A4D8               	btfss	status,2,c
  4782  002D78  0012               	return	
  4783  002D7A  D77F               	goto	l2845
  4784  002D7C                     __end_of_display_gear:
  4785                           	opt stack 0
  4786                           tblptru	equ	0xFF8
  4787                           tblptrh	equ	0xFF7
  4788                           tblptrl	equ	0xFF6
  4789                           tablat	equ	0xFF5
  4790                           prodh	equ	0xFF4
  4791                           prodl	equ	0xFF3
  4792                           wreg	equ	0xFE8
  4793                           status	equ	0xFD8
  4794                           
  4795 ;; *************** function _display_end *****************
  4796 ;; Defined at:
  4797 ;;		line 9 in file "display.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;		None
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0, cstack
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4815 ;;Total ram usage:        0 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:    7
  4818 ;; This function calls:
  4819 ;;		_cmd
  4820 ;;		_wr16
  4821 ;; This function is called by:
  4822 ;;		_main
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text9
  4827  0033A8                     __ptext9:
  4828                           	opt stack 0
  4829  0033A8                     _display_end:
  4830                           	opt stack 23
  4831                           
  4832                           ;display.c: 10: cmd(((0UL<<24)));
  4833                           
  4834                           ;incstack = 0
  4835  0033A8  0E00               	movlw	0
  4836  0033AA  6E1B               	movwf	cmd@command,c
  4837  0033AC  0E00               	movlw	0
  4838  0033AE  6E1C               	movwf	cmd@command+1,c
  4839  0033B0  0E00               	movlw	0
  4840  0033B2  6E1D               	movwf	cmd@command+2,c
  4841  0033B4  0E00               	movlw	0
  4842  0033B6  6E1E               	movwf	cmd@command+3,c
  4843  0033B8  EC51  F01A         	call	_cmd	;wreg free
  4844                           
  4845                           ;display.c: 11: cmd(4294967041UL);
  4846  0033BC  0E01               	movlw	1
  4847  0033BE  6E1B               	movwf	cmd@command,c
  4848  0033C0  0EFF               	movlw	255
  4849  0033C2  6E1C               	movwf	cmd@command+1,c
  4850  0033C4  0EFF               	movlw	255
  4851  0033C6  6E1D               	movwf	cmd@command+2,c
  4852  0033C8  0EFF               	movlw	255
  4853  0033CA  6E1E               	movwf	cmd@command+3,c
  4854  0033CC  EC51  F01A         	call	_cmd	;wreg free
  4855                           
  4856                           ;display.c: 12: wr16(1058024UL, cmd_offset);
  4857  0033D0  0EE8               	movlw	232
  4858  0033D2  6E17               	movwf	wr16@addr,c
  4859  0033D4  0E24               	movlw	36
  4860  0033D6  6E18               	movwf	wr16@addr+1,c
  4861  0033D8  0E10               	movlw	16
  4862  0033DA  6E19               	movwf	wr16@addr+2,c
  4863  0033DC  C02B  F01A         	movff	_cmd_offset,wr16@value
  4864  0033E0  C02C  F01B         	movff	_cmd_offset+1,wr16@value+1
  4865  0033E4  EC33  F01A         	call	_wr16	;wreg free
  4866  0033E8  0012               	return		;funcret
  4867  0033EA                     __end_of_display_end:
  4868                           	opt stack 0
  4869                           tblptru	equ	0xFF8
  4870                           tblptrh	equ	0xFF7
  4871                           tblptrl	equ	0xFF6
  4872                           tablat	equ	0xFF5
  4873                           prodh	equ	0xFF4
  4874                           prodl	equ	0xFF3
  4875                           wreg	equ	0xFE8
  4876                           status	equ	0xFD8
  4877                           
  4878 ;; *************** function _cmd *****************
  4879 ;; Defined at:
  4880 ;;		line 126 in file "Gue/FT800.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;  command         4   26[COMRAM] unsigned long 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      void 
  4887 ;; Registers used:
  4888 ;;		wreg, status,2, status,0, cstack
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4896 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4897 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4898 ;;Total ram usage:        7 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; Hardware stack levels required when called:    6
  4901 ;; This function calls:
  4902 ;;		_cmd_incrementn
  4903 ;;		_wr32
  4904 ;; This function is called by:
  4905 ;;		_display_start
  4906 ;;		_display_end
  4907 ;;		_display_labels
  4908 ;;		_display_rpm
  4909 ;;		_display_gear
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text10
  4914  0034A2                     __ptext10:
  4915                           	opt stack 0
  4916  0034A2                     _cmd:
  4917                           	opt stack 23
  4918                           
  4919                           ;FT800.c: 127: wr32(1081344UL + cmd_offset, command);cmd_incrementn(4);
  4920                           
  4921                           ;incstack = 0
  4922  0034A2  C02B  F01F         	movff	_cmd_offset,??_cmd
  4923  0034A6  C02C  F020         	movff	_cmd_offset+1,??_cmd+1
  4924  0034AA  6A21               	clrf	(??_cmd+2)& (0+255),c
  4925  0034AC  0E00               	movlw	0
  4926  0034AE  241F               	addwf	??_cmd,w,c
  4927  0034B0  6E10               	movwf	wr32@addr,c
  4928  0034B2  0E80               	movlw	128
  4929  0034B4  2020               	addwfc	??_cmd+1,w,c
  4930  0034B6  6E11               	movwf	wr32@addr+1,c
  4931  0034B8  0E10               	movlw	16
  4932  0034BA  2021               	addwfc	??_cmd+2,w,c
  4933  0034BC  6E12               	movwf	wr32@addr+2,c
  4934  0034BE  C01B  F013         	movff	cmd@command,wr32@value
  4935  0034C2  C01C  F014         	movff	cmd@command+1,wr32@value+1
  4936  0034C6  C01D  F015         	movff	cmd@command+2,wr32@value+2
  4937  0034CA  C01E  F016         	movff	cmd@command+3,wr32@value+3
  4938  0034CE  EC4A  F019         	call	_wr32	;wreg free
  4939  0034D2  0E04               	movlw	4
  4940  0034D4  EC98  F01A         	call	_cmd_incrementn
  4941  0034D8  0012               	return		;funcret
  4942  0034DA                     __end_of_cmd:
  4943                           	opt stack 0
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           prodh	equ	0xFF4
  4949                           prodl	equ	0xFF3
  4950                           wreg	equ	0xFE8
  4951                           status	equ	0xFD8
  4952                           
  4953 ;; *************** function _cmd_incrementn *****************
  4954 ;; Defined at:
  4955 ;;		line 122 in file "Gue/FT800.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  n               1    wreg     unsigned char 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  n               1   16[COMRAM] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4971 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4972 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4973 ;;Total ram usage:        3 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:    4
  4976 ;; This function calls:
  4977 ;;		Nothing
  4978 ;; This function is called by:
  4979 ;;		_cmd
  4980 ;;		_display_labels
  4981 ;;		_display_rpm
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text11
  4986  003530                     __ptext11:
  4987                           	opt stack 0
  4988  003530                     _cmd_incrementn:
  4989                           	opt stack 24
  4990                           
  4991                           ;incstack = 0
  4992                           ;cmd_incrementn@n stored from wreg
  4993  003530  6E11               	movwf	cmd_incrementn@n,c
  4994                           
  4995                           ;FT800.c: 123: cmd_offset=(cmd_offset+n)%4096;
  4996  003532  5011               	movf	cmd_incrementn@n,w,c
  4997  003534  242B               	addwf	_cmd_offset,w,c
  4998  003536  6E0F               	movwf	??_cmd_incrementn& (0+255),c
  4999  003538  0E00               	movlw	0
  5000  00353A  202C               	addwfc	_cmd_offset+1,w,c
  5001  00353C  6E10               	movwf	(??_cmd_incrementn+1)& (0+255),c
  5002  00353E  0EFF               	movlw	255
  5003  003540  140F               	andwf	??_cmd_incrementn,w,c
  5004  003542  6E2B               	movwf	_cmd_offset,c
  5005  003544  0E0F               	movlw	15
  5006  003546  1410               	andwf	??_cmd_incrementn+1,w,c
  5007  003548  6E2C               	movwf	_cmd_offset+1,c
  5008  00354A  0012               	return		;funcret
  5009  00354C                     __end_of_cmd_incrementn:
  5010                           	opt stack 0
  5011                           tblptru	equ	0xFF8
  5012                           tblptrh	equ	0xFF7
  5013                           tblptrl	equ	0xFF6
  5014                           tablat	equ	0xFF5
  5015                           prodh	equ	0xFF4
  5016                           prodl	equ	0xFF3
  5017                           wreg	equ	0xFE8
  5018                           status	equ	0xFD8
  5019                           
  5020 ;; *************** function _SYSTEM_Initialize *****************
  5021 ;; Defined at:
  5022 ;;		line 111 in file "mcc_generated_files/mcc.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;		None
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      void 
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, status,0, cstack
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5040 ;;Total ram usage:        0 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    6
  5043 ;; This function calls:
  5044 ;;		_ECAN_Initialize
  5045 ;;		_OSCILLATOR_Initialize
  5046 ;;		_PIN_MANAGER_Initialize
  5047 ;;		_SPI_Initialize
  5048 ;; This function is called by:
  5049 ;;		_main
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text12
  5054  0035AC                     __ptext12:
  5055                           	opt stack 0
  5056  0035AC                     _SYSTEM_Initialize:
  5057                           	opt stack 24
  5058                           
  5059                           ;mcc.c: 114: PIN_MANAGER_Initialize();
  5060                           
  5061                           ;incstack = 0
  5062  0035AC  ECAE  F019         	call	_PIN_MANAGER_Initialize	;wreg free
  5063                           
  5064                           ;mcc.c: 115: OSCILLATOR_Initialize();
  5065  0035B0  ECDF  F01A         	call	_OSCILLATOR_Initialize	;wreg free
  5066                           
  5067                           ;mcc.c: 116: SPI_Initialize();
  5068  0035B4  ECF0  F01A         	call	_SPI_Initialize	;wreg free
  5069                           
  5070                           ;mcc.c: 117: ECAN_Initialize();
  5071  0035B8  EC03  F018         	call	_ECAN_Initialize	;wreg free
  5072  0035BC  0012               	return		;funcret
  5073  0035BE                     __end_of_SYSTEM_Initialize:
  5074                           	opt stack 0
  5075                           tblptru	equ	0xFF8
  5076                           tblptrh	equ	0xFF7
  5077                           tblptrl	equ	0xFF6
  5078                           tablat	equ	0xFF5
  5079                           prodh	equ	0xFF4
  5080                           prodl	equ	0xFF3
  5081                           wreg	equ	0xFE8
  5082                           status	equ	0xFD8
  5083                           
  5084 ;; *************** function _SPI_Initialize *****************
  5085 ;; Defined at:
  5086 ;;		line 63 in file "mcc_generated_files/spi.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;		None
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5104 ;;Total ram usage:        0 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:    4
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_SYSTEM_Initialize
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text13
  5115  0035E0                     __ptext13:
  5116                           	opt stack 0
  5117  0035E0                     _SPI_Initialize:
  5118                           	opt stack 25
  5119                           
  5120                           ;spi.c: 68: SSPSTAT = 0x00;
  5121                           
  5122                           ;incstack = 0
  5123  0035E0  0E00               	movlw	0
  5124  0035E2  6EC7               	movwf	4039,c	;volatile
  5125                           
  5126                           ;spi.c: 71: SSPCON1 = 0x20;
  5127  0035E4  0E20               	movlw	32
  5128  0035E6  6EC6               	movwf	4038,c	;volatile
  5129                           
  5130                           ;spi.c: 74: SSPADD = 0x00;
  5131  0035E8  0E00               	movlw	0
  5132  0035EA  6EC8               	movwf	4040,c	;volatile
  5133  0035EC  0012               	return		;funcret
  5134  0035EE                     __end_of_SPI_Initialize:
  5135                           	opt stack 0
  5136                           tblptru	equ	0xFF8
  5137                           tblptrh	equ	0xFF7
  5138                           tblptrl	equ	0xFF6
  5139                           tablat	equ	0xFF5
  5140                           prodh	equ	0xFF4
  5141                           prodl	equ	0xFF3
  5142                           wreg	equ	0xFE8
  5143                           status	equ	0xFD8
  5144                           
  5145 ;; *************** function _PIN_MANAGER_Initialize *****************
  5146 ;; Defined at:
  5147 ;;		line 53 in file "mcc_generated_files/pin_manager.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;		None
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;		None
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  1    wreg      void 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0, cstack
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5165 ;;Total ram usage:        0 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:    5
  5168 ;; This function calls:
  5169 ;;		_IOCB4_SetInterruptHandler
  5170 ;; This function is called by:
  5171 ;;		_SYSTEM_Initialize
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text14
  5176  00335C                     __ptext14:
  5177                           	opt stack 0
  5178  00335C                     _PIN_MANAGER_Initialize:
  5179                           	opt stack 24
  5180                           
  5181                           ;pin_manager.c: 58: LATE = 0x00;
  5182                           
  5183                           ;incstack = 0
  5184  00335C  0E00               	movlw	0
  5185  00335E  6E8D               	movwf	3981,c	;volatile
  5186                           
  5187                           ;pin_manager.c: 59: LATD = 0x00;
  5188  003360  0E00               	movlw	0
  5189  003362  6E8C               	movwf	3980,c	;volatile
  5190                           
  5191                           ;pin_manager.c: 60: LATA = 0x07;
  5192  003364  0E07               	movlw	7
  5193  003366  6E89               	movwf	3977,c	;volatile
  5194                           
  5195                           ;pin_manager.c: 61: LATB = 0x00;
  5196  003368  0E00               	movlw	0
  5197  00336A  6E8A               	movwf	3978,c	;volatile
  5198                           
  5199                           ;pin_manager.c: 62: LATC = 0x00;
  5200  00336C  0E00               	movlw	0
  5201  00336E  6E8B               	movwf	3979,c	;volatile
  5202                           
  5203                           ;pin_manager.c: 67: TRISE = 0x07;
  5204  003370  0E07               	movlw	7
  5205  003372  6E96               	movwf	3990,c	;volatile
  5206                           
  5207                           ;pin_manager.c: 68: TRISA = 0xED;
  5208  003374  0EED               	movlw	237
  5209  003376  6E92               	movwf	3986,c	;volatile
  5210                           
  5211                           ;pin_manager.c: 69: TRISB = 0xFB;
  5212  003378  0EFB               	movlw	251
  5213  00337A  6E93               	movwf	3987,c	;volatile
  5214                           
  5215                           ;pin_manager.c: 70: TRISC = 0x95;
  5216  00337C  0E95               	movlw	149
  5217  00337E  6E94               	movwf	3988,c	;volatile
  5218                           
  5219                           ;pin_manager.c: 71: TRISD = 0xBC;
  5220  003380  0EBC               	movlw	188
  5221  003382  6E95               	movwf	3989,c	;volatile
  5222                           
  5223                           ;pin_manager.c: 76: ANCON0 = 0xF8;
  5224  003384  0EF8               	movlw	248
  5225  003386  010F               	movlb	15	; () banked
  5226  003388  6F5D               	movwf	93,b	;volatile
  5227                           
  5228                           ;pin_manager.c: 77: ANCON1 = 0x65;
  5229  00338A  0E65               	movlw	101
  5230  00338C  010F               	movlb	15	; () banked
  5231  00338E  6F5C               	movwf	92,b	;volatile
  5232                           
  5233                           ; BSR set to: 15
  5234                           ;pin_manager.c: 82: WPUB = 0xFF;
  5235  003390  010F               	movlb	15	; () banked
  5236  003392  695B               	setf	91,b	;volatile
  5237                           
  5238                           ; BSR set to: 15
  5239                           ;pin_manager.c: 90: IOCBbits.IOCB4 = 1;
  5240  003394  010F               	movlb	15	; () banked
  5241  003396  895A               	bsf	90,4,b	;volatile
  5242                           
  5243                           ; BSR set to: 15
  5244                           ;pin_manager.c: 93: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  5245  003398  0E10               	movlw	low _IOCB4_DefaultInterruptHandler
  5246  00339A  6E0F               	movwf	IOCB4_SetInterruptHandler@InterruptHandler,c
  5247  00339C  0E36               	movlw	high _IOCB4_DefaultInterruptHandler
  5248  00339E  6E10               	movwf	IOCB4_SetInterruptHandler@InterruptHandler+1,c
  5249  0033A0  EC03  F01B         	call	_IOCB4_SetInterruptHandler	;wreg free
  5250                           
  5251                           ;pin_manager.c: 96: INTCONbits.RBIE = 1;
  5252  0033A4  86F2               	bsf	intcon,3,c	;volatile
  5253  0033A6  0012               	return		;funcret
  5254  0033A8                     __end_of_PIN_MANAGER_Initialize:
  5255                           	opt stack 0
  5256                           tblptru	equ	0xFF8
  5257                           tblptrh	equ	0xFF7
  5258                           tblptrl	equ	0xFF6
  5259                           tablat	equ	0xFF5
  5260                           prodh	equ	0xFF4
  5261                           prodl	equ	0xFF3
  5262                           intcon	equ	0xFF2
  5263                           wreg	equ	0xFE8
  5264                           status	equ	0xFD8
  5265                           
  5266 ;; *************** function _IOCB4_SetInterruptHandler *****************
  5267 ;; Defined at:
  5268 ;;		line 130 in file "mcc_generated_files/pin_manager.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  InterruptHan    2   14[COMRAM] PTR void 
  5271 ;;		 -> IOCB4_DefaultInterruptHandler(1), 
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2, status,0
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5287 ;;Total ram usage:        2 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    4
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_PIN_MANAGER_Initialize
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           	psect	text15
  5298  003606                     __ptext15:
  5299                           	opt stack 0
  5300  003606                     _IOCB4_SetInterruptHandler:
  5301                           	opt stack 24
  5302                           
  5303                           ;pin_manager.c: 131: IOCB4_InterruptHandler = InterruptHandler;
  5304                           
  5305                           ;incstack = 0
  5306  003606  C00F  F02F         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  5307  00360A  C010  F030         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  5308  00360E  0012               	return		;funcret
  5309  003610                     __end_of_IOCB4_SetInterruptHandler:
  5310                           	opt stack 0
  5311                           tblptru	equ	0xFF8
  5312                           tblptrh	equ	0xFF7
  5313                           tblptrl	equ	0xFF6
  5314                           tablat	equ	0xFF5
  5315                           prodh	equ	0xFF4
  5316                           prodl	equ	0xFF3
  5317                           intcon	equ	0xFF2
  5318                           wreg	equ	0xFE8
  5319                           status	equ	0xFD8
  5320                           
  5321 ;; *************** function _OSCILLATOR_Initialize *****************
  5322 ;; Defined at:
  5323 ;;		line 120 in file "mcc_generated_files/mcc.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;		None
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;		None
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      void 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5341 ;;Total ram usage:        0 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    4
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_SYSTEM_Initialize
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text16
  5352  0035BE                     __ptext16:
  5353                           	opt stack 0
  5354  0035BE                     _OSCILLATOR_Initialize:
  5355                           	opt stack 25
  5356                           
  5357                           ;mcc.c: 123: OSCCON = 0x60;
  5358                           
  5359                           ;incstack = 0
  5360  0035BE  0E60               	movlw	96
  5361  0035C0  6ED3               	movwf	4051,c	;volatile
  5362                           
  5363                           ;mcc.c: 125: OSCCON2 = 0x00;
  5364  0035C2  0E00               	movlw	0
  5365  0035C4  6ED2               	movwf	4050,c	;volatile
  5366                           
  5367                           ;mcc.c: 127: OSCTUNE = 0x00;
  5368  0035C6  0E00               	movlw	0
  5369  0035C8  6E9B               	movwf	3995,c	;volatile
  5370                           
  5371                           ;mcc.c: 129: REFOCON = 0x00;
  5372  0035CA  0E00               	movlw	0
  5373  0035CC  6E9A               	movwf	3994,c	;volatile
  5374  0035CE  0012               	return		;funcret
  5375  0035D0                     __end_of_OSCILLATOR_Initialize:
  5376                           	opt stack 0
  5377                           tblptru	equ	0xFF8
  5378                           tblptrh	equ	0xFF7
  5379                           tblptrl	equ	0xFF6
  5380                           tablat	equ	0xFF5
  5381                           prodh	equ	0xFF4
  5382                           prodl	equ	0xFF3
  5383                           intcon	equ	0xFF2
  5384                           wreg	equ	0xFE8
  5385                           status	equ	0xFD8
  5386                           
  5387 ;; *************** function _ECAN_Initialize *****************
  5388 ;; Defined at:
  5389 ;;		line 63 in file "mcc_generated_files/ecan.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg, status,2, status,0
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5407 ;;Total ram usage:        1 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    4
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_SYSTEM_Initialize
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text17
  5418  003006                     __ptext17:
  5419                           	opt stack 0
  5420  003006                     _ECAN_Initialize:
  5421                           	opt stack 25
  5422                           
  5423                           ;ecan.c: 65: CANCON = 0x80;
  5424                           
  5425                           ;incstack = 0
  5426  003006  0E80               	movlw	128
  5427  003008  6E6F               	movwf	3951,c	;volatile
  5428  00300A                     l1317:
  5429  00300A  506E               	movf	3950,w,c	;volatile
  5430  00300C  0BE0               	andlw	224
  5431  00300E  0A80               	xorlw	128
  5432  003010  A4D8               	btfss	status,2,c
  5433  003012  D7FB               	goto	l1317
  5434                           
  5435                           ;ecan.c: 71: ECANCON = 0x00;
  5436  003014  0E00               	movlw	0
  5437  003016  6E72               	movwf	3954,c	;volatile
  5438                           
  5439                           ;ecan.c: 86: RXM0EIDH = 0xFF;
  5440  003018  010E               	movlb	14	; () banked
  5441  00301A  69FA               	setf	250,b	;volatile
  5442                           
  5443                           ; BSR set to: 14
  5444                           ;ecan.c: 87: RXM0EIDL = 0xFF;
  5445  00301C  010E               	movlb	14	; () banked
  5446  00301E  69FB               	setf	251,b	;volatile
  5447                           
  5448                           ; BSR set to: 14
  5449                           ;ecan.c: 88: RXM0SIDH = 0xFF;
  5450  003020  010E               	movlb	14	; () banked
  5451  003022  69F8               	setf	248,b	;volatile
  5452                           
  5453                           ; BSR set to: 14
  5454                           ;ecan.c: 89: RXM0SIDL = 0xFF;
  5455  003024  010E               	movlb	14	; () banked
  5456  003026  69F9               	setf	249,b	;volatile
  5457                           
  5458                           ; BSR set to: 14
  5459                           ;ecan.c: 91: RXM1EIDH = 0xFF;
  5460  003028  010E               	movlb	14	; () banked
  5461  00302A  69FE               	setf	254,b	;volatile
  5462                           
  5463                           ; BSR set to: 14
  5464                           ;ecan.c: 92: RXM1EIDL = 0xFF;
  5465  00302C  010E               	movlb	14	; () banked
  5466  00302E  69FF               	setf	255,b	;volatile
  5467                           
  5468                           ; BSR set to: 14
  5469                           ;ecan.c: 93: RXM1SIDH = 0xFF;
  5470  003030  010E               	movlb	14	; () banked
  5471  003032  69FC               	setf	252,b	;volatile
  5472                           
  5473                           ; BSR set to: 14
  5474                           ;ecan.c: 94: RXM1SIDL = 0xFF;
  5475  003034  010E               	movlb	14	; () banked
  5476  003036  69FD               	setf	253,b	;volatile
  5477                           
  5478                           ;ecan.c: 100: RXF0EIDH = 0x00;
  5479  003038  0E00               	movlw	0
  5480  00303A  010E               	movlb	14	; () banked
  5481  00303C  6FE2               	movwf	226,b	;volatile
  5482                           
  5483                           ;ecan.c: 101: RXF0EIDL = 0x00;
  5484  00303E  0E00               	movlw	0
  5485  003040  010E               	movlb	14	; () banked
  5486  003042  6FE3               	movwf	227,b	;volatile
  5487                           
  5488                           ;ecan.c: 102: RXF0SIDH = 0xC8;
  5489  003044  0EC8               	movlw	200
  5490  003046  010E               	movlb	14	; () banked
  5491  003048  6FE0               	movwf	224,b	;volatile
  5492                           
  5493                           ;ecan.c: 103: RXF0SIDL = 0x00;
  5494  00304A  0E00               	movlw	0
  5495  00304C  010E               	movlb	14	; () banked
  5496  00304E  6FE1               	movwf	225,b	;volatile
  5497                           
  5498                           ;ecan.c: 105: RXF1EIDH = 0x00;
  5499  003050  0E00               	movlw	0
  5500  003052  010E               	movlb	14	; () banked
  5501  003054  6FE6               	movwf	230,b	;volatile
  5502                           
  5503                           ;ecan.c: 106: RXF1EIDL = 0x00;
  5504  003056  0E00               	movlw	0
  5505  003058  010E               	movlb	14	; () banked
  5506  00305A  6FE7               	movwf	231,b	;volatile
  5507                           
  5508                           ;ecan.c: 107: RXF1SIDH = 0x00;
  5509  00305C  0E00               	movlw	0
  5510  00305E  010E               	movlb	14	; () banked
  5511  003060  6FE4               	movwf	228,b	;volatile
  5512                           
  5513                           ;ecan.c: 108: RXF1SIDL = 0x00;
  5514  003062  0E00               	movlw	0
  5515  003064  010E               	movlb	14	; () banked
  5516  003066  6FE5               	movwf	229,b	;volatile
  5517                           
  5518                           ;ecan.c: 110: RXF2EIDH = 0x00;
  5519  003068  0E00               	movlw	0
  5520  00306A  010E               	movlb	14	; () banked
  5521  00306C  6FEA               	movwf	234,b	;volatile
  5522                           
  5523                           ;ecan.c: 111: RXF2EIDL = 0x00;
  5524  00306E  0E00               	movlw	0
  5525  003070  010E               	movlb	14	; () banked
  5526  003072  6FEB               	movwf	235,b	;volatile
  5527                           
  5528                           ;ecan.c: 112: RXF2SIDH = 0x00;
  5529  003074  0E00               	movlw	0
  5530  003076  010E               	movlb	14	; () banked
  5531  003078  6FE8               	movwf	232,b	;volatile
  5532                           
  5533                           ;ecan.c: 113: RXF2SIDL = 0x00;
  5534  00307A  0E00               	movlw	0
  5535  00307C  010E               	movlb	14	; () banked
  5536  00307E  6FE9               	movwf	233,b	;volatile
  5537                           
  5538                           ;ecan.c: 115: RXF3EIDH = 0x00;
  5539  003080  0E00               	movlw	0
  5540  003082  010E               	movlb	14	; () banked
  5541  003084  6FEE               	movwf	238,b	;volatile
  5542                           
  5543                           ;ecan.c: 116: RXF3EIDL = 0x00;
  5544  003086  0E00               	movlw	0
  5545  003088  010E               	movlb	14	; () banked
  5546  00308A  6FEF               	movwf	239,b	;volatile
  5547                           
  5548                           ;ecan.c: 117: RXF3SIDH = 0x00;
  5549  00308C  0E00               	movlw	0
  5550  00308E  010E               	movlb	14	; () banked
  5551  003090  6FEC               	movwf	236,b	;volatile
  5552                           
  5553                           ;ecan.c: 118: RXF3SIDL = 0x00;
  5554  003092  0E00               	movlw	0
  5555  003094  010E               	movlb	14	; () banked
  5556  003096  6FED               	movwf	237,b	;volatile
  5557                           
  5558                           ;ecan.c: 120: RXF4EIDH = 0x00;
  5559  003098  0E00               	movlw	0
  5560  00309A  010E               	movlb	14	; () banked
  5561  00309C  6FF2               	movwf	242,b	;volatile
  5562                           
  5563                           ;ecan.c: 121: RXF4EIDL = 0x00;
  5564  00309E  0E00               	movlw	0
  5565  0030A0  010E               	movlb	14	; () banked
  5566  0030A2  6FF3               	movwf	243,b	;volatile
  5567                           
  5568                           ;ecan.c: 122: RXF4SIDH = 0x00;
  5569  0030A4  0E00               	movlw	0
  5570  0030A6  010E               	movlb	14	; () banked
  5571  0030A8  6FF0               	movwf	240,b	;volatile
  5572                           
  5573                           ;ecan.c: 123: RXF4SIDL = 0x00;
  5574  0030AA  0E00               	movlw	0
  5575  0030AC  010E               	movlb	14	; () banked
  5576  0030AE  6FF1               	movwf	241,b	;volatile
  5577                           
  5578                           ;ecan.c: 125: RXF5EIDH = 0x00;
  5579  0030B0  0E00               	movlw	0
  5580  0030B2  010E               	movlb	14	; () banked
  5581  0030B4  6FF6               	movwf	246,b	;volatile
  5582                           
  5583                           ;ecan.c: 126: RXF5EIDL = 0x00;
  5584  0030B6  0E00               	movlw	0
  5585  0030B8  010E               	movlb	14	; () banked
  5586  0030BA  6FF7               	movwf	247,b	;volatile
  5587                           
  5588                           ;ecan.c: 127: RXF5SIDH = 0x00;
  5589  0030BC  0E00               	movlw	0
  5590  0030BE  010E               	movlb	14	; () banked
  5591  0030C0  6FF4               	movwf	244,b	;volatile
  5592                           
  5593                           ;ecan.c: 128: RXF5SIDL = 0x00;
  5594  0030C2  0E00               	movlw	0
  5595  0030C4  010E               	movlb	14	; () banked
  5596  0030C6  6FF5               	movwf	245,b	;volatile
  5597                           
  5598                           ;ecan.c: 143: BRGCON1 = 0x00;
  5599  0030C8  0E00               	movlw	0
  5600  0030CA  010E               	movlb	14	; () banked
  5601  0030CC  6F43               	movwf	67,b	;volatile
  5602                           
  5603                           ;ecan.c: 144: BRGCON2 = 0x98;
  5604  0030CE  0E98               	movlw	152
  5605  0030D0  010E               	movlb	14	; () banked
  5606  0030D2  6F44               	movwf	68,b	;volatile
  5607                           
  5608                           ;ecan.c: 145: BRGCON3 = 0x01;
  5609  0030D4  0E01               	movlw	1
  5610  0030D6  010E               	movlb	14	; () banked
  5611  0030D8  6F45               	movwf	69,b	;volatile
  5612                           
  5613                           ;ecan.c: 147: CANCON = 0x00;
  5614  0030DA  0E00               	movlw	0
  5615  0030DC  6E6F               	movwf	3951,c	;volatile
  5616  0030DE                     l1337:
  5617  0030DE  CF6E F00F          	movff	3950,??_ECAN_Initialize	;volatile
  5618  0030E2  0EE0               	movlw	224
  5619  0030E4  160F               	andwf	??_ECAN_Initialize,f,c
  5620  0030E6  B4D8               	btfsc	status,2,c
  5621  0030E8  0012               	return	
  5622  0030EA  D7F9               	goto	l1337
  5623  0030EC                     __end_of_ECAN_Initialize:
  5624                           	opt stack 0
  5625                           tblptru	equ	0xFF8
  5626                           tblptrh	equ	0xFF7
  5627                           tblptrl	equ	0xFF6
  5628                           tablat	equ	0xFF5
  5629                           prodh	equ	0xFF4
  5630                           prodl	equ	0xFF3
  5631                           intcon	equ	0xFF2
  5632                           wreg	equ	0xFE8
  5633                           status	equ	0xFD8
  5634                           
  5635 ;; *************** function _FT800_Init *****************
  5636 ;; Defined at:
  5637 ;;		line 143 in file "Gue/FT800.c"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;		None
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;		None
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  1    wreg      void 
  5644 ;; Registers used:
  5645 ;;		wreg, status,2, status,0, cstack
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5653 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5654 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5655 ;;Total ram usage:        1 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:    6
  5658 ;; This function calls:
  5659 ;;		_host_command
  5660 ;;		_rd16
  5661 ;;		_wr16
  5662 ;;		_wr32
  5663 ;;		_wr8
  5664 ;; This function is called by:
  5665 ;;		_main
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           	psect	text18
  5670  002D7C                     __ptext18:
  5671                           	opt stack 0
  5672  002D7C                     _FT800_Init:
  5673                           	opt stack 24
  5674                           
  5675                           ;FT800.c: 145: LATCbits.LATC1 = 0;
  5676                           
  5677                           ;incstack = 0
  5678  002D7C  928B               	bcf	3979,1,c	;volatile
  5679                           
  5680                           ;FT800.c: 146: _delay((unsigned long)((20)*(16000000/4000.0)));
  5681  002D7E  0E68               	movlw	104
  5682  002D80  6E1F               	movwf	??_FT800_Init& (0+255),c
  5683  002D82  0EE4               	movlw	228
  5684  002D84                     u647:
  5685  002D84  2EE8               	decfsz	wreg,f,c
  5686  002D86  D7FE               	bra	u647
  5687  002D88  2E1F               	decfsz	??_FT800_Init& (0+255),f,c
  5688  002D8A  D7FC               	bra	u647
  5689  002D8C  D000               	nop2	
  5690                           
  5691                           ;FT800.c: 147: LATCbits.LATC1 = 1;
  5692  002D8E  828B               	bsf	3979,1,c	;volatile
  5693                           
  5694                           ;FT800.c: 148: _delay((unsigned long)((20)*(16000000/4000.0)));
  5695  002D90  0E68               	movlw	104
  5696  002D92  6E1F               	movwf	??_FT800_Init& (0+255),c
  5697  002D94  0EE4               	movlw	228
  5698  002D96                     u657:
  5699  002D96  2EE8               	decfsz	wreg,f,c
  5700  002D98  D7FE               	bra	u657
  5701  002D9A  2E1F               	decfsz	??_FT800_Init& (0+255),f,c
  5702  002D9C  D7FC               	bra	u657
  5703  002D9E  D000               	nop2	
  5704                           
  5705                           ;FT800.c: 150: host_command(0x00);
  5706  002DA0  0E00               	movlw	0
  5707  002DA2  ECB3  F01A         	call	_host_command
  5708                           
  5709                           ;FT800.c: 152: host_command(0x44);
  5710  002DA6  0E44               	movlw	68
  5711  002DA8  ECB3  F01A         	call	_host_command
  5712                           
  5713                           ;FT800.c: 154: host_command(0x62);
  5714  002DAC  0E62               	movlw	98
  5715  002DAE  ECB3  F01A         	call	_host_command
  5716                           
  5717                           ;FT800.c: 157: wr16(1057840UL, 480);
  5718  002DB2  0E30               	movlw	48
  5719  002DB4  6E17               	movwf	wr16@addr,c
  5720  002DB6  0E24               	movlw	36
  5721  002DB8  6E18               	movwf	wr16@addr+1,c
  5722  002DBA  0E10               	movlw	16
  5723  002DBC  6E19               	movwf	wr16@addr+2,c
  5724  002DBE  0E01               	movlw	1
  5725  002DC0  6E1B               	movwf	wr16@value+1,c
  5726  002DC2  0EE0               	movlw	224
  5727  002DC4  6E1A               	movwf	wr16@value,c
  5728  002DC6  EC33  F01A         	call	_wr16	;wreg free
  5729                           
  5730                           ;FT800.c: 158: wr16(1057860UL, 272);
  5731  002DCA  0E44               	movlw	68
  5732  002DCC  6E17               	movwf	wr16@addr,c
  5733  002DCE  0E24               	movlw	36
  5734  002DD0  6E18               	movwf	wr16@addr+1,c
  5735  002DD2  0E10               	movlw	16
  5736  002DD4  6E19               	movwf	wr16@addr+2,c
  5737  002DD6  0E01               	movlw	1
  5738  002DD8  6E1B               	movwf	wr16@value+1,c
  5739  002DDA  0E10               	movlw	16
  5740  002DDC  6E1A               	movwf	wr16@value,c
  5741  002DDE  EC33  F01A         	call	_wr16	;wreg free
  5742                           
  5743                           ;FT800.c: 159: wr16(1057832UL, 525);
  5744  002DE2  0E28               	movlw	40
  5745  002DE4  6E17               	movwf	wr16@addr,c
  5746  002DE6  0E24               	movlw	36
  5747  002DE8  6E18               	movwf	wr16@addr+1,c
  5748  002DEA  0E10               	movlw	16
  5749  002DEC  6E19               	movwf	wr16@addr+2,c
  5750  002DEE  0E02               	movlw	2
  5751  002DF0  6E1B               	movwf	wr16@value+1,c
  5752  002DF2  0E0D               	movlw	13
  5753  002DF4  6E1A               	movwf	wr16@value,c
  5754  002DF6  EC33  F01A         	call	_wr16	;wreg free
  5755                           
  5756                           ;FT800.c: 160: wr16(1057844UL, 0);
  5757  002DFA  0E34               	movlw	52
  5758  002DFC  6E17               	movwf	wr16@addr,c
  5759  002DFE  0E24               	movlw	36
  5760  002E00  6E18               	movwf	wr16@addr+1,c
  5761  002E02  0E10               	movlw	16
  5762  002E04  6E19               	movwf	wr16@addr+2,c
  5763  002E06  0E00               	movlw	0
  5764  002E08  6E1B               	movwf	wr16@value+1,c
  5765  002E0A  0E00               	movlw	0
  5766  002E0C  6E1A               	movwf	wr16@value,c
  5767  002E0E  EC33  F01A         	call	_wr16	;wreg free
  5768                           
  5769                           ;FT800.c: 161: wr16(1057848UL, 41);
  5770  002E12  0E38               	movlw	56
  5771  002E14  6E17               	movwf	wr16@addr,c
  5772  002E16  0E24               	movlw	36
  5773  002E18  6E18               	movwf	wr16@addr+1,c
  5774  002E1A  0E10               	movlw	16
  5775  002E1C  6E19               	movwf	wr16@addr+2,c
  5776  002E1E  0E00               	movlw	0
  5777  002E20  6E1B               	movwf	wr16@value+1,c
  5778  002E22  0E29               	movlw	41
  5779  002E24  6E1A               	movwf	wr16@value,c
  5780  002E26  EC33  F01A         	call	_wr16	;wreg free
  5781                           
  5782                           ;FT800.c: 162: wr16(1057836UL, 43);
  5783  002E2A  0E2C               	movlw	44
  5784  002E2C  6E17               	movwf	wr16@addr,c
  5785  002E2E  0E24               	movlw	36
  5786  002E30  6E18               	movwf	wr16@addr+1,c
  5787  002E32  0E10               	movlw	16
  5788  002E34  6E19               	movwf	wr16@addr+2,c
  5789  002E36  0E00               	movlw	0
  5790  002E38  6E1B               	movwf	wr16@value+1,c
  5791  002E3A  0E2B               	movlw	43
  5792  002E3C  6E1A               	movwf	wr16@value,c
  5793  002E3E  EC33  F01A         	call	_wr16	;wreg free
  5794                           
  5795                           ;FT800.c: 163: wr16(1057852UL, 286);
  5796  002E42  0E3C               	movlw	60
  5797  002E44  6E17               	movwf	wr16@addr,c
  5798  002E46  0E24               	movlw	36
  5799  002E48  6E18               	movwf	wr16@addr+1,c
  5800  002E4A  0E10               	movlw	16
  5801  002E4C  6E19               	movwf	wr16@addr+2,c
  5802  002E4E  0E01               	movlw	1
  5803  002E50  6E1B               	movwf	wr16@value+1,c
  5804  002E52  0E1E               	movlw	30
  5805  002E54  6E1A               	movwf	wr16@value,c
  5806  002E56  EC33  F01A         	call	_wr16	;wreg free
  5807                           
  5808                           ;FT800.c: 164: wr16(1057864UL, 0);
  5809  002E5A  0E48               	movlw	72
  5810  002E5C  6E17               	movwf	wr16@addr,c
  5811  002E5E  0E24               	movlw	36
  5812  002E60  6E18               	movwf	wr16@addr+1,c
  5813  002E62  0E10               	movlw	16
  5814  002E64  6E19               	movwf	wr16@addr+2,c
  5815  002E66  0E00               	movlw	0
  5816  002E68  6E1B               	movwf	wr16@value+1,c
  5817  002E6A  0E00               	movlw	0
  5818  002E6C  6E1A               	movwf	wr16@value,c
  5819  002E6E  EC33  F01A         	call	_wr16	;wreg free
  5820                           
  5821                           ;FT800.c: 165: wr16(1057868UL, 10);
  5822  002E72  0E4C               	movlw	76
  5823  002E74  6E17               	movwf	wr16@addr,c
  5824  002E76  0E24               	movlw	36
  5825  002E78  6E18               	movwf	wr16@addr+1,c
  5826  002E7A  0E10               	movlw	16
  5827  002E7C  6E19               	movwf	wr16@addr+2,c
  5828  002E7E  0E00               	movlw	0
  5829  002E80  6E1B               	movwf	wr16@value+1,c
  5830  002E82  0E0A               	movlw	10
  5831  002E84  6E1A               	movwf	wr16@value,c
  5832  002E86  EC33  F01A         	call	_wr16	;wreg free
  5833                           
  5834                           ;FT800.c: 166: wr16(1057856UL, 12);
  5835  002E8A  0E40               	movlw	64
  5836  002E8C  6E17               	movwf	wr16@addr,c
  5837  002E8E  0E24               	movlw	36
  5838  002E90  6E18               	movwf	wr16@addr+1,c
  5839  002E92  0E10               	movlw	16
  5840  002E94  6E19               	movwf	wr16@addr+2,c
  5841  002E96  0E00               	movlw	0
  5842  002E98  6E1B               	movwf	wr16@value+1,c
  5843  002E9A  0E0C               	movlw	12
  5844  002E9C  6E1A               	movwf	wr16@value,c
  5845  002E9E  EC33  F01A         	call	_wr16	;wreg free
  5846                           
  5847                           ;FT800.c: 167: wr8(1057892UL, 0);
  5848  002EA2  0E64               	movlw	100
  5849  002EA4  6E10               	movwf	wr8@addr,c
  5850  002EA6  0E24               	movlw	36
  5851  002EA8  6E11               	movwf	wr8@addr+1,c
  5852  002EAA  0E10               	movlw	16
  5853  002EAC  6E12               	movwf	wr8@addr+2,c
  5854  002EAE  0E00               	movlw	0
  5855  002EB0  6E13               	movwf	wr8@value,c
  5856  002EB2  EC6D  F01A         	call	_wr8	;wreg free
  5857                           
  5858                           ;FT800.c: 168: wr8(1057884UL, 0);
  5859  002EB6  0E5C               	movlw	92
  5860  002EB8  6E10               	movwf	wr8@addr,c
  5861  002EBA  0E24               	movlw	36
  5862  002EBC  6E11               	movwf	wr8@addr+1,c
  5863  002EBE  0E10               	movlw	16
  5864  002EC0  6E12               	movwf	wr8@addr+2,c
  5865  002EC2  0E00               	movlw	0
  5866  002EC4  6E13               	movwf	wr8@value,c
  5867  002EC6  EC6D  F01A         	call	_wr8	;wreg free
  5868                           
  5869                           ;FT800.c: 169: wr16(1057880UL, 0x01B6);
  5870  002ECA  0E58               	movlw	88
  5871  002ECC  6E17               	movwf	wr16@addr,c
  5872  002ECE  0E24               	movlw	36
  5873  002ED0  6E18               	movwf	wr16@addr+1,c
  5874  002ED2  0E10               	movlw	16
  5875  002ED4  6E19               	movwf	wr16@addr+2,c
  5876  002ED6  0E01               	movlw	1
  5877  002ED8  6E1B               	movwf	wr16@value+1,c
  5878  002EDA  0EB6               	movlw	182
  5879  002EDC  6E1A               	movwf	wr16@value,c
  5880  002EDE  EC33  F01A         	call	_wr16	;wreg free
  5881                           
  5882                           ;FT800.c: 170: wr8(1057888UL, 0x0000);
  5883  002EE2  0E60               	movlw	96
  5884  002EE4  6E10               	movwf	wr8@addr,c
  5885  002EE6  0E24               	movlw	36
  5886  002EE8  6E11               	movwf	wr8@addr+1,c
  5887  002EEA  0E10               	movlw	16
  5888  002EEC  6E12               	movwf	wr8@addr+2,c
  5889  002EEE  0E00               	movlw	0
  5890  002EF0  6E13               	movwf	wr8@value,c
  5891  002EF2  EC6D  F01A         	call	_wr8	;wreg free
  5892                           
  5893                           ;FT800.c: 173: wr8(1057896UL, 0);
  5894  002EF6  0E68               	movlw	104
  5895  002EF8  6E10               	movwf	wr8@addr,c
  5896  002EFA  0E24               	movlw	36
  5897  002EFC  6E11               	movwf	wr8@addr+1,c
  5898  002EFE  0E10               	movlw	16
  5899  002F00  6E12               	movwf	wr8@addr+2,c
  5900  002F02  0E00               	movlw	0
  5901  002F04  6E13               	movwf	wr8@value,c
  5902  002F06  EC6D  F01A         	call	_wr8	;wreg free
  5903                           
  5904                           ;FT800.c: 175: wr8(1057876UL, 0);
  5905  002F0A  0E54               	movlw	84
  5906  002F0C  6E10               	movwf	wr8@addr,c
  5907  002F0E  0E24               	movlw	36
  5908  002F10  6E11               	movwf	wr8@addr+1,c
  5909  002F12  0E10               	movlw	16
  5910  002F14  6E12               	movwf	wr8@addr+2,c
  5911  002F16  0E00               	movlw	0
  5912  002F18  6E13               	movwf	wr8@value,c
  5913  002F1A  EC6D  F01A         	call	_wr8	;wreg free
  5914                           
  5915                           ;FT800.c: 182: wr32(1048576UL+0,((2UL<<24)|(((0)&255UL)<<16)|(((26)&255UL)<<8)|(((0)&255
      +                          UL)<<0)));
  5916  002F1E  0E00               	movlw	0
  5917  002F20  6E10               	movwf	wr32@addr,c
  5918  002F22  0E00               	movlw	0
  5919  002F24  6E11               	movwf	wr32@addr+1,c
  5920  002F26  0E10               	movlw	16
  5921  002F28  6E12               	movwf	wr32@addr+2,c
  5922  002F2A  0E00               	movlw	0
  5923  002F2C  6E13               	movwf	wr32@value,c
  5924  002F2E  0E1A               	movlw	26
  5925  002F30  6E14               	movwf	wr32@value+1,c
  5926  002F32  0E00               	movlw	0
  5927  002F34  6E15               	movwf	wr32@value+2,c
  5928  002F36  0E02               	movlw	2
  5929  002F38  6E16               	movwf	wr32@value+3,c
  5930  002F3A  EC4A  F019         	call	_wr32	;wreg free
  5931                           
  5932                           ;FT800.c: 183: wr32(1048576UL+4,((38UL<<24)|(((1)&1UL)<<2)|(((1)&1UL)<<1)|(((1)&1UL)<<0)
      +                          ));
  5933  002F3E  0E04               	movlw	4
  5934  002F40  6E10               	movwf	wr32@addr,c
  5935  002F42  0E00               	movlw	0
  5936  002F44  6E11               	movwf	wr32@addr+1,c
  5937  002F46  0E10               	movlw	16
  5938  002F48  6E12               	movwf	wr32@addr+2,c
  5939  002F4A  0E07               	movlw	7
  5940  002F4C  6E13               	movwf	wr32@value,c
  5941  002F4E  0E00               	movlw	0
  5942  002F50  6E14               	movwf	wr32@value+1,c
  5943  002F52  0E00               	movlw	0
  5944  002F54  6E15               	movwf	wr32@value+2,c
  5945  002F56  0E26               	movlw	38
  5946  002F58  6E16               	movwf	wr32@value+3,c
  5947  002F5A  EC4A  F019         	call	_wr32	;wreg free
  5948                           
  5949                           ;FT800.c: 184: wr32(1048576UL+8,((0UL<<24)));
  5950  002F5E  0E08               	movlw	8
  5951  002F60  6E10               	movwf	wr32@addr,c
  5952  002F62  0E00               	movlw	0
  5953  002F64  6E11               	movwf	wr32@addr+1,c
  5954  002F66  0E10               	movlw	16
  5955  002F68  6E12               	movwf	wr32@addr+2,c
  5956  002F6A  0E00               	movlw	0
  5957  002F6C  6E13               	movwf	wr32@value,c
  5958  002F6E  0E00               	movlw	0
  5959  002F70  6E14               	movwf	wr32@value+1,c
  5960  002F72  0E00               	movlw	0
  5961  002F74  6E15               	movwf	wr32@value+2,c
  5962  002F76  0E00               	movlw	0
  5963  002F78  6E16               	movwf	wr32@value+3,c
  5964  002F7A  EC4A  F019         	call	_wr32	;wreg free
  5965                           
  5966                           ;FT800.c: 186: wr8(1057872UL,2UL);
  5967  002F7E  0E50               	movlw	80
  5968  002F80  6E10               	movwf	wr8@addr,c
  5969  002F82  0E24               	movlw	36
  5970  002F84  6E11               	movwf	wr8@addr+1,c
  5971  002F86  0E10               	movlw	16
  5972  002F88  6E12               	movwf	wr8@addr+2,c
  5973  002F8A  0E02               	movlw	2
  5974  002F8C  6E13               	movwf	wr8@value,c
  5975  002F8E  EC6D  F01A         	call	_wr8	;wreg free
  5976                           
  5977                           ;FT800.c: 191: wr8(1057932UL, 0xfc);
  5978  002F92  0E8C               	movlw	140
  5979  002F94  6E10               	movwf	wr8@addr,c
  5980  002F96  0E24               	movlw	36
  5981  002F98  6E11               	movwf	wr8@addr+1,c
  5982  002F9A  0E10               	movlw	16
  5983  002F9C  6E12               	movwf	wr8@addr+2,c
  5984  002F9E  0EFC               	movlw	252
  5985  002FA0  6E13               	movwf	wr8@value,c
  5986  002FA2  EC6D  F01A         	call	_wr8	;wreg free
  5987                           
  5988                           ;FT800.c: 192: wr8(1057936UL, 0xff);
  5989  002FA6  0E90               	movlw	144
  5990  002FA8  6E10               	movwf	wr8@addr,c
  5991  002FAA  0E24               	movlw	36
  5992  002FAC  6E11               	movwf	wr8@addr+1,c
  5993  002FAE  0E10               	movlw	16
  5994  002FB0  6E12               	movwf	wr8@addr+2,c
  5995  002FB2  0EFF               	movlw	255
  5996  002FB4  6E13               	movwf	wr8@value,c
  5997  002FB6  EC6D  F01A         	call	_wr8	;wreg free
  5998                           
  5999                           ;FT800.c: 194: wr8(1057900UL,5);
  6000  002FBA  0E6C               	movlw	108
  6001  002FBC  6E10               	movwf	wr8@addr,c
  6002  002FBE  0E24               	movlw	36
  6003  002FC0  6E11               	movwf	wr8@addr+1,c
  6004  002FC2  0E10               	movlw	16
  6005  002FC4  6E12               	movwf	wr8@addr+2,c
  6006  002FC6  0E05               	movlw	5
  6007  002FC8  6E13               	movwf	wr8@value,c
  6008  002FCA  EC6D  F01A         	call	_wr8	;wreg free
  6009                           
  6010                           ;FT800.c: 196: cmd_offset=rd16(1058024UL);while(rd16(1058020UL) != cmd_offset);
  6011  002FCE  0EE8               	movlw	232
  6012  002FD0  6E10               	movwf	rd16@addr,c
  6013  002FD2  0E24               	movlw	36
  6014  002FD4  6E11               	movwf	rd16@addr+1,c
  6015  002FD6  0E10               	movlw	16
  6016  002FD8  6E12               	movwf	rd16@addr+2,c
  6017  002FDA  EC86  F019         	call	_rd16	;wreg free
  6018  002FDE  C010  F02B         	movff	?_rd16,_cmd_offset
  6019  002FE2  C011  F02C         	movff	?_rd16+1,_cmd_offset+1
  6020  002FE6                     l2605:
  6021  002FE6  0EE4               	movlw	228
  6022  002FE8  6E10               	movwf	rd16@addr,c
  6023  002FEA  0E24               	movlw	36
  6024  002FEC  6E11               	movwf	rd16@addr+1,c
  6025  002FEE  0E10               	movlw	16
  6026  002FF0  6E12               	movwf	rd16@addr+2,c
  6027  002FF2  EC86  F019         	call	_rd16	;wreg free
  6028  002FF6  502B               	movf	_cmd_offset,w,c
  6029  002FF8  1810               	xorwf	?_rd16,w,c
  6030  002FFA  E1F5               	bnz	l2605
  6031  002FFC  502C               	movf	_cmd_offset+1,w,c
  6032  002FFE  1811               	xorwf	?_rd16+1,w,c
  6033  003000  B4D8               	btfsc	status,2,c
  6034  003002  0012               	return	
  6035  003004  D7F0               	goto	l2605
  6036  003006                     __end_of_FT800_Init:
  6037                           	opt stack 0
  6038                           tblptru	equ	0xFF8
  6039                           tblptrh	equ	0xFF7
  6040                           tblptrl	equ	0xFF6
  6041                           tablat	equ	0xFF5
  6042                           prodh	equ	0xFF4
  6043                           prodl	equ	0xFF3
  6044                           intcon	equ	0xFF2
  6045                           wreg	equ	0xFE8
  6046                           status	equ	0xFD8
  6047                           
  6048 ;; *************** function _wr8 *****************
  6049 ;; Defined at:
  6050 ;;		line 16 in file "Gue/FT800.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  addr            3   15[COMRAM] unsigned um
  6053 ;;  value           1   18[COMRAM] unsigned char 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      void 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0, cstack
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6067 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6068 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6069 ;;Total ram usage:        7 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    5
  6072 ;; This function calls:
  6073 ;;		_SPI_Exchange8bit
  6074 ;; This function is called by:
  6075 ;;		_FT800_Init
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text19
  6080  0034DA                     __ptext19:
  6081                           	opt stack 0
  6082  0034DA                     _wr8:
  6083                           	opt stack 24
  6084                           
  6085                           ;FT800.c: 17: LATDbits.LATD0 = 0;
  6086                           
  6087                           ;incstack = 0
  6088  0034DA  908C               	bcf	3980,0,c	;volatile
  6089                           
  6090                           ;FT800.c: 18: SPI_Exchange8bit(0x80 | (addr >> 16));
  6091  0034DC  5012               	movf	wr8@addr+2,w,c
  6092  0034DE  0980               	iorlw	128
  6093  0034E0  ECE8  F01A         	call	_SPI_Exchange8bit
  6094                           
  6095                           ;FT800.c: 19: SPI_Exchange8bit(addr >> 8);
  6096  0034E4  C010  F014         	movff	wr8@addr,??_wr8
  6097  0034E8  C011  F015         	movff	wr8@addr+1,??_wr8+1
  6098  0034EC  C012  F016         	movff	wr8@addr+2,??_wr8+2
  6099  0034F0  C015  F014         	movff	??_wr8+1,??_wr8
  6100  0034F4  C016  F015         	movff	??_wr8+2,??_wr8+1
  6101  0034F8  6A16               	clrf	??_wr8+2,c
  6102  0034FA  5014               	movf	??_wr8,w,c
  6103  0034FC  ECE8  F01A         	call	_SPI_Exchange8bit
  6104                           
  6105                           ;FT800.c: 20: SPI_Exchange8bit(addr);
  6106  003500  5010               	movf	wr8@addr,w,c
  6107  003502  ECE8  F01A         	call	_SPI_Exchange8bit
  6108                           
  6109                           ;FT800.c: 21: SPI_Exchange8bit(value);
  6110  003506  5013               	movf	wr8@value,w,c
  6111  003508  ECE8  F01A         	call	_SPI_Exchange8bit
  6112                           
  6113                           ;FT800.c: 22: LATDbits.LATD0 = 1;
  6114  00350C  808C               	bsf	3980,0,c	;volatile
  6115  00350E  0012               	return		;funcret
  6116  003510                     __end_of_wr8:
  6117                           	opt stack 0
  6118                           tblptru	equ	0xFF8
  6119                           tblptrh	equ	0xFF7
  6120                           tblptrl	equ	0xFF6
  6121                           tablat	equ	0xFF5
  6122                           prodh	equ	0xFF4
  6123                           prodl	equ	0xFF3
  6124                           intcon	equ	0xFF2
  6125                           wreg	equ	0xFE8
  6126                           status	equ	0xFD8
  6127                           
  6128 ;; *************** function _wr32 *****************
  6129 ;; Defined at:
  6130 ;;		line 34 in file "Gue/FT800.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  addr            3   15[COMRAM] unsigned um
  6133 ;;  value           4   18[COMRAM] unsigned long 
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;		None
  6136 ;; Return value:  Size  Location     Type
  6137 ;;                  1    wreg      void 
  6138 ;; Registers used:
  6139 ;;		wreg, status,2, status,0, cstack
  6140 ;; Tracked objects:
  6141 ;;		On entry : 0/0
  6142 ;;		On exit  : 0/0
  6143 ;;		Unchanged: 0/0
  6144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6145 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6147 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6148 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6149 ;;Total ram usage:       11 bytes
  6150 ;; Hardware stack levels used:    1
  6151 ;; Hardware stack levels required when called:    5
  6152 ;; This function calls:
  6153 ;;		_SPI_Exchange8bit
  6154 ;; This function is called by:
  6155 ;;		_cmd
  6156 ;;		_FT800_Init
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           	psect	text20
  6161  003294                     __ptext20:
  6162                           	opt stack 0
  6163  003294                     _wr32:
  6164                           	opt stack 23
  6165                           
  6166                           ;FT800.c: 35: LATDbits.LATD0 = 0;
  6167                           
  6168                           ;incstack = 0
  6169  003294  908C               	bcf	3980,0,c	;volatile
  6170                           
  6171                           ;FT800.c: 36: SPI_Exchange8bit(0x80 | (addr >> 16));
  6172  003296  5012               	movf	wr32@addr+2,w,c
  6173  003298  0980               	iorlw	128
  6174  00329A  ECE8  F01A         	call	_SPI_Exchange8bit
  6175                           
  6176                           ;FT800.c: 37: SPI_Exchange8bit(addr >> 8);
  6177  00329E  C010  F017         	movff	wr32@addr,??_wr32
  6178  0032A2  C011  F018         	movff	wr32@addr+1,??_wr32+1
  6179  0032A6  C012  F019         	movff	wr32@addr+2,??_wr32+2
  6180  0032AA  C018  F017         	movff	??_wr32+1,??_wr32
  6181  0032AE  C019  F018         	movff	??_wr32+2,??_wr32+1
  6182  0032B2  6A19               	clrf	??_wr32+2,c
  6183  0032B4  5017               	movf	??_wr32,w,c
  6184  0032B6  ECE8  F01A         	call	_SPI_Exchange8bit
  6185                           
  6186                           ;FT800.c: 38: SPI_Exchange8bit(addr);
  6187  0032BA  5010               	movf	wr32@addr,w,c
  6188  0032BC  ECE8  F01A         	call	_SPI_Exchange8bit
  6189                           
  6190                           ;FT800.c: 39: SPI_Exchange8bit(((value) & 0xFFFF) & 0xFF);SPI_Exchange8bit((((value) & 0
      +                          xFFFF) >> 8) & 0xFF);SPI_Exchange8bit((((value) >> 16) & 0xFFFF) & 0xFF);SPI_Exchange8bi
      +                          t(((((value) >> 16) & 0xFFFF) >> 8) & 0xFF);
  6191  0032C0  5013               	movf	wr32@value,w,c
  6192  0032C2  ECE8  F01A         	call	_SPI_Exchange8bit
  6193  0032C6  5014               	movf	wr32@value+1,w,c
  6194  0032C8  ECE8  F01A         	call	_SPI_Exchange8bit
  6195  0032CC  5015               	movf	wr32@value+2,w,c
  6196  0032CE  ECE8  F01A         	call	_SPI_Exchange8bit
  6197  0032D2  C013  F017         	movff	wr32@value,??_wr32
  6198  0032D6  C014  F018         	movff	wr32@value+1,??_wr32+1
  6199  0032DA  C015  F019         	movff	wr32@value+2,??_wr32+2
  6200  0032DE  C016  F01A         	movff	wr32@value+3,??_wr32+3
  6201  0032E2  0E11               	movlw	17
  6202  0032E4  D005               	goto	u500
  6203  0032E6                     u505:
  6204  0032E6  90D8               	bcf	status,0,c
  6205  0032E8  321A               	rrcf	??_wr32+3,f,c
  6206  0032EA  3219               	rrcf	??_wr32+2,f,c
  6207  0032EC  3218               	rrcf	??_wr32+1,f,c
  6208  0032EE  3217               	rrcf	??_wr32,f,c
  6209  0032F0                     u500:
  6210  0032F0  2EE8               	decfsz	wreg,f,c
  6211  0032F2  D7F9               	goto	u505
  6212  0032F4  C018  F017         	movff	??_wr32+1,??_wr32
  6213  0032F8  C019  F018         	movff	??_wr32+2,??_wr32+1
  6214  0032FC  C01A  F019         	movff	??_wr32+3,??_wr32+2
  6215  003300  6A1A               	clrf	??_wr32+3,c
  6216  003302  5017               	movf	??_wr32,w,c
  6217  003304  ECE8  F01A         	call	_SPI_Exchange8bit
  6218                           
  6219                           ;FT800.c: 40: LATDbits.LATD0 = 1;
  6220  003308  808C               	bsf	3980,0,c	;volatile
  6221  00330A  0012               	return		;funcret
  6222  00330C                     __end_of_wr32:
  6223                           	opt stack 0
  6224                           tblptru	equ	0xFF8
  6225                           tblptrh	equ	0xFF7
  6226                           tblptrl	equ	0xFF6
  6227                           tablat	equ	0xFF5
  6228                           prodh	equ	0xFF4
  6229                           prodl	equ	0xFF3
  6230                           intcon	equ	0xFF2
  6231                           wreg	equ	0xFE8
  6232                           status	equ	0xFD8
  6233                           
  6234 ;; *************** function _wr16 *****************
  6235 ;; Defined at:
  6236 ;;		line 25 in file "Gue/FT800.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;  addr            3   22[COMRAM] unsigned um
  6239 ;;  value           2   25[COMRAM] unsigned int 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;		None
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  1    wreg      void 
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0, cstack
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6251 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;Total ram usage:        8 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:    5
  6258 ;; This function calls:
  6259 ;;		_SPI_Exchange8bit
  6260 ;; This function is called by:
  6261 ;;		_FT800_Init
  6262 ;;		_display_end
  6263 ;;		_display_labels
  6264 ;;		_display_rpm
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text21
  6269  003466                     __ptext21:
  6270                           	opt stack 0
  6271  003466                     _wr16:
  6272                           	opt stack 24
  6273                           
  6274                           ;FT800.c: 26: LATDbits.LATD0 = 0;
  6275                           
  6276                           ;incstack = 0
  6277  003466  908C               	bcf	3980,0,c	;volatile
  6278                           
  6279                           ;FT800.c: 27: SPI_Exchange8bit(0x80 | (addr >> 16));
  6280  003468  5019               	movf	wr16@addr+2,w,c
  6281  00346A  0980               	iorlw	128
  6282  00346C  ECE8  F01A         	call	_SPI_Exchange8bit
  6283                           
  6284                           ;FT800.c: 28: SPI_Exchange8bit(addr >> 8);
  6285  003470  C017  F01C         	movff	wr16@addr,??_wr16
  6286  003474  C018  F01D         	movff	wr16@addr+1,??_wr16+1
  6287  003478  C019  F01E         	movff	wr16@addr+2,??_wr16+2
  6288  00347C  C01D  F01C         	movff	??_wr16+1,??_wr16
  6289  003480  C01E  F01D         	movff	??_wr16+2,??_wr16+1
  6290  003484  6A1E               	clrf	??_wr16+2,c
  6291  003486  501C               	movf	??_wr16,w,c
  6292  003488  ECE8  F01A         	call	_SPI_Exchange8bit
  6293                           
  6294                           ;FT800.c: 29: SPI_Exchange8bit(addr);
  6295  00348C  5017               	movf	wr16@addr,w,c
  6296  00348E  ECE8  F01A         	call	_SPI_Exchange8bit
  6297                           
  6298                           ;FT800.c: 30: SPI_Exchange8bit((value) & 0xFF);SPI_Exchange8bit(((value) >> 8) & 0xFF);
  6299  003492  501A               	movf	wr16@value,w,c
  6300  003494  ECE8  F01A         	call	_SPI_Exchange8bit
  6301  003498  501B               	movf	wr16@value+1,w,c
  6302  00349A  ECE8  F01A         	call	_SPI_Exchange8bit
  6303                           
  6304                           ;FT800.c: 31: LATDbits.LATD0 = 1;
  6305  00349E  808C               	bsf	3980,0,c	;volatile
  6306  0034A0  0012               	return		;funcret
  6307  0034A2                     __end_of_wr16:
  6308                           	opt stack 0
  6309                           tblptru	equ	0xFF8
  6310                           tblptrh	equ	0xFF7
  6311                           tblptrl	equ	0xFF6
  6312                           tablat	equ	0xFF5
  6313                           prodh	equ	0xFF4
  6314                           prodl	equ	0xFF3
  6315                           intcon	equ	0xFF2
  6316                           wreg	equ	0xFE8
  6317                           status	equ	0xFD8
  6318                           
  6319 ;; *************** function _rd16 *****************
  6320 ;; Defined at:
  6321 ;;		line 72 in file "Gue/FT800.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  addr            3   15[COMRAM] unsigned um
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;  temp            1   21[COMRAM] unsigned char 
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  2   15[COMRAM] unsigned int 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, cstack
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6335 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6336 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6337 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6338 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6339 ;;Total ram usage:        7 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    5
  6342 ;; This function calls:
  6343 ;;		_SPI_Exchange8bit
  6344 ;; This function is called by:
  6345 ;;		_FT800_Init
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text22
  6350  00330C                     __ptext22:
  6351                           	opt stack 0
  6352  00330C                     _rd16:
  6353                           	opt stack 24
  6354                           
  6355                           ;FT800.c: 73: LATDbits.LATD0 = 0;
  6356                           
  6357                           ;incstack = 0
  6358  00330C  908C               	bcf	3980,0,c	;volatile
  6359                           
  6360                           ;FT800.c: 74: SPI_Exchange8bit(addr >> 16);
  6361  00330E  5012               	movf	rd16@addr+2,w,c
  6362  003310  ECE8  F01A         	call	_SPI_Exchange8bit
  6363                           
  6364                           ;FT800.c: 75: SPI_Exchange8bit(addr >> 8);
  6365  003314  C010  F013         	movff	rd16@addr,??_rd16
  6366  003318  C011  F014         	movff	rd16@addr+1,??_rd16+1
  6367  00331C  C012  F015         	movff	rd16@addr+2,??_rd16+2
  6368  003320  C014  F013         	movff	??_rd16+1,??_rd16
  6369  003324  C015  F014         	movff	??_rd16+2,??_rd16+1
  6370  003328  6A15               	clrf	??_rd16+2,c
  6371  00332A  5013               	movf	??_rd16,w,c
  6372  00332C  ECE8  F01A         	call	_SPI_Exchange8bit
  6373                           
  6374                           ;FT800.c: 76: SPI_Exchange8bit(addr);
  6375  003330  5010               	movf	rd16@addr,w,c
  6376  003332  ECE8  F01A         	call	_SPI_Exchange8bit
  6377                           
  6378                           ;FT800.c: 77: SPI_Exchange8bit(0);
  6379  003336  0E00               	movlw	0
  6380  003338  ECE8  F01A         	call	_SPI_Exchange8bit
  6381                           
  6382                           ;FT800.c: 78: SPI_Exchange8bit(0);
  6383  00333C  0E00               	movlw	0
  6384  00333E  ECE8  F01A         	call	_SPI_Exchange8bit
  6385                           
  6386                           ;FT800.c: 79: ft_uint8_t temp = SSPBUF;
  6387  003342  CFC9 F016          	movff	4041,rd16@temp	;volatile
  6388                           
  6389                           ;FT800.c: 80: SPI_Exchange8bit(0);
  6390  003346  0E00               	movlw	0
  6391  003348  ECE8  F01A         	call	_SPI_Exchange8bit
  6392                           
  6393                           ;FT800.c: 81: LATDbits.LATD0 = 1;
  6394  00334C  808C               	bsf	3980,0,c	;volatile
  6395                           
  6396                           ;FT800.c: 82: return ((ft_uint16_t)SSPBUF << 8) | temp;
  6397  00334E  50C9               	movf	4041,w,c	;volatile
  6398  003350  6E13               	movwf	??_rd16& (0+255),c
  6399  003352  5016               	movf	rd16@temp,w,c
  6400  003354  6E10               	movwf	?_rd16,c
  6401  003356  C013  F011         	movff	??_rd16,?_rd16+1
  6402  00335A  0012               	return	
  6403  00335C                     __end_of_rd16:
  6404                           	opt stack 0
  6405                           tblptru	equ	0xFF8
  6406                           tblptrh	equ	0xFF7
  6407                           tblptrl	equ	0xFF6
  6408                           tablat	equ	0xFF5
  6409                           prodh	equ	0xFF4
  6410                           prodl	equ	0xFF3
  6411                           intcon	equ	0xFF2
  6412                           wreg	equ	0xFE8
  6413                           status	equ	0xFD8
  6414                           
  6415 ;; *************** function _host_command *****************
  6416 ;; Defined at:
  6417 ;;		line 8 in file "Gue/FT800.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  command         1    wreg     unsigned char 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  command         1   15[COMRAM] unsigned char 
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  1    wreg      void 
  6424 ;; Registers used:
  6425 ;;		wreg, status,2, cstack
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6434 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6435 ;;Total ram usage:        1 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; Hardware stack levels required when called:    5
  6438 ;; This function calls:
  6439 ;;		_SPI_Exchange8bit
  6440 ;; This function is called by:
  6441 ;;		_FT800_Init
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           	psect	text23
  6446  003566                     __ptext23:
  6447                           	opt stack 0
  6448  003566                     _host_command:
  6449                           	opt stack 24
  6450                           
  6451                           ;incstack = 0
  6452                           ;host_command@command stored from wreg
  6453  003566  6E10               	movwf	host_command@command,c
  6454                           
  6455                           ;FT800.c: 9: LATDbits.LATD0 = 0;
  6456  003568  908C               	bcf	3980,0,c	;volatile
  6457                           
  6458                           ;FT800.c: 10: SPI_Exchange8bit(command);
  6459  00356A  5010               	movf	host_command@command,w,c
  6460  00356C  ECE8  F01A         	call	_SPI_Exchange8bit
  6461                           
  6462                           ;FT800.c: 11: SPI_Exchange8bit(0);
  6463  003570  0E00               	movlw	0
  6464  003572  ECE8  F01A         	call	_SPI_Exchange8bit
  6465                           
  6466                           ;FT800.c: 12: SPI_Exchange8bit(0);
  6467  003576  0E00               	movlw	0
  6468  003578  ECE8  F01A         	call	_SPI_Exchange8bit
  6469                           
  6470                           ;FT800.c: 13: LATDbits.LATD0 = 1;
  6471  00357C  808C               	bsf	3980,0,c	;volatile
  6472  00357E  0012               	return		;funcret
  6473  003580                     __end_of_host_command:
  6474                           	opt stack 0
  6475                           tblptru	equ	0xFF8
  6476                           tblptrh	equ	0xFF7
  6477                           tblptrl	equ	0xFF6
  6478                           tablat	equ	0xFF5
  6479                           prodh	equ	0xFF4
  6480                           prodl	equ	0xFF3
  6481                           intcon	equ	0xFF2
  6482                           wreg	equ	0xFE8
  6483                           status	equ	0xFD8
  6484                           
  6485 ;; *************** function _SPI_Exchange8bit *****************
  6486 ;; Defined at:
  6487 ;;		line 77 in file "mcc_generated_files/spi.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  data            1    wreg     unsigned char 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  data            1   14[COMRAM] unsigned char 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      unsigned char 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6505 ;;Total ram usage:        1 bytes
  6506 ;; Hardware stack levels used:    1
  6507 ;; Hardware stack levels required when called:    4
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		_host_command
  6512 ;;		_wr8
  6513 ;;		_wr16
  6514 ;;		_wr32
  6515 ;;		_wr8s
  6516 ;;		_rd16
  6517 ;;		_SPI_Exchange8bitBuffer
  6518 ;;		_rd8
  6519 ;;		_rd32
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text24
  6524  0035D0                     __ptext24:
  6525                           	opt stack 0
  6526  0035D0                     _SPI_Exchange8bit:
  6527                           	opt stack 23
  6528                           
  6529                           ;incstack = 0
  6530                           ;SPI_Exchange8bit@data stored from wreg
  6531  0035D0  6E0F               	movwf	SPI_Exchange8bit@data,c
  6532                           
  6533                           ;spi.c: 80: SSPCON1bits.WCOL = 0;
  6534  0035D2  9EC6               	bcf	4038,7,c	;volatile
  6535                           
  6536                           ;spi.c: 82: SSPBUF = data;
  6537  0035D4  C00F  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  6538  0035D8                     l384:
  6539  0035D8  A0C7               	btfss	4039,0,c	;volatile
  6540  0035DA  D7FE               	goto	l384
  6541                           
  6542                           ;spi.c: 86: }
  6543                           ;spi.c: 88: return (SSPBUF);
  6544  0035DC  50C9               	movf	4041,w,c	;volatile
  6545  0035DE  0012               	return		;funcret
  6546  0035E0                     __end_of_SPI_Exchange8bit:
  6547                           	opt stack 0
  6548                           tblptru	equ	0xFF8
  6549                           tblptrh	equ	0xFF7
  6550                           tblptrl	equ	0xFF6
  6551                           tablat	equ	0xFF5
  6552                           prodh	equ	0xFF4
  6553                           prodl	equ	0xFF3
  6554                           intcon	equ	0xFF2
  6555                           wreg	equ	0xFE8
  6556                           status	equ	0xFD8
  6557                           
  6558 ;; *************** function _EUSART1_Write *****************
  6559 ;; Defined at:
  6560 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  txData          1    wreg     unsigned char 
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;  txData          1   14[COMRAM] unsigned char 
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      void 
  6567 ;; Registers used:
  6568 ;;		wreg
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6578 ;;Total ram usage:        1 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:    4
  6581 ;; This function calls:
  6582 ;;		Nothing
  6583 ;; This function is called by:
  6584 ;;		_main
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           	psect	text25
  6589  0035EE                     __ptext25:
  6590                           	opt stack 0
  6591  0035EE                     _EUSART1_Write:
  6592                           	opt stack 26
  6593                           
  6594                           ;incstack = 0
  6595                           ;EUSART1_Write@txData stored from wreg
  6596  0035EE  6E0F               	movwf	EUSART1_Write@txData,c
  6597  0035F0                     l442:
  6598  0035F0  A89E               	btfss	3998,4,c	;volatile
  6599  0035F2  D7FE               	goto	l442
  6600                           
  6601                           ;eusart1.c: 100: }
  6602                           ;eusart1.c: 102: TXREG1 = txData;
  6603  0035F4  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6604  0035F8  0012               	return		;funcret
  6605  0035FA                     __end_of_EUSART1_Write:
  6606                           	opt stack 0
  6607                           tblptru	equ	0xFF8
  6608                           tblptrh	equ	0xFF7
  6609                           tblptrl	equ	0xFF6
  6610                           tablat	equ	0xFF5
  6611                           prodh	equ	0xFF4
  6612                           prodl	equ	0xFF3
  6613                           intcon	equ	0xFF2
  6614                           wreg	equ	0xFE8
  6615                           status	equ	0xFD8
  6616                           
  6617 ;; *************** function _EUSART1_Initialize *****************
  6618 ;; Defined at:
  6619 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;		None
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  1    wreg      void 
  6626 ;; Registers used:
  6627 ;;		wreg, status,2
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6637 ;;Total ram usage:        0 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:    4
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		_main
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text26
  6648  003596                     __ptext26:
  6649                           	opt stack 0
  6650  003596                     _EUSART1_Initialize:
  6651                           	opt stack 26
  6652                           
  6653                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  6654                           
  6655                           ;incstack = 0
  6656  003596  0E08               	movlw	8
  6657  003598  6EA7               	movwf	4007,c	;volatile
  6658                           
  6659                           ;eusart1.c: 63: RCSTA1 = 0x90;
  6660  00359A  0E90               	movlw	144
  6661  00359C  6EAB               	movwf	4011,c	;volatile
  6662                           
  6663                           ;eusart1.c: 66: TXSTA1 = 0x24;
  6664  00359E  0E24               	movlw	36
  6665  0035A0  6EAC               	movwf	4012,c	;volatile
  6666                           
  6667                           ;eusart1.c: 69: SPBRG1 = 0x22;
  6668  0035A2  0E22               	movlw	34
  6669  0035A4  6EAF               	movwf	4015,c	;volatile
  6670                           
  6671                           ;eusart1.c: 72: SPBRGH1 = 0x00;
  6672  0035A6  0E00               	movlw	0
  6673  0035A8  6E7D               	movwf	3965,c	;volatile
  6674  0035AA  0012               	return		;funcret
  6675  0035AC                     __end_of_EUSART1_Initialize:
  6676                           	opt stack 0
  6677                           tblptru	equ	0xFF8
  6678                           tblptrh	equ	0xFF7
  6679                           tblptrl	equ	0xFF6
  6680                           tablat	equ	0xFF5
  6681                           prodh	equ	0xFF4
  6682                           prodl	equ	0xFF3
  6683                           intcon	equ	0xFF2
  6684                           wreg	equ	0xFE8
  6685                           status	equ	0xFD8
  6686                           
  6687 ;; *************** function _INTERRUPT_InterruptManager *****************
  6688 ;; Defined at:
  6689 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;		None
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;		None
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  1    wreg      void 
  6696 ;; Registers used:
  6697 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6705 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6706 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6707 ;;Total ram usage:       14 bytes
  6708 ;; Hardware stack levels used:    1
  6709 ;; Hardware stack levels required when called:    3
  6710 ;; This function calls:
  6711 ;;		_PIN_MANAGER_IOC
  6712 ;; This function is called by:
  6713 ;;		Interrupt level 2
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	intcode
  6718  000008                     __pintcode:
  6719                           	opt stack 0
  6720  000008                     _INTERRUPT_InterruptManager:
  6721                           	opt stack 23
  6722                           
  6723                           ;incstack = 0
  6724  000008  8231               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6725  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  6726  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6727  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  6728  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  6729  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  6730  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  6731  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  6732  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  6733  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  6734  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  6735  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  6736  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  6737  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  6738  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  6739                           
  6740                           ;interrupt_manager.c: 60: if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  6741  000042  B6F2               	btfsc	intcon,3,c	;volatile
  6742  000044  A0F2               	btfss	intcon,0,c	;volatile
  6743  000046  D002               	goto	i2l495
  6744                           
  6745                           ;interrupt_manager.c: 61: {
  6746                           ;interrupt_manager.c: 62: PIN_MANAGER_IOC();
  6747  000048  ECFD  F01A         	call	_PIN_MANAGER_IOC	;wreg free
  6748  00004C                     i2l495:
  6749  00004C  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  6750  000050  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  6751  000054  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  6752  000058  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  6753  00005C  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  6754  000060  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  6755  000064  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  6756  000068  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  6757  00006C  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  6758  000070  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  6759  000074  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  6760  000078  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  6761  00007C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6762  000080  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6763  000084  9231               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6764  000086  0011               	retfie		f
  6765  000088                     __end_of_INTERRUPT_InterruptManager:
  6766                           	opt stack 0
  6767                           pclatu	equ	0xFFB
  6768                           pclath	equ	0xFFA
  6769                           tblptru	equ	0xFF8
  6770                           tblptrh	equ	0xFF7
  6771                           tblptrl	equ	0xFF6
  6772                           tablat	equ	0xFF5
  6773                           prodh	equ	0xFF4
  6774                           prodl	equ	0xFF3
  6775                           intcon	equ	0xFF2
  6776                           fsr0h	equ	0xFEA
  6777                           fsr0l	equ	0xFE9
  6778                           wreg	equ	0xFE8
  6779                           fsr1h	equ	0xFE2
  6780                           fsr1l	equ	0xFE1
  6781                           fsr2h	equ	0xFDA
  6782                           fsr2l	equ	0xFD9
  6783                           status	equ	0xFD8
  6784                           
  6785 ;; *************** function _PIN_MANAGER_IOC *****************
  6786 ;; Defined at:
  6787 ;;		line 100 in file "mcc_generated_files/pin_manager.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;		None
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;		None
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  1    wreg      void 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6805 ;;Total ram usage:        0 bytes
  6806 ;; Hardware stack levels used:    1
  6807 ;; Hardware stack levels required when called:    2
  6808 ;; This function calls:
  6809 ;;		_IOCB4_ISR
  6810 ;; This function is called by:
  6811 ;;		_INTERRUPT_InterruptManager
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text28
  6816  0035FA                     __ptext28:
  6817                           	opt stack 0
  6818  0035FA                     _PIN_MANAGER_IOC:
  6819                           	opt stack 23
  6820                           
  6821                           ;pin_manager.c: 103: if(IOCBbits.IOCB4 == 1)
  6822                           
  6823                           ;incstack = 0
  6824  0035FA  010F               	movlb	15	; () banked
  6825  0035FC  B95A               	btfsc	90,4,b	;volatile
  6826                           
  6827                           ; BSR set to: 15
  6828                           ;pin_manager.c: 104: {
  6829                           ;pin_manager.c: 105: IOCB4_ISR();
  6830  0035FE  EC88  F01A         	call	_IOCB4_ISR	;wreg free
  6831                           
  6832                           ;pin_manager.c: 106: }
  6833                           ;pin_manager.c: 109: INTCONbits.RBIF = 0;
  6834  003602  90F2               	bcf	intcon,0,c	;volatile
  6835  003604  0012               	return		;funcret
  6836  003606                     __end_of_PIN_MANAGER_IOC:
  6837                           	opt stack 0
  6838                           pclatu	equ	0xFFB
  6839                           pclath	equ	0xFFA
  6840                           tblptru	equ	0xFF8
  6841                           tblptrh	equ	0xFF7
  6842                           tblptrl	equ	0xFF6
  6843                           tablat	equ	0xFF5
  6844                           prodh	equ	0xFF4
  6845                           prodl	equ	0xFF3
  6846                           intcon	equ	0xFF2
  6847                           fsr0h	equ	0xFEA
  6848                           fsr0l	equ	0xFE9
  6849                           wreg	equ	0xFE8
  6850                           fsr1h	equ	0xFE2
  6851                           fsr1l	equ	0xFE1
  6852                           fsr2h	equ	0xFDA
  6853                           fsr2l	equ	0xFD9
  6854                           status	equ	0xFD8
  6855                           
  6856 ;; *************** function _IOCB4_ISR *****************
  6857 ;; Defined at:
  6858 ;;		line 116 in file "mcc_generated_files/pin_manager.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;		None
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;		None
  6863 ;; Return value:  Size  Location     Type
  6864 ;;                  1    wreg      void 
  6865 ;; Registers used:
  6866 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6876 ;;Total ram usage:        0 bytes
  6877 ;; Hardware stack levels used:    1
  6878 ;; Hardware stack levels required when called:    1
  6879 ;; This function calls:
  6880 ;;		Absolute function
  6881 ;;		_IOCB4_DefaultInterruptHandler
  6882 ;; This function is called by:
  6883 ;;		_PIN_MANAGER_IOC
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           	psect	text29
  6888  003510                     __ptext29:
  6889                           	opt stack 0
  6890  003510                     _IOCB4_ISR:
  6891                           	opt stack 23
  6892                           
  6893                           ;pin_manager.c: 121: if(IOCB4_InterruptHandler)
  6894                           
  6895                           ;incstack = 0
  6896  003510  502F               	movf	_IOCB4_InterruptHandler,w,c
  6897  003512  1030               	iorwf	_IOCB4_InterruptHandler+1,w,c
  6898  003514  B4D8               	btfsc	status,2,c
  6899  003516  0012               	return	
  6900                           
  6901                           ;pin_manager.c: 122: {
  6902                           ;pin_manager.c: 123: IOCB4_InterruptHandler();
  6903  003518  D801               	call	i2u7_48
  6904  00351A  0012               	return	
  6905  00351C                     i2u7_48:
  6906  00351C  0005               	push	
  6907  00351E  6EFA               	movwf	pclath,c
  6908  003520  502F               	movf	_IOCB4_InterruptHandler,w,c
  6909  003522  6EFD               	movwf	tosl,c
  6910  003524  5030               	movf	_IOCB4_InterruptHandler+1,w,c
  6911  003526  6EFE               	movwf	tosh,c
  6912  003528  50F8               	movf	tblptru,w,c
  6913  00352A  6EFF               	movwf	tosu,c
  6914  00352C  50FA               	movf	pclath,w,c
  6915  00352E  0012               	return		;indir
  6916  003530                     __end_of_IOCB4_ISR:
  6917                           	opt stack 0
  6918                           tosu	equ	0xFFF
  6919                           tosh	equ	0xFFE
  6920                           tosl	equ	0xFFD
  6921                           pclatu	equ	0xFFB
  6922                           pclath	equ	0xFFA
  6923                           tblptru	equ	0xFF8
  6924                           tblptrh	equ	0xFF7
  6925                           tblptrl	equ	0xFF6
  6926                           tablat	equ	0xFF5
  6927                           prodh	equ	0xFF4
  6928                           prodl	equ	0xFF3
  6929                           intcon	equ	0xFF2
  6930                           fsr0h	equ	0xFEA
  6931                           fsr0l	equ	0xFE9
  6932                           wreg	equ	0xFE8
  6933                           fsr1h	equ	0xFE2
  6934                           fsr1l	equ	0xFE1
  6935                           fsr2h	equ	0xFDA
  6936                           fsr2l	equ	0xFD9
  6937                           status	equ	0xFD8
  6938                           
  6939 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
  6940 ;; Defined at:
  6941 ;;		line 137 in file "mcc_generated_files/pin_manager.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;		None
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;		None
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  1    wreg      void 
  6948 ;; Registers used:
  6949 ;;		None
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6959 ;;Total ram usage:        0 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; This function calls:
  6962 ;;		Nothing
  6963 ;; This function is called by:
  6964 ;;		_PIN_MANAGER_Initialize
  6965 ;;		_IOCB4_ISR
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text30
  6970  003610                     __ptext30:
  6971                           	opt stack 0
  6972  003610                     _IOCB4_DefaultInterruptHandler:
  6973                           	opt stack 23
  6974                           
  6975                           ;incstack = 0
  6976  003610  0012               	return		;funcret
  6977  003612                     __end_of_IOCB4_DefaultInterruptHandler:
  6978                           	opt stack 0
  6979                           tosu	equ	0xFFF
  6980                           tosh	equ	0xFFE
  6981                           tosl	equ	0xFFD
  6982                           pclatu	equ	0xFFB
  6983                           pclath	equ	0xFFA
  6984                           tblptru	equ	0xFF8
  6985                           tblptrh	equ	0xFF7
  6986                           tblptrl	equ	0xFF6
  6987                           tablat	equ	0xFF5
  6988                           prodh	equ	0xFF4
  6989                           prodl	equ	0xFF3
  6990                           intcon	equ	0xFF2
  6991                           fsr0h	equ	0xFEA
  6992                           fsr0l	equ	0xFE9
  6993                           wreg	equ	0xFE8
  6994                           fsr1h	equ	0xFE2
  6995                           fsr1l	equ	0xFE1
  6996                           fsr2h	equ	0xFDA
  6997                           fsr2l	equ	0xFD9
  6998                           status	equ	0xFD8
  6999                           tosu	equ	0xFFF
  7000                           tosh	equ	0xFFE
  7001                           tosl	equ	0xFFD
  7002                           pclatu	equ	0xFFB
  7003                           pclath	equ	0xFFA
  7004                           tblptru	equ	0xFF8
  7005                           tblptrh	equ	0xFF7
  7006                           tblptrl	equ	0xFF6
  7007                           tablat	equ	0xFF5
  7008                           prodh	equ	0xFF4
  7009                           prodl	equ	0xFF3
  7010                           intcon	equ	0xFF2
  7011                           fsr0h	equ	0xFEA
  7012                           fsr0l	equ	0xFE9
  7013                           wreg	equ	0xFE8
  7014                           fsr1h	equ	0xFE2
  7015                           fsr1l	equ	0xFE1
  7016                           fsr2h	equ	0xFDA
  7017                           fsr2l	equ	0xFD9
  7018                           status	equ	0xFD8
  7019                           
  7020                           	psect	text31
  7021  000000                     __ptext31:
  7022                           	opt stack 0
  7023                           tosu	equ	0xFFF
  7024                           tosh	equ	0xFFE
  7025                           tosl	equ	0xFFD
  7026                           pclatu	equ	0xFFB
  7027                           pclath	equ	0xFFA
  7028                           tblptru	equ	0xFF8
  7029                           tblptrh	equ	0xFF7
  7030                           tblptrl	equ	0xFF6
  7031                           tablat	equ	0xFF5
  7032                           prodh	equ	0xFF4
  7033                           prodl	equ	0xFF3
  7034                           intcon	equ	0xFF2
  7035                           fsr0h	equ	0xFEA
  7036                           fsr0l	equ	0xFE9
  7037                           wreg	equ	0xFE8
  7038                           fsr1h	equ	0xFE2
  7039                           fsr1l	equ	0xFE1
  7040                           fsr2h	equ	0xFDA
  7041                           fsr2l	equ	0xFD9
  7042                           status	equ	0xFD8
  7043                           
  7044                           	psect	rparam
  7045  0000                     tosu	equ	0xFFF
  7046                           tosh	equ	0xFFE
  7047                           tosl	equ	0xFFD
  7048                           pclatu	equ	0xFFB
  7049                           pclath	equ	0xFFA
  7050                           tblptru	equ	0xFF8
  7051                           tblptrh	equ	0xFF7
  7052                           tblptrl	equ	0xFF6
  7053                           tablat	equ	0xFF5
  7054                           prodh	equ	0xFF4
  7055                           prodl	equ	0xFF3
  7056                           intcon	equ	0xFF2
  7057                           fsr0h	equ	0xFEA
  7058                           fsr0l	equ	0xFE9
  7059                           wreg	equ	0xFE8
  7060                           fsr1h	equ	0xFE2
  7061                           fsr1l	equ	0xFE1
  7062                           fsr2h	equ	0xFDA
  7063                           fsr2l	equ	0xFD9
  7064                           status	equ	0xFD8
  7065                           
  7066                           	psect	temp
  7067  000031                     btemp:
  7068                           	opt stack 0
  7069  000031                     	ds	1
  7070  0000                     int$flags	set	btemp
  7071                           tosu	equ	0xFFF
  7072                           tosh	equ	0xFFE
  7073                           tosl	equ	0xFFD
  7074                           pclatu	equ	0xFFB
  7075                           pclath	equ	0xFFA
  7076                           tblptru	equ	0xFF8
  7077                           tblptrh	equ	0xFF7
  7078                           tblptrl	equ	0xFF6
  7079                           tablat	equ	0xFF5
  7080                           prodh	equ	0xFF4
  7081                           prodl	equ	0xFF3
  7082                           intcon	equ	0xFF2
  7083                           fsr0h	equ	0xFEA
  7084                           fsr0l	equ	0xFE9
  7085                           wreg	equ	0xFE8
  7086                           fsr1h	equ	0xFE2
  7087                           fsr1l	equ	0xFE1
  7088                           fsr2h	equ	0xFDA
  7089                           fsr2l	equ	0xFD9
  7090                           status	equ	0xFD8


Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         4
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[4]), 
		 -> STR_2(CODE[5]), STR_1(CODE[6]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[4]), 
		 -> STR_2(CODE[5]), STR_1(CODE[6]), 

    wr8s@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[4]), 
		 -> STR_2(CODE[5]), STR_1(CODE[6]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_display_labels
    _main->_display_rpm
    _display_start->_cmd
    _display_rpm->_cmd
    _display_labels->_cmd
    _wr8s->_strlen
    _display_gear->_cmd
    _display_end->_cmd
    _cmd->_wr32
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _FT800_Init->_wr16
    _wr8->_SPI_Exchange8bit
    _wr32->_SPI_Exchange8bit
    _wr16->___awdiv
    _rd16->_SPI_Exchange8bit
    _host_command->_SPI_Exchange8bit

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  122373
                                             38 COMRAM     4     4      0
                 _EUSART1_Initialize
                      _EUSART1_Write
                         _FT800_Init
                  _SYSTEM_Initialize
                        _display_end
                       _display_gear
                     _display_labels
                        _display_rpm
                      _display_start
                          _wait2secs
 ---------------------------------------------------------------------------------
 (1) _wait2secs                                            2     2      0       0
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _display_start                                        0     0      0    8034
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _display_rpm                                          5     3      2   30279
                                             33 COMRAM     5     3      2
                            ___awdiv
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _display_labels                                       5     5      0   29732
                                             33 COMRAM     5     5      0
                                _cmd
                     _cmd_incrementn
                               _wr16
                               _wr8s
 ---------------------------------------------------------------------------------
 (2) _wr8s                                                10     5      5    3749
                                             20 COMRAM    10     5      5
                   _SPI_Exchange8bit
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     166
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _display_gear                                         4     2      2    8132
                                             33 COMRAM     4     2      2
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _display_end                                          0     0      0   25791
                                _cmd
                               _wr16
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  7     3      4    8034
                                             26 COMRAM     7     3      4
                     _cmd_incrementn
                               _wr32
 ---------------------------------------------------------------------------------
 (3) _cmd_incrementn                                       3     3      0      15
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _ECAN_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      98
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _FT800_Init                                           1     1      0   20291
                                             30 COMRAM     1     1      0
                       _host_command
                               _rd16
                               _wr16
                               _wr32
                                _wr8
 ---------------------------------------------------------------------------------
 (2) _wr8                                                  7     3      4    1471
                                             15 COMRAM     7     3      4
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _wr32                                                11     4      7     777
                                             15 COMRAM    11     4      7
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _wr16                                                 8     3      5   17757
                                             22 COMRAM     8     3      5
                   _SPI_Exchange8bit
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _rd16                                                 7     4      3     256
                                             15 COMRAM     7     4      3
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _host_command                                         1     1      0      30
                                             15 COMRAM     1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bit                                     1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCB4_ISR                                            0     0      0       0
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _IOCB4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
   _EUSART1_Write
   _FT800_Init
     _host_command
       _SPI_Exchange8bit
     _rd16
       _SPI_Exchange8bit
     _wr16
       _SPI_Exchange8bit
       ___awdiv (ARG)
     _wr32
       _SPI_Exchange8bit
     _wr8
       _SPI_Exchange8bit
   _SYSTEM_Initialize
     _ECAN_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
   _display_end
     _cmd
       _cmd_incrementn
       _wr32
         _SPI_Exchange8bit
     _wr16
       _SPI_Exchange8bit
       ___awdiv (ARG)
   _display_gear
     _cmd
       _cmd_incrementn
       _wr32
         _SPI_Exchange8bit
   _display_labels
     _cmd
       _cmd_incrementn
       _wr32
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
       ___awdiv (ARG)
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_rpm
     ___awdiv
     _cmd
       _cmd_incrementn
       _wr32
         _SPI_Exchange8bit
     _cmd_incrementn
     _wr16
       _SPI_Exchange8bit
       ___awdiv (ARG)
     _wr8s
       _SPI_Exchange8bit
       _strlen
   _display_start
     _cmd
       _cmd_incrementn
       _wr32
         _SPI_Exchange8bit
   _wait2secs

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      30       1       51.1%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30       6        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Oct 01 18:14:00 2017

                           _SPI_Initialize 35E0                                _SSPSTATbits 000FC7  
                             ?_display_end 0001                               ?_display_rpm 0022  
                             ___awdiv@sign 0014                   __size_of_ECAN_Initialize 00E6  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
               ?_IOCB4_SetInterruptHandler 000F                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                               __CFG_CP2$OFF 000000  
                             __CFG_CP3$OFF 000000                     __end_of_display_labels 2912  
                            ?_display_gear 0022                                        l442 35F0  
                                      l384 35D8                               __CFG_CPB$OFF 000000  
                                      u500 32F0                                        u505 32E6  
                             __CFG_CPD$OFF 000000                                        u617 3154  
                                      u627 3174                                        u637 3556  
                                      u647 2D84                                        u657 2D96  
                                      _cmd 34A2                                        _dli 002D  
                                      _wr8 34DA                                        tosl 000FFD  
                                      wreg 000FE8                        __size_of_FT800_Init 028A  
                       __size_of_IOCB4_ISR 0020                                       l1317 300A  
                                     l1337 30DE                                       ?_cmd 001B  
                                     l2411 3436                                       l3045 3148  
                                     l2503 3224                                       l2409 3432  
                                     l2515 324A                                       l2531 327C  
                                     l2605 2FE6                                       l2517 3252  
                                     l2509 3234                                       l2471 31F6  
                                     l2535 328A                                       l2527 3272  
                                     l2519 3256                                       l2465 31C6  
                                     l2475 31FE                                       l2469 31EC  
                                     l2841 2B36                                       l2843 2BB0  
                                     l2835 2950                                       l2845 2C7A  
                                     l2837 29CA                                       l2839 2A94  
                                     l2849 2D44                                       ?_wr8 0010  
                                     STR_1 0F07                                       STR_2 0F1D  
                                     STR_3 0F2F                                       STR_4 0F1D  
                                     STR_5 0F18                                       STR_6 0F13  
                                     STR_7 0F22                                       STR_8 0F0D  
                                     STR_9 0F01                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     _WPUB 000F5B                             ?_display_start 0001  
                            _EUSART1_Write 35EE                                       _rd16 330C  
                                     _wr32 3294                                       _wr16 3466  
                                     _main 30EC                                       _wr8s 3184  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 0031                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0088  
                              main@y_start 0029                              __CFG_IESO$OFF 000000  
                            __CFG_FOSC$HS1 000000                     __end_of_SPI_Initialize 35EE  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                                    ??_cmd 001F                                      ??_wr8 0014  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 35D0  
                                    ?_rd16 0010                             ??_display_gear 0024  
                                    ?_wr16 0017                                      ?_wr32 0010  
                                    ?_main 0001                            __end_of___awdiv 3294  
                                    ?_wr8s 0015                                      STR_10 0F2B  
                                    STR_11 0F27                                      STR_12 0F3A  
                                    STR_20 0F33                                      STR_13 0F3C  
                                    STR_21 0F36                                      STR_14 0F3E  
                                    STR_22 0F39                                      STR_15 0F29  
                                    STR_16 0F40                                      STR_17 0F42  
                                    STR_18 0F44                            ?_display_labels 0001  
                                    STR_19 0F46          __end_of_IOCB4_SetInterruptHandler 3610  
                          ___awdiv@divisor 0011                                      i2l495 004C  
                          ___awdiv@counter 0013                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                            __CFG_WRT0$OFF 000000                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                              __CFG_WRT3$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                           __CFG_EBTRB$OFF 000000                    __end_of_PIN_MANAGER_IOC 3606  
                  __size_of_cmd_incrementn 001C                             ?_EUSART1_Write 0001  
                                    pclath 000FFA                                      wr8s@i 001E  
                                    wr8s@l 001D                                      wr8s@s 0018  
                                    tablat 000FF5                                      status 000FD8  
                          ?_SPI_Initialize 0001            ??_IOCB4_DefaultInterruptHandler 0001  
                          __initialization 3580                               __end_of_rd16 335C  
                             __end_of_wr16 34A2                               __end_of_wr32 330C  
               __end_of_EUSART1_Initialize 35AC                               __end_of_main 3184  
                             __end_of_wr8s 3210                          __end_of_IOCB4_ISR 3530  
              ?_INTERRUPT_InterruptManager 0001                                     ??_rd16 0013  
                                   ??_wr16 001C                                     ??_wr32 0017  
                                   ??_main 0027                                     ??_wr8s 001A  
                            __activetblptr 000002                             __CFG_RETEN$OFF 000000  
                        ??_ECAN_Initialize 000F                   __end_of_SPI_Exchange8bit 35E0  
                                   _CANCON 000F6F                            ??_display_start 0022  
                                   _ANCON0 000F5D                                     _ANCON1 000F5C  
                         ___awdiv@dividend 000F                            __CFG_BBSIZ$BB2K 000000  
                           __CFG_WDTEN$OFF 000000                                     _RCREG1 000FAE  
                                   _RCREG2 000F7A                                     _RCSTA1 000FAB  
                                   _RCSTA2 000FA6                                     _OSCCON 000FD3  
                                   _RXB0D0 000F66                                     _RXB0D1 000F67  
                                   _RXB0D2 000F68                                     _RXB0D3 000F69  
                                   _RXB0D4 000F6A                                     _RXB1D0 000F36  
                                   _RXB0D5 000F6B                                     _RXB1D1 000F37  
                                   _RXB0D6 000F6C                                     _RXB1D2 000F38  
                                   _RXB0D7 000F6D                                     _RXB1D3 000F39  
                                   _RXB1D4 000F3A                                     _RXB1D5 000F3B  
                                   _RXB1D6 000F3C                                     _RXB1D7 000F3D  
                                   _SPBRG1 000FAF                                     _SPBRG2 000F7B  
                                   _TXB0D0 000F26                                     _TXB0D1 000F27  
                                   _TXB0D2 000F28                                     _TXB0D3 000F29  
                                   _TXB0D4 000F2A                                     _TXB1D0 000F16  
                                   _TXB0D5 000F2B                                     _TXB1D1 000F17  
                                   _TXB0D6 000F2C                                     _TXB1D2 000F18  
                                   _TXB0D7 000F2D                                     _TXB1D3 000F19  
                                   _TXB1D4 000F1A                                     _TXB2D0 000F06  
                                   _TXB1D5 000F1B                                     _TXB2D1 000F07  
                                   _TXB1D6 000F1C                                     _TXB2D2 000F08  
                                   _TXB1D7 000F1D                                     _TXB2D3 000F09  
                                   _TXB2D4 000F0A                                     _TXB2D5 000F0B  
                                   _TXB2D6 000F0C                                     _TXB2D7 000F0D  
                                   _SSPADD 000FC8                                     i2u7_48 351C  
                                   _SSPBUF 000FC9                                     _TXREG1 000FAD  
                                   _TXREG2 000F79                                     _TXSTA1 000FAC  
                                   _TXSTA2 000FBA                             __CFG_XINST$OFF 000000  
                             ??_FT800_Init 001F                                  ??___awdiv 0013  
                           __CFG_STVREN$ON 000000                           ___awdiv@quotient 0015  
                     __size_of_display_end 0042                                     _strlen 3428  
                     __size_of_display_rpm 0ECA                      display_labels@y_start 0025  
                             __mediumconst 0000                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                          ??_EUSART1_Write 000F  IOCB4_SetInterruptHandler@InterruptHandler 000F  
                         ?_PIN_MANAGER_IOC 0001                         __end_of_FT800_Init 3006  
                        _SYSTEM_Initialize 35AC                              ?_host_command 0001  
                               __accesstop 0060                    __end_of__initialization 3588  
                     __end_of_display_gear 2D7C                         ?_SYSTEM_Initialize 0001  
                            ___rparam_used 000001                             __pcstackCOMRAM 0001  
                      ??_SYSTEM_Initialize 0011      __end_of_IOCB4_DefaultInterruptHandler 3612  
   __size_of_IOCB4_DefaultInterruptHandler 0002              _IOCB4_DefaultInterruptHandler 3610  
              ??_IOCB4_SetInterruptHandler 0011                            cmd_incrementn@n 0011  
                           _cmd_incrementn 3530                  __end_of_SYSTEM_Initialize 35BE  
                           ??_host_command 0010                            __CFG_PLLCFG$OFF 000000  
                               __pnvCOMRAM 002F                                 _cmd_offset 002B  
                         ??_display_labels 0022                         __size_of_wait2secs 001A  
                                  _ECANCON 000F72                                    _CANSTAT 000F6E  
                                  _BRGCON1 000E43                                    _BRGCON2 000E44  
                                  _BRGCON3 000E45                                    ?_strlen 000F  
                         __CFG_CANMX$PORTB 000000                                    _REFOCON 000F9A  
                   __end_of_cmd_incrementn 354C                                    _OSCCON2 000FD2  
                                  _RXB0DLC 000F65                                    _RXB1DLC 000F35  
                                  _OSCTUNE 000F9B                                    _SPBRGH1 000F7D  
                                  _SPBRGH2 000F7C                                    _TXB0DLC 000F25  
                                  _TXB1DLC 000F15                                    _TXB2DLC 000F05  
                                  _SSPCON1 000FC6                                    _SSPSTAT 000FC7  
                               cmd@command 001B                           ??_SPI_Initialize 000F  
                _IOCB4_SetInterruptHandler 3606                            __CFG_PWRTEN$OFF 000000  
                                  __Hparam 0000                                    __Lparam 0000  
                                  ___awdiv 3210                            _ECAN_Initialize 3006  
                             __psmallconst 0F00                                    __pcinit 3580  
                                  __ramtop 0F00                                    __ptext0 30EC  
                                  __ptext1 354C                                    __ptext2 33EA  
                                  __ptext3 0F4A                                    __ptext4 3210  
                                  __ptext5 1E14                                    __ptext6 3184  
                                  __ptext7 3428                                    __ptext8 2912  
                                  __ptext9 33A8                                  _IOCB4_ISR 3510  
                          __size_of_strlen 003E                      _OSCILLATOR_Initialize 35BE  
                             __size_of_cmd 0038                               __size_of_wr8 0036  
                       _EUSART1_Initialize 3596                   ??_PIN_MANAGER_Initialize 0011  
                          ?_cmd_incrementn 0001                          __CFG_MSSPMSK$MSK7 000000  
                        ?_SPI_Exchange8bit 0001                 __size_of_SYSTEM_Initialize 0012  
                    __size_of_display_gear 046A                       end_of_initialization 3588  
                                  wr8@addr 0010                         ??_SPI_Exchange8bit 000F  
                     SPI_Exchange8bit@data 000F                        ?_EUSART1_Initialize 0001  
                        __end_of_wait2secs 3566                              __Lmediumconst 0000  
                           display_rpm@rpm 0022                       ??_EUSART1_Initialize 000F  
                                  strlen@s 000F                       __end_of_host_command 3580  
                               ?_IOCB4_ISR 0001                               _display_gear 2912  
                      EUSART1_Write@txData 000F                      __end_of_display_start 3428  
                  __end_of_ECAN_Initialize 30EC                              ??_display_end 0022  
                            ??_display_rpm 0024                     ?_OSCILLATOR_Initialize 0001  
                           __end_of_strlen 3466                        start_initialization 3580  
          __size_of_PIN_MANAGER_Initialize 004C                                __end_of_cmd 34DA  
                              __end_of_wr8 3510                      __end_of_EUSART1_Write 35FA  
                 __size_of_PIN_MANAGER_IOC 000C                                   ??_strlen 0011  
                              ??_IOCB4_ISR 0001                        __end_of_display_end 33EA  
                      __end_of_display_rpm 1E14                                __pbssCOMRAM 002B  
                         ?_ECAN_Initialize 0001                     _PIN_MANAGER_Initialize 335C  
                    __size_of_host_command 001A                                  __pintcode 0008  
                                 ?___awdiv 000F                           ??_cmd_incrementn 000F  
             ??_INTERRUPT_InterruptManager 0001                                __smallconst 0F00  
                                 _BAUDCON1 000FA7                                   _BAUDCON2 000FB9  
                              _COMSTATbits 000F71                               _host_command 3566  
                                 _IOCBbits 000F5A                                   _LATAbits 000F89  
                                 _LATCbits 000F8B                                   _LATDbits 000F8C  
                                 _PIE5bits 000F76                                  _wait2secs 354C  
      __size_of_INTERRUPT_InterruptManager 0080                                   _PIR1bits 000F9E  
                                 _PIR3bits 000FA4                                   _PIR5bits 000F77  
                __size_of_SPI_Exchange8bit 0010                                   _RXB0EIDH 000F63  
                                 _RXB0EIDL 000F64                                   _RXB1EIDH 000F33  
                                 _RXB1EIDL 000F34                                   _RCONbits 000FD0  
                                 _RXB0SIDH 000F61                                   _RXB0SIDL 000F62  
                                 _RXB1SIDH 000F31                                   _RXF0EIDH 000EE2  
                                 _RXB1SIDL 000F32                                   _RXF0EIDL 000EE3  
                                 _RXF1EIDH 000EE6                                   _RXF1EIDL 000EE7  
                                 _RXF2EIDH 000EEA                                   _RXF2EIDL 000EEB  
                                 _RXF3EIDH 000EEE                                   _RXF3EIDL 000EEF  
                                 _RXF4EIDH 000EF2                                   _RXF4EIDL 000EF3  
                                 _RXF5EIDH 000EF6                                   _RXF5EIDL 000EF7  
                                 _RXF0SIDH 000EE0                                   _RXF0SIDL 000EE1  
                                 _TXB0EIDH 000F23                                   _RXF1SIDH 000EE4  
                                 _TXB0EIDL 000F24                                   _RXF1SIDL 000EE5  
                                 _TXB1EIDH 000F13                                   _RXF2SIDH 000EE8  
                                 _TXB1EIDL 000F14                                   _RXF2SIDL 000EE9  
                                 _TXB2EIDH 000F03                                   _RXF3SIDH 000EEC  
                                 _TXB2EIDL 000F04                                   _RXF3SIDL 000EED  
                                 _RXF4SIDH 000EF0                                   _RXF4SIDL 000EF1  
                                 _RXF5SIDH 000EF4                                   _RXF5SIDL 000EF5  
                                 _RXM0EIDH 000EFA                                   _RXM0EIDL 000EFB  
                                 _TXB0SIDH 000F21                                   _RXM1EIDH 000EFE  
                                 _TXB0SIDL 000F22                                   _RXM1EIDL 000EFF  
                                 _TXB1SIDH 000F11                                   _TXB1SIDL 000F12  
                                 _TXB2SIDH 000F01                                   _TXB2SIDL 000F02  
                                wr16@value 001A                                  wr32@value 0013  
                                 _RXM0SIDH 000EF8                                   _RXM0SIDL 000EF9  
                                 _RXM1SIDH 000EFC                                   _RXM1SIDL 000EFD  
                        ??_PIN_MANAGER_IOC 0001                                _display_end 33A8  
                              _display_rpm 0F4A                           __CFG_SOSCSEL$DIG 000000  
                  __size_of_display_labels 0AFE                                 ?_wait2secs 0001  
                                 __Hrparam 0000                                 _FT800_Init 2D7C  
                                 __Lrparam 0000                         __CFG_BOREN$SBORDIS 000000  
                  __size_of_SPI_Initialize 000E                    ??_OSCILLATOR_Initialize 000F  
                         __size_of___awdiv 0084                                 _CIOCONbits 000F70  
              __size_of_EUSART1_Initialize 0016                                   rd16@addr 0010  
                                 rd16@temp 0016                     _IOCB4_InterruptHandler 002F  
                         display_gear@gear 0022             ?_IOCB4_DefaultInterruptHandler 0001  
                                 __ptext10 34A2                                   __ptext11 3530  
                                 __ptext20 3294                                   __ptext12 35AC  
                                 __ptext21 3466                                   __ptext13 35E0  
                                 __ptext30 3610                                   __ptext22 330C  
                                 __ptext14 335C                                   __ptext31 0000  
                                 __ptext23 3566                                   __ptext15 3606  
                                 __ptext24 35D0                                   __ptext16 35BE  
                                 __ptext25 35EE                                   __ptext17 3006  
                                 __ptext26 3596                                   __ptext18 2D7C  
                                 __ptext19 34DA                                   __ptext28 35FA  
                                 __ptext29 3510                              __size_of_rd16 0050  
                            __size_of_wr16 003C                              __size_of_wr32 0078  
                            __size_of_main 0098                              __size_of_wr8s 008C  
                                 wr16@addr 0017                                   wr32@addr 0010  
                                 int$flags 0031         __end_of_INTERRUPT_InterruptManager 0088  
               _INTERRUPT_InterruptManager 0008                        __CFG_INTOSCSEL$HIGH 000000  
                   __size_of_display_start 003E                                _RXB0CONbits 000F60  
                              _RXB1CONbits 000F30                                 _INTCONbits 000FF2  
                                 wr8@value 0013                                   wr8s@addr 0015  
                                 intlevel2 0000                    ?_PIN_MANAGER_Initialize 0001  
                              _TXB0CONbits 000F20                                 _RCSTA1bits 000FAB  
                               _RCSTA2bits 000FA6                                _TXB1CONbits 000F10  
                              ??_wait2secs 000F                                _TXB2CONbits 000F00  
                              ?_FT800_Init 0001                           _SPI_Exchange8bit 35D0  
                       __CFG_WDTPS$1048576 000000                        host_command@command 0010  
                   __size_of_EUSART1_Write 000C                             _display_labels 1E14  
                                 strlen@cp 0013                                _SSPCON1bits 000FC6  
           __end_of_PIN_MANAGER_Initialize 33A8                        __CFG_BORPWR$ZPBORMV 000000  
                            _display_start 33EA                            _PIN_MANAGER_IOC 35FA  
