

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Jul 08 00:19:40 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 1.42
    20                           ; Generated 13/04/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F45K80 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _BRGCON3	set	3653
    54  0000                     _BRGCON2	set	3652
    55  0000                     _BRGCON1	set	3651
    56  0000                     _RXF5SIDL	set	3829
    57  0000                     _RXF5SIDH	set	3828
    58  0000                     _RXF5EIDL	set	3831
    59  0000                     _RXF5EIDH	set	3830
    60  0000                     _RXF4SIDL	set	3825
    61  0000                     _RXF4SIDH	set	3824
    62  0000                     _RXF4EIDL	set	3827
    63  0000                     _RXF4EIDH	set	3826
    64  0000                     _RXF3SIDL	set	3821
    65  0000                     _RXF3SIDH	set	3820
    66  0000                     _RXF3EIDL	set	3823
    67  0000                     _RXF3EIDH	set	3822
    68  0000                     _RXF2SIDL	set	3817
    69  0000                     _RXF2SIDH	set	3816
    70  0000                     _RXF2EIDL	set	3819
    71  0000                     _RXF2EIDH	set	3818
    72  0000                     _RXF1SIDL	set	3813
    73  0000                     _RXF1SIDH	set	3812
    74  0000                     _RXF1EIDL	set	3815
    75  0000                     _RXF1EIDH	set	3814
    76  0000                     _RXF0SIDL	set	3809
    77  0000                     _RXF0SIDH	set	3808
    78  0000                     _RXF0EIDL	set	3811
    79  0000                     _RXF0EIDH	set	3810
    80  0000                     _RXM1SIDL	set	3837
    81  0000                     _RXM1SIDH	set	3836
    82  0000                     _RXM1EIDL	set	3839
    83  0000                     _RXM1EIDH	set	3838
    84  0000                     _RXM0SIDL	set	3833
    85  0000                     _RXM0SIDH	set	3832
    86  0000                     _RXM0EIDL	set	3835
    87  0000                     _RXM0EIDH	set	3834
    88  0000                     _ANCON0bits	set	3933
    89  0000                     _WPUB	set	3931
    90  0000                     _ANCON1	set	3932
    91  0000                     _ANCON0	set	3933
    92  0000                     _RXB1D7	set	3901
    93  0000                     _RXB1D6	set	3900
    94  0000                     _RXB1D5	set	3899
    95  0000                     _RXB1D4	set	3898
    96  0000                     _RXB1D3	set	3897
    97  0000                     _RXB1D2	set	3896
    98  0000                     _RXB1D1	set	3895
    99  0000                     _RXB1D0	set	3894
   100  0000                     _RXB1DLC	set	3893
   101  0000                     _RXB1SIDH	set	3889
   102  0000                     _RXB1EIDL	set	3892
   103  0000                     _RXB1EIDH	set	3891
   104  0000                     _RXB1SIDL	set	3890
   105  0000                     _RXB1CONbits	set	3888
   106  0000                     _TXB2D7	set	3853
   107  0000                     _TXB2D6	set	3852
   108  0000                     _TXB2D5	set	3851
   109  0000                     _TXB2D4	set	3850
   110  0000                     _TXB2D3	set	3849
   111  0000                     _TXB2D2	set	3848
   112  0000                     _TXB2D1	set	3847
   113  0000                     _TXB2D0	set	3846
   114  0000                     _TXB2DLC	set	3845
   115  0000                     _TXB2SIDL	set	3842
   116  0000                     _TXB2SIDH	set	3841
   117  0000                     _TXB2EIDL	set	3844
   118  0000                     _TXB2EIDH	set	3843
   119  0000                     _TXB2CONbits	set	3840
   120  0000                     _TXB1D7	set	3869
   121  0000                     _TXB1D6	set	3868
   122  0000                     _TXB1D5	set	3867
   123  0000                     _TXB1D4	set	3866
   124  0000                     _TXB1D3	set	3865
   125  0000                     _TXB1D2	set	3864
   126  0000                     _TXB1D1	set	3863
   127  0000                     _TXB1D0	set	3862
   128  0000                     _TXB1DLC	set	3861
   129  0000                     _TXB1SIDL	set	3858
   130  0000                     _TXB1SIDH	set	3857
   131  0000                     _TXB1EIDL	set	3860
   132  0000                     _TXB1EIDH	set	3859
   133  0000                     _TXB1CONbits	set	3856
   134  0000                     _TXB0D7	set	3885
   135  0000                     _TXB0D6	set	3884
   136  0000                     _TXB0D5	set	3883
   137  0000                     _TXB0D4	set	3882
   138  0000                     _TXB0D3	set	3881
   139  0000                     _TXB0D2	set	3880
   140  0000                     _TXB0D1	set	3879
   141  0000                     _TXB0D0	set	3878
   142  0000                     _TXB0DLC	set	3877
   143  0000                     _TXB0SIDL	set	3874
   144  0000                     _TXB0SIDH	set	3873
   145  0000                     _TXB0EIDL	set	3876
   146  0000                     _TXB0EIDH	set	3875
   147  0000                     _TXB0CONbits	set	3872
   148  0000                     _ADCON0bits	set	4034
   149  0000                     _ADRESL	set	4035
   150  0000                     _ADRESH	set	4036
   151  0000                     _ADCON2	set	4032
   152  0000                     _ADCON1	set	4033
   153  0000                     _ADCON0	set	4034
   154  0000                     _LATDbits	set	3980
   155  0000                     _TRISDbits	set	3989
   156  0000                     _LATCbits	set	3979
   157  0000                     _TRISCbits	set	3988
   158  0000                     _CIOCONbits	set	3952
   159  0000                     _TRISD	set	3989
   160  0000                     _TRISC	set	3988
   161  0000                     _TRISB	set	3987
   162  0000                     _TRISA	set	3986
   163  0000                     _TRISE	set	3990
   164  0000                     _LATC	set	3979
   165  0000                     _LATB	set	3978
   166  0000                     _LATA	set	3977
   167  0000                     _LATD	set	3980
   168  0000                     _LATE	set	3981
   169  0000                     _COMSTATbits	set	3953
   170  0000                     _RXB0D7	set	3949
   171  0000                     _RXB0D6	set	3948
   172  0000                     _RXB0D5	set	3947
   173  0000                     _RXB0D4	set	3946
   174  0000                     _RXB0D3	set	3945
   175  0000                     _RXB0D2	set	3944
   176  0000                     _RXB0D1	set	3943
   177  0000                     _RXB0D0	set	3942
   178  0000                     _RXB0DLC	set	3941
   179  0000                     _RXB0SIDH	set	3937
   180  0000                     _RXB0EIDL	set	3940
   181  0000                     _RXB0EIDH	set	3939
   182  0000                     _RXB0SIDL	set	3938
   183  0000                     _RXB0CONbits	set	3936
   184  0000                     _PIE5bits	set	3958
   185  0000                     _PIR5bits	set	3959
   186  0000                     _ECANCON	set	3954
   187  0000                     _CANSTAT	set	3950
   188  0000                     _CANCON	set	3951
   189  0000                     _REFOCON	set	3994
   190  0000                     _OSCTUNE	set	3995
   191  0000                     _OSCCON2	set	4050
   192  0000                     _OSCCON	set	4051
   193                           
   194                           ; #config settings
   195  0000                     
   196                           	psect	cinit
   197  007924                     __pcinit:
   198                           	opt stack 0
   199  007924                     start_initialization:
   200                           	opt stack 0
   201  007924                     __initialization:
   202                           	opt stack 0
   203  007924                     end_of_initialization:
   204                           	opt stack 0
   205  007924                     __end_of__initialization:
   206                           	opt stack 0
   207  007924  0100               	movlb	0
   208  007926  EFE6  F03C         	goto	_main	;jump to C main() function
   209                           
   210                           	psect	cstackCOMRAM
   211  000001                     __pcstackCOMRAM:
   212                           	opt stack 0
   213  000001                     ??_ECAN_Initialize:
   214  000001                     ?_ADC_GetConversion:
   215                           	opt stack 0
   216  000001                     convertCANid2Reg@tempPassedInID:
   217                           	opt stack 0
   218                           
   219                           ; 4 bytes @ 0x0
   220  000001                     	ds	1
   221  000002                     
   222                           ; 1 bytes @ 0x1
   223  000002                     	ds	1
   224  000003                     ??_ADC_GetConversion:
   225                           
   226                           ; 1 bytes @ 0x2
   227  000003                     	ds	2
   228  000005                     convertCANid2Reg@canIdType:
   229                           	opt stack 0
   230  000005                     ADC_GetConversion@channel:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x4
   234  000005                     	ds	1
   235  000006                     convertCANid2Reg@passedInEIDH:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x5
   239  000006                     	ds	2
   240  000008                     convertCANid2Reg@passedInEIDL:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x7
   244  000008                     	ds	2
   245  00000A                     convertCANid2Reg@passedInSIDH:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x9
   249  00000A                     	ds	2
   250  00000C                     convertCANid2Reg@passedInSIDL:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0xB
   254  00000C                     	ds	2
   255  00000E                     ??_convertCANid2Reg:
   256                           
   257                           ; 1 bytes @ 0xD
   258  00000E                     	ds	4
   259  000012                     convertCANid2Reg@wipSIDL:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x11
   263  000012                     	ds	1
   264  000013                     CAN_transmit@tempCanMsg:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x12
   268  000013                     	ds	2
   269  000015                     CAN_transmit@returnValue:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0x14
   273  000015                     	ds	1
   274  000016                     CAN_transmit@tempEIDH:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x15
   278  000016                     	ds	1
   279  000017                     CAN_transmit@tempEIDL:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0x16
   283  000017                     	ds	1
   284  000018                     CAN_transmit@tempSIDH:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0x17
   288  000018                     	ds	1
   289  000019                     CAN_transmit@tempSIDL:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0x18
   293  000019                     	ds	1
   294  00001A                     main@data:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x19
   298  00001A                     	ds	2
   299  00001C                     main@test:
   300                           	opt stack 0
   301                           
   302                           ; 14 bytes @ 0x1B
   303  00001C                     	ds	14
   304                           
   305 ;;
   306 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   307 ;;
   308 ;; *************** function _main *****************
   309 ;; Defined at:
   310 ;;		line 51 in file "main.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  test           14   27[COMRAM] struct .
   315 ;;  data            2   25[COMRAM] unsigned int 
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   326 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   328 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   329 ;;Total ram usage:       16 bytes
   330 ;; Hardware stack levels required when called:    2
   331 ;; This function calls:
   332 ;;		_ADC_GetConversion
   333 ;;		_CAN_transmit
   334 ;;		_SYSTEM_Initialize
   335 ;; This function is called by:
   336 ;;		Startup code after reset
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	text0
   341  0079CC                     __ptext0:
   342                           	opt stack 0
   343  0079CC                     _main:
   344                           	opt stack 29
   345                           
   346                           ;main.c: 54: SYSTEM_Initialize();
   347                           
   348                           ;incstack = 0
   349  0079CC  EC9E  F03C         	call	_SYSTEM_Initialize	;wreg free
   350                           
   351                           ;main.c: 55: CIOCONbits.CLKSEL = 1;
   352  0079D0  8070               	bsf	3952,0,c	;volatile
   353                           
   354                           ;main.c: 56: CIOCONbits.ENDRHI = 1;
   355  0079D2  8A70               	bsf	3952,5,c	;volatile
   356                           
   357                           ;main.c: 57: CIOCONbits.TX2SRC = 0;
   358  0079D4  9E70               	bcf	3952,7,c	;volatile
   359                           
   360                           ;main.c: 58: CIOCONbits.TX2EN = 1;
   361  0079D6  8C70               	bsf	3952,6,c	;volatile
   362                           
   363                           ;main.c: 60: do { TRISCbits.TRISC0 = 0; } while(0);
   364  0079D8  9094               	bcf	3988,0,c	;volatile
   365                           
   366                           ;main.c: 61: do { LATCbits.LATC0 = 0; } while(0);
   367  0079DA  908B               	bcf	3979,0,c	;volatile
   368                           
   369                           ;main.c: 63: do { TRISDbits.TRISD0 = 0; } while(0);
   370  0079DC  9095               	bcf	3989,0,c	;volatile
   371                           
   372                           ;main.c: 64: do { LATDbits.LATD0 = 0; } while(0);
   373  0079DE  908C               	bcf	3980,0,c	;volatile
   374                           
   375                           ;main.c: 66: do { ANCON0bits.ANSEL0 = 1; } while(0);
   376  0079E0  010F               	movlb	15	; () banked
   377  0079E2  815D               	bsf	93,0,b	;volatile
   378  0079E4                     l376:
   379                           
   380                           ;main.c: 70: {
   381                           ;main.c: 71: uint16_t data = ADC_GetConversion(analog_1);
   382  0079E4  0E00               	movlw	0
   383  0079E6  ECB2  F03C         	call	_ADC_GetConversion
   384  0079EA  C001  F01A         	movff	?_ADC_GetConversion,main@data
   385  0079EE  C002  F01B         	movff	?_ADC_GetConversion+1,main@data+1
   386                           
   387                           ;main.c: 73: uCAN_MSG test;
   388                           ;main.c: 74: test.frame.idType=1;
   389  0079F2  0E01               	movlw	1
   390  0079F4  6E1C               	movwf	main@test,c
   391                           
   392                           ;main.c: 75: test.frame.id=0x120;
   393  0079F6  0E20               	movlw	32
   394  0079F8  6E1D               	movwf	main@test+1,c
   395  0079FA  0E01               	movlw	1
   396  0079FC  6E1E               	movwf	main@test+2,c
   397  0079FE  0E00               	movlw	0
   398  007A00  6E1F               	movwf	main@test+3,c
   399  007A02  0E00               	movlw	0
   400  007A04  6E20               	movwf	main@test+4,c
   401                           
   402                           ;main.c: 76: test.frame.dlc=8;
   403  007A06  0E08               	movlw	8
   404  007A08  6E21               	movwf	main@test+5,c
   405                           
   406                           ;main.c: 77: test.frame.data0= (data >> 8);
   407  007A0A  501B               	movf	main@data+1,w,c
   408  007A0C  6E22               	movwf	main@test+6,c
   409                           
   410                           ;main.c: 78: test.frame.data1= (data & 0xFF);
   411  007A0E  C01A  F023         	movff	main@data,main@test+7
   412                           
   413                           ;main.c: 79: test.frame.data2=0xDC;
   414  007A12  0EDC               	movlw	220
   415  007A14  6E24               	movwf	main@test+8,c
   416                           
   417                           ;main.c: 80: test.frame.data3=0xCB;
   418  007A16  0ECB               	movlw	203
   419  007A18  6E25               	movwf	main@test+9,c
   420                           
   421                           ;main.c: 81: test.frame.data4=0xBC;
   422  007A1A  0EBC               	movlw	188
   423  007A1C  6E26               	movwf	main@test+10,c
   424                           
   425                           ;main.c: 82: test.frame.data5=0xCD;
   426  007A1E  0ECD               	movlw	205
   427  007A20  6E27               	movwf	main@test+11,c
   428                           
   429                           ;main.c: 83: test.frame.data6=0xDE;
   430  007A22  0EDE               	movlw	222
   431  007A24  6E28               	movwf	main@test+12,c
   432                           
   433                           ;main.c: 84: test.frame.data7=0xFF;
   434  007A26  6829               	setf	main@test+13,c
   435                           
   436                           ;main.c: 86: CAN_transmit(&test);
   437  007A28  0E1C               	movlw	low main@test
   438  007A2A  6E13               	movwf	CAN_transmit@tempCanMsg,c
   439  007A2C  0E00               	movlw	high main@test
   440  007A2E  6E14               	movwf	CAN_transmit@tempCanMsg+1,c
   441  007A30  EC61  F03E         	call	_CAN_transmit	;wreg free
   442  007A34  D7D7               	goto	l376
   443  007A36                     __end_of_main:
   444                           	opt stack 0
   445                           
   446 ;; *************** function _SYSTEM_Initialize *****************
   447 ;; Defined at:
   448 ;;		line 111 in file "mcc_generated_files/mcc.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, status,2, status,0, cstack
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels used:    1
   468 ;; Hardware stack levels required when called:    1
   469 ;; This function calls:
   470 ;;		_ADC_Initialize
   471 ;;		_ECAN_Initialize
   472 ;;		_OSCILLATOR_Initialize
   473 ;;		_PIN_MANAGER_Initialize
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text1
   480  00793C                     __ptext1:
   481                           	opt stack 0
   482  00793C                     _SYSTEM_Initialize:
   483                           	opt stack 29
   484                           
   485                           ;mcc.c: 114: PIN_MANAGER_Initialize();
   486                           
   487                           ;incstack = 0
   488  00793C  ECCA  F03C         	call	_PIN_MANAGER_Initialize	;wreg free
   489                           
   490                           ;mcc.c: 115: OSCILLATOR_Initialize();
   491  007940  EC95  F03C         	call	_OSCILLATOR_Initialize	;wreg free
   492                           
   493                           ;mcc.c: 116: ADC_Initialize();
   494  007944  ECA7  F03C         	call	_ADC_Initialize	;wreg free
   495                           
   496                           ;mcc.c: 117: ECAN_Initialize();
   497  007948  EC1B  F03D         	call	_ECAN_Initialize	;wreg free
   498  00794C  0012               	return		;funcret
   499  00794E                     __end_of_SYSTEM_Initialize:
   500                           	opt stack 0
   501                           
   502 ;; *************** function _PIN_MANAGER_Initialize *****************
   503 ;; Defined at:
   504 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_SYSTEM_Initialize
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text2
   532  007994                     __ptext2:
   533                           	opt stack 0
   534  007994                     _PIN_MANAGER_Initialize:
   535                           	opt stack 29
   536                           
   537                           ;pin_manager.c: 56: LATE = 0x00;
   538                           
   539                           ;incstack = 0
   540  007994  0E00               	movlw	0
   541  007996  6E8D               	movwf	3981,c	;volatile
   542                           
   543                           ;pin_manager.c: 57: LATD = 0x00;
   544  007998  0E00               	movlw	0
   545  00799A  6E8C               	movwf	3980,c	;volatile
   546                           
   547                           ;pin_manager.c: 58: LATA = 0x00;
   548  00799C  0E00               	movlw	0
   549  00799E  6E89               	movwf	3977,c	;volatile
   550                           
   551                           ;pin_manager.c: 59: LATB = 0x00;
   552  0079A0  0E00               	movlw	0
   553  0079A2  6E8A               	movwf	3978,c	;volatile
   554                           
   555                           ;pin_manager.c: 60: LATC = 0x01;
   556  0079A4  0E01               	movlw	1
   557  0079A6  6E8B               	movwf	3979,c	;volatile
   558                           
   559                           ;pin_manager.c: 65: TRISE = 0x07;
   560  0079A8  0E07               	movlw	7
   561  0079AA  6E96               	movwf	3990,c	;volatile
   562                           
   563                           ;pin_manager.c: 66: TRISA = 0xEF;
   564  0079AC  0EEF               	movlw	239
   565  0079AE  6E92               	movwf	3986,c	;volatile
   566                           
   567                           ;pin_manager.c: 67: TRISB = 0xFB;
   568  0079B0  0EFB               	movlw	251
   569  0079B2  6E93               	movwf	3987,c	;volatile
   570                           
   571                           ;pin_manager.c: 68: TRISC = 0xFE;
   572  0079B4  0EFE               	movlw	254
   573  0079B6  6E94               	movwf	3988,c	;volatile
   574                           
   575                           ;pin_manager.c: 69: TRISD = 0xFE;
   576  0079B8  0EFE               	movlw	254
   577  0079BA  6E95               	movwf	3989,c	;volatile
   578                           
   579                           ;pin_manager.c: 74: ANCON0 = 0xFF;
   580  0079BC  010F               	movlb	15	; () banked
   581  0079BE  695D               	setf	93,b	;volatile
   582                           
   583                           ;pin_manager.c: 75: ANCON1 = 0x77;
   584  0079C0  0E77               	movlw	119
   585  0079C2  010F               	movlb	15	; () banked
   586  0079C4  6F5C               	movwf	92,b	;volatile
   587                           
   588                           ; BSR set to: 15
   589                           ;pin_manager.c: 80: WPUB = 0xFF;
   590  0079C6  010F               	movlb	15	; () banked
   591  0079C8  695B               	setf	91,b	;volatile
   592                           
   593                           ; BSR set to: 15
   594  0079CA  0012               	return		;funcret
   595  0079CC                     __end_of_PIN_MANAGER_Initialize:
   596                           	opt stack 0
   597                           
   598 ;; *************** function _OSCILLATOR_Initialize *****************
   599 ;; Defined at:
   600 ;;		line 120 in file "mcc_generated_files/mcc.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_SYSTEM_Initialize
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text3
   628  00792A                     __ptext3:
   629                           	opt stack 0
   630  00792A                     _OSCILLATOR_Initialize:
   631                           	opt stack 29
   632                           
   633                           ;mcc.c: 123: OSCCON = 0x60;
   634                           
   635                           ; BSR set to: 15
   636                           ;incstack = 0
   637  00792A  0E60               	movlw	96
   638  00792C  6ED3               	movwf	4051,c	;volatile
   639                           
   640                           ;mcc.c: 125: OSCCON2 = 0x00;
   641  00792E  0E00               	movlw	0
   642  007930  6ED2               	movwf	4050,c	;volatile
   643                           
   644                           ;mcc.c: 127: OSCTUNE = 0x00;
   645  007932  0E00               	movlw	0
   646  007934  6E9B               	movwf	3995,c	;volatile
   647                           
   648                           ;mcc.c: 129: REFOCON = 0x00;
   649  007936  0E00               	movlw	0
   650  007938  6E9A               	movwf	3994,c	;volatile
   651  00793A  0012               	return		;funcret
   652  00793C                     __end_of_OSCILLATOR_Initialize:
   653                           	opt stack 0
   654                           
   655 ;; *************** function _ECAN_Initialize *****************
   656 ;; Defined at:
   657 ;;		line 63 in file "mcc_generated_files/ecan.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   675 ;;Total ram usage:        1 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		_SYSTEM_Initialize
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           	psect	text4
   685  007A36                     __ptext4:
   686                           	opt stack 0
   687  007A36                     _ECAN_Initialize:
   688                           	opt stack 29
   689                           
   690                           ;ecan.c: 65: CANCON = 0x80;
   691                           
   692                           ;incstack = 0
   693  007A36  0E80               	movlw	128
   694  007A38  6E6F               	movwf	3951,c	;volatile
   695  007A3A                     l1043:
   696  007A3A  506E               	movf	3950,w,c	;volatile
   697  007A3C  0BE0               	andlw	224
   698  007A3E  0A80               	xorlw	128
   699  007A40  A4D8               	btfss	status,2,c
   700  007A42  D7FB               	goto	l1043
   701                           
   702                           ;ecan.c: 71: ECANCON = 0x00;
   703  007A44  0E00               	movlw	0
   704  007A46  6E72               	movwf	3954,c	;volatile
   705                           
   706                           ;ecan.c: 88: RXM0EIDH = 0x00;
   707  007A48  0E00               	movlw	0
   708  007A4A  010E               	movlb	14	; () banked
   709  007A4C  6FFA               	movwf	250,b	;volatile
   710                           
   711                           ;ecan.c: 89: RXM0EIDL = 0x00;
   712  007A4E  0E00               	movlw	0
   713  007A50  010E               	movlb	14	; () banked
   714  007A52  6FFB               	movwf	251,b	;volatile
   715                           
   716                           ;ecan.c: 90: RXM0SIDH = 0x00;
   717  007A54  0E00               	movlw	0
   718  007A56  010E               	movlb	14	; () banked
   719  007A58  6FF8               	movwf	248,b	;volatile
   720                           
   721                           ;ecan.c: 91: RXM0SIDL = 0x00;
   722  007A5A  0E00               	movlw	0
   723  007A5C  010E               	movlb	14	; () banked
   724  007A5E  6FF9               	movwf	249,b	;volatile
   725                           
   726                           ; BSR set to: 14
   727                           ;ecan.c: 93: RXM1EIDH = 0xFF;
   728  007A60  010E               	movlb	14	; () banked
   729  007A62  69FE               	setf	254,b	;volatile
   730                           
   731                           ; BSR set to: 14
   732                           ;ecan.c: 94: RXM1EIDL = 0xFF;
   733  007A64  010E               	movlb	14	; () banked
   734  007A66  69FF               	setf	255,b	;volatile
   735                           
   736                           ; BSR set to: 14
   737                           ;ecan.c: 95: RXM1SIDH = 0xFF;
   738  007A68  010E               	movlb	14	; () banked
   739  007A6A  69FC               	setf	252,b	;volatile
   740                           
   741                           ; BSR set to: 14
   742                           ;ecan.c: 96: RXM1SIDL = 0xFF;
   743  007A6C  010E               	movlb	14	; () banked
   744  007A6E  69FD               	setf	253,b	;volatile
   745                           
   746                           ;ecan.c: 102: RXF0EIDH = 0x00;
   747  007A70  0E00               	movlw	0
   748  007A72  010E               	movlb	14	; () banked
   749  007A74  6FE2               	movwf	226,b	;volatile
   750                           
   751                           ;ecan.c: 103: RXF0EIDL = 0x00;
   752  007A76  0E00               	movlw	0
   753  007A78  010E               	movlb	14	; () banked
   754  007A7A  6FE3               	movwf	227,b	;volatile
   755                           
   756                           ;ecan.c: 104: RXF0SIDH = 0x88;
   757  007A7C  0E88               	movlw	136
   758  007A7E  010E               	movlb	14	; () banked
   759  007A80  6FE0               	movwf	224,b	;volatile
   760                           
   761                           ;ecan.c: 105: RXF0SIDL = 0x80;
   762  007A82  0E80               	movlw	128
   763  007A84  010E               	movlb	14	; () banked
   764  007A86  6FE1               	movwf	225,b	;volatile
   765                           
   766                           ;ecan.c: 107: RXF1EIDH = 0x00;
   767  007A88  0E00               	movlw	0
   768  007A8A  010E               	movlb	14	; () banked
   769  007A8C  6FE6               	movwf	230,b	;volatile
   770                           
   771                           ;ecan.c: 108: RXF1EIDL = 0x00;
   772  007A8E  0E00               	movlw	0
   773  007A90  010E               	movlb	14	; () banked
   774  007A92  6FE7               	movwf	231,b	;volatile
   775                           
   776                           ;ecan.c: 109: RXF1SIDH = 0xCC;
   777  007A94  0ECC               	movlw	204
   778  007A96  010E               	movlb	14	; () banked
   779  007A98  6FE4               	movwf	228,b	;volatile
   780                           
   781                           ;ecan.c: 110: RXF1SIDL = 0xC0;
   782  007A9A  0EC0               	movlw	192
   783  007A9C  010E               	movlb	14	; () banked
   784  007A9E  6FE5               	movwf	229,b	;volatile
   785                           
   786                           ;ecan.c: 112: RXF2EIDH = 0x00;
   787  007AA0  0E00               	movlw	0
   788  007AA2  010E               	movlb	14	; () banked
   789  007AA4  6FEA               	movwf	234,b	;volatile
   790                           
   791                           ;ecan.c: 113: RXF2EIDL = 0x00;
   792  007AA6  0E00               	movlw	0
   793  007AA8  010E               	movlb	14	; () banked
   794  007AAA  6FEB               	movwf	235,b	;volatile
   795                           
   796                           ;ecan.c: 114: RXF2SIDH = 0x00;
   797  007AAC  0E00               	movlw	0
   798  007AAE  010E               	movlb	14	; () banked
   799  007AB0  6FE8               	movwf	232,b	;volatile
   800                           
   801                           ;ecan.c: 115: RXF2SIDL = 0x00;
   802  007AB2  0E00               	movlw	0
   803  007AB4  010E               	movlb	14	; () banked
   804  007AB6  6FE9               	movwf	233,b	;volatile
   805                           
   806                           ;ecan.c: 117: RXF3EIDH = 0x00;
   807  007AB8  0E00               	movlw	0
   808  007ABA  010E               	movlb	14	; () banked
   809  007ABC  6FEE               	movwf	238,b	;volatile
   810                           
   811                           ;ecan.c: 118: RXF3EIDL = 0x00;
   812  007ABE  0E00               	movlw	0
   813  007AC0  010E               	movlb	14	; () banked
   814  007AC2  6FEF               	movwf	239,b	;volatile
   815                           
   816                           ;ecan.c: 119: RXF3SIDH = 0x00;
   817  007AC4  0E00               	movlw	0
   818  007AC6  010E               	movlb	14	; () banked
   819  007AC8  6FEC               	movwf	236,b	;volatile
   820                           
   821                           ;ecan.c: 120: RXF3SIDL = 0x00;
   822  007ACA  0E00               	movlw	0
   823  007ACC  010E               	movlb	14	; () banked
   824  007ACE  6FED               	movwf	237,b	;volatile
   825                           
   826                           ;ecan.c: 122: RXF4EIDH = 0x00;
   827  007AD0  0E00               	movlw	0
   828  007AD2  010E               	movlb	14	; () banked
   829  007AD4  6FF2               	movwf	242,b	;volatile
   830                           
   831                           ;ecan.c: 123: RXF4EIDL = 0x00;
   832  007AD6  0E00               	movlw	0
   833  007AD8  010E               	movlb	14	; () banked
   834  007ADA  6FF3               	movwf	243,b	;volatile
   835                           
   836                           ;ecan.c: 124: RXF4SIDH = 0x00;
   837  007ADC  0E00               	movlw	0
   838  007ADE  010E               	movlb	14	; () banked
   839  007AE0  6FF0               	movwf	240,b	;volatile
   840                           
   841                           ;ecan.c: 125: RXF4SIDL = 0x00;
   842  007AE2  0E00               	movlw	0
   843  007AE4  010E               	movlb	14	; () banked
   844  007AE6  6FF1               	movwf	241,b	;volatile
   845                           
   846                           ;ecan.c: 127: RXF5EIDH = 0x00;
   847  007AE8  0E00               	movlw	0
   848  007AEA  010E               	movlb	14	; () banked
   849  007AEC  6FF6               	movwf	246,b	;volatile
   850                           
   851                           ;ecan.c: 128: RXF5EIDL = 0x00;
   852  007AEE  0E00               	movlw	0
   853  007AF0  010E               	movlb	14	; () banked
   854  007AF2  6FF7               	movwf	247,b	;volatile
   855                           
   856                           ;ecan.c: 129: RXF5SIDH = 0x00;
   857  007AF4  0E00               	movlw	0
   858  007AF6  010E               	movlb	14	; () banked
   859  007AF8  6FF4               	movwf	244,b	;volatile
   860                           
   861                           ;ecan.c: 130: RXF5SIDL = 0x00;
   862  007AFA  0E00               	movlw	0
   863  007AFC  010E               	movlb	14	; () banked
   864  007AFE  6FF5               	movwf	245,b	;volatile
   865                           
   866                           ;ecan.c: 145: BRGCON1 = 0x00;
   867  007B00  0E00               	movlw	0
   868  007B02  010E               	movlb	14	; () banked
   869  007B04  6F43               	movwf	67,b	;volatile
   870                           
   871                           ;ecan.c: 146: BRGCON2 = 0x98;
   872  007B06  0E98               	movlw	152
   873  007B08  010E               	movlb	14	; () banked
   874  007B0A  6F44               	movwf	68,b	;volatile
   875                           
   876                           ;ecan.c: 147: BRGCON3 = 0x01;
   877  007B0C  0E01               	movlw	1
   878  007B0E  010E               	movlb	14	; () banked
   879  007B10  6F45               	movwf	69,b	;volatile
   880                           
   881                           ;ecan.c: 149: CANCON = 0x00;
   882  007B12  0E00               	movlw	0
   883  007B14  6E6F               	movwf	3951,c	;volatile
   884  007B16                     l1055:
   885  007B16  CF6E F001          	movff	3950,??_ECAN_Initialize	;volatile
   886  007B1A  0EE0               	movlw	224
   887  007B1C  1601               	andwf	??_ECAN_Initialize,f,c
   888  007B1E  B4D8               	btfsc	status,2,c
   889  007B20  0012               	return	
   890  007B22  D7F9               	goto	l1055
   891  007B24                     __end_of_ECAN_Initialize:
   892                           	opt stack 0
   893                           status	equ	0xFD8
   894                           
   895 ;; *************** function _ADC_Initialize *****************
   896 ;; Defined at:
   897 ;;		line 58 in file "mcc_generated_files/adc.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_SYSTEM_Initialize
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text5
   925  00794E                     __ptext5:
   926                           	opt stack 0
   927  00794E                     _ADC_Initialize:
   928                           	opt stack 29
   929                           
   930                           ;adc.c: 63: ADCON0 = 0x01;
   931                           
   932                           ;incstack = 0
   933  00794E  0E01               	movlw	1
   934  007950  6EC2               	movwf	4034,c	;volatile
   935                           
   936                           ;adc.c: 66: ADCON1 = 0x80;
   937  007952  0E80               	movlw	128
   938  007954  6EC1               	movwf	4033,c	;volatile
   939                           
   940                           ;adc.c: 69: ADCON2 = 0xBD;
   941  007956  0EBD               	movlw	189
   942  007958  6EC0               	movwf	4032,c	;volatile
   943                           
   944                           ;adc.c: 72: ADRESH = 0x00;
   945  00795A  0E00               	movlw	0
   946  00795C  6EC4               	movwf	4036,c	;volatile
   947                           
   948                           ;adc.c: 75: ADRESL = 0x00;
   949  00795E  0E00               	movlw	0
   950  007960  6EC3               	movwf	4035,c	;volatile
   951  007962  0012               	return		;funcret
   952  007964                     __end_of_ADC_Initialize:
   953                           	opt stack 0
   954                           status	equ	0xFD8
   955                           
   956 ;; *************** function _CAN_transmit *****************
   957 ;; Defined at:
   958 ;;		line 167 in file "mcc_generated_files/ecan.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  tempCanMsg      2   18[COMRAM] PTR struct .
   961 ;;		 -> main@test(14), 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  tempSIDL        1   24[COMRAM] unsigned char 
   964 ;;  tempSIDH        1   23[COMRAM] unsigned char 
   965 ;;  tempEIDL        1   22[COMRAM] unsigned char 
   966 ;;  tempEIDH        1   21[COMRAM] unsigned char 
   967 ;;  returnValue     1   20[COMRAM] unsigned char 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      unsigned char 
   970 ;; Registers used:
   971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   978 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   980 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   981 ;;Total ram usage:        7 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    1
   984 ;; This function calls:
   985 ;;		_convertCANid2Reg
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text6
   992  007CC2                     __ptext6:
   993                           	opt stack 0
   994  007CC2                     _CAN_transmit:
   995                           	opt stack 29
   996                           
   997                           ;ecan.c: 168: unsigned char tempEIDH = 0;
   998                           
   999                           ;incstack = 0
  1000  007CC2  0E00               	movlw	0
  1001  007CC4  6E16               	movwf	CAN_transmit@tempEIDH,c
  1002                           
  1003                           ;ecan.c: 169: unsigned char tempEIDL = 0;
  1004  007CC6  0E00               	movlw	0
  1005  007CC8  6E17               	movwf	CAN_transmit@tempEIDL,c
  1006                           
  1007                           ;ecan.c: 170: unsigned char tempSIDH = 0;
  1008  007CCA  0E00               	movlw	0
  1009  007CCC  6E18               	movwf	CAN_transmit@tempSIDH,c
  1010                           
  1011                           ;ecan.c: 171: unsigned char tempSIDL = 0;
  1012  007CCE  0E00               	movlw	0
  1013  007CD0  6E19               	movwf	CAN_transmit@tempSIDL,c
  1014                           
  1015                           ;ecan.c: 173: unsigned char returnValue = 0;
  1016  007CD2  0E00               	movlw	0
  1017  007CD4  6E15               	movwf	CAN_transmit@returnValue,c
  1018                           
  1019                           ;ecan.c: 175: if (TXB0CONbits.TXREQ != 1) {
  1020  007CD6  010F               	movlb	15	; () banked
  1021  007CD8  B720               	btfsc	32,3,b	;volatile
  1022  007CDA  D084               	goto	l268
  1023                           
  1024                           ; BSR set to: 15
  1025                           ;ecan.c: 177: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  1026  007CDC  EE20 F001          	lfsr	2,1
  1027  007CE0  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1028  007CE2  26D9               	addwf	fsr2l,f,c
  1029  007CE4  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1030  007CE6  22DA               	addwfc	fsr2h,f,c
  1031  007CE8  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  1032  007CEC  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  1033  007CF0  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  1034  007CF4  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  1035  007CF8  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  1036  007CFC  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  1037  007D00  50DF               	movf	indf2,w,c
  1038  007D02  6E05               	movwf	convertCANid2Reg@canIdType,c
  1039  007D04  0E16               	movlw	low CAN_transmit@tempEIDH
  1040  007D06  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  1041  007D08  0E00               	movlw	high CAN_transmit@tempEIDH
  1042  007D0A  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  1043  007D0C  0E17               	movlw	low CAN_transmit@tempEIDL
  1044  007D0E  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  1045  007D10  0E00               	movlw	high CAN_transmit@tempEIDL
  1046  007D12  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  1047  007D14  0E18               	movlw	low CAN_transmit@tempSIDH
  1048  007D16  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  1049  007D18  0E00               	movlw	high CAN_transmit@tempSIDH
  1050  007D1A  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  1051  007D1C  0E19               	movlw	low CAN_transmit@tempSIDL
  1052  007D1E  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  1053  007D20  0E00               	movlw	high CAN_transmit@tempSIDL
  1054  007D22  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  1055  007D24  EC92  F03D         	call	_convertCANid2Reg	;wreg free
  1056                           
  1057                           ;ecan.c: 179: TXB0EIDH = tempEIDH;
  1058  007D28  C016  FF23         	movff	CAN_transmit@tempEIDH,3875	;volatile
  1059                           
  1060                           ;ecan.c: 180: TXB0EIDL = tempEIDL;
  1061  007D2C  C017  FF24         	movff	CAN_transmit@tempEIDL,3876	;volatile
  1062                           
  1063                           ;ecan.c: 181: TXB0SIDH = tempSIDH;
  1064  007D30  C018  FF21         	movff	CAN_transmit@tempSIDH,3873	;volatile
  1065                           
  1066                           ;ecan.c: 182: TXB0SIDL = tempSIDL;
  1067  007D34  C019  FF22         	movff	CAN_transmit@tempSIDL,3874	;volatile
  1068                           
  1069                           ;ecan.c: 183: TXB0DLC = tempCanMsg->frame.dlc;
  1070  007D38  EE20 F005          	lfsr	2,5
  1071  007D3C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1072  007D3E  26D9               	addwf	fsr2l,f,c
  1073  007D40  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1074  007D42  22DA               	addwfc	fsr2h,f,c
  1075  007D44  50DF               	movf	indf2,w,c
  1076  007D46  010F               	movlb	15	; () banked
  1077  007D48  6F25               	movwf	37,b	;volatile
  1078                           
  1079                           ; BSR set to: 15
  1080                           ;ecan.c: 184: TXB0D0 = tempCanMsg->frame.data0;
  1081  007D4A  EE20 F006          	lfsr	2,6
  1082  007D4E  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1083  007D50  26D9               	addwf	fsr2l,f,c
  1084  007D52  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1085  007D54  22DA               	addwfc	fsr2h,f,c
  1086  007D56  50DF               	movf	indf2,w,c
  1087  007D58  010F               	movlb	15	; () banked
  1088  007D5A  6F26               	movwf	38,b	;volatile
  1089                           
  1090                           ; BSR set to: 15
  1091                           ;ecan.c: 185: TXB0D1 = tempCanMsg->frame.data1;
  1092  007D5C  EE20 F007          	lfsr	2,7
  1093  007D60  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1094  007D62  26D9               	addwf	fsr2l,f,c
  1095  007D64  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1096  007D66  22DA               	addwfc	fsr2h,f,c
  1097  007D68  50DF               	movf	indf2,w,c
  1098  007D6A  010F               	movlb	15	; () banked
  1099  007D6C  6F27               	movwf	39,b	;volatile
  1100                           
  1101                           ; BSR set to: 15
  1102                           ;ecan.c: 186: TXB0D2 = tempCanMsg->frame.data2;
  1103  007D6E  EE20 F008          	lfsr	2,8
  1104  007D72  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1105  007D74  26D9               	addwf	fsr2l,f,c
  1106  007D76  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1107  007D78  22DA               	addwfc	fsr2h,f,c
  1108  007D7A  50DF               	movf	indf2,w,c
  1109  007D7C  010F               	movlb	15	; () banked
  1110  007D7E  6F28               	movwf	40,b	;volatile
  1111                           
  1112                           ; BSR set to: 15
  1113                           ;ecan.c: 187: TXB0D3 = tempCanMsg->frame.data3;
  1114  007D80  EE20 F009          	lfsr	2,9
  1115  007D84  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1116  007D86  26D9               	addwf	fsr2l,f,c
  1117  007D88  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1118  007D8A  22DA               	addwfc	fsr2h,f,c
  1119  007D8C  50DF               	movf	indf2,w,c
  1120  007D8E  010F               	movlb	15	; () banked
  1121  007D90  6F29               	movwf	41,b	;volatile
  1122                           
  1123                           ; BSR set to: 15
  1124                           ;ecan.c: 188: TXB0D4 = tempCanMsg->frame.data4;
  1125  007D92  EE20 F00A          	lfsr	2,10
  1126  007D96  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1127  007D98  26D9               	addwf	fsr2l,f,c
  1128  007D9A  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1129  007D9C  22DA               	addwfc	fsr2h,f,c
  1130  007D9E  50DF               	movf	indf2,w,c
  1131  007DA0  010F               	movlb	15	; () banked
  1132  007DA2  6F2A               	movwf	42,b	;volatile
  1133                           
  1134                           ; BSR set to: 15
  1135                           ;ecan.c: 189: TXB0D5 = tempCanMsg->frame.data5;
  1136  007DA4  EE20 F00B          	lfsr	2,11
  1137  007DA8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1138  007DAA  26D9               	addwf	fsr2l,f,c
  1139  007DAC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1140  007DAE  22DA               	addwfc	fsr2h,f,c
  1141  007DB0  50DF               	movf	indf2,w,c
  1142  007DB2  010F               	movlb	15	; () banked
  1143  007DB4  6F2B               	movwf	43,b	;volatile
  1144                           
  1145                           ; BSR set to: 15
  1146                           ;ecan.c: 190: TXB0D6 = tempCanMsg->frame.data6;
  1147  007DB6  EE20 F00C          	lfsr	2,12
  1148  007DBA  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1149  007DBC  26D9               	addwf	fsr2l,f,c
  1150  007DBE  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1151  007DC0  22DA               	addwfc	fsr2h,f,c
  1152  007DC2  50DF               	movf	indf2,w,c
  1153  007DC4  010F               	movlb	15	; () banked
  1154  007DC6  6F2C               	movwf	44,b	;volatile
  1155                           
  1156                           ; BSR set to: 15
  1157                           ;ecan.c: 191: TXB0D7 = tempCanMsg->frame.data7;
  1158  007DC8  EE20 F00D          	lfsr	2,13
  1159  007DCC  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1160  007DCE  26D9               	addwf	fsr2l,f,c
  1161  007DD0  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1162  007DD2  22DA               	addwfc	fsr2h,f,c
  1163  007DD4  50DF               	movf	indf2,w,c
  1164  007DD6  010F               	movlb	15	; () banked
  1165  007DD8  6F2D               	movwf	45,b	;volatile
  1166                           
  1167                           ; BSR set to: 15
  1168                           ;ecan.c: 193: TXB0CONbits.TXREQ = 1;
  1169  007DDA  010F               	movlb	15	; () banked
  1170  007DDC  8720               	bsf	32,3,b	;volatile
  1171                           
  1172                           ; BSR set to: 15
  1173                           ;ecan.c: 194: returnValue = 1;
  1174  007DDE  0E01               	movlw	1
  1175  007DE0  6E15               	movwf	CAN_transmit@returnValue,c
  1176                           
  1177                           ;ecan.c: 195: } else if (TXB1CONbits.TXREQ != 1) {
  1178  007DE2  0012               	return	
  1179  007DE4                     l268:
  1180                           
  1181                           ; BSR set to: 15
  1182  007DE4  010F               	movlb	15	; () banked
  1183  007DE6  B710               	btfsc	16,3,b	;volatile
  1184  007DE8  D084               	goto	l270
  1185                           
  1186                           ; BSR set to: 15
  1187                           ;ecan.c: 197: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  1188  007DEA  EE20 F001          	lfsr	2,1
  1189  007DEE  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1190  007DF0  26D9               	addwf	fsr2l,f,c
  1191  007DF2  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1192  007DF4  22DA               	addwfc	fsr2h,f,c
  1193  007DF6  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  1194  007DFA  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  1195  007DFE  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  1196  007E02  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  1197  007E06  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  1198  007E0A  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  1199  007E0E  50DF               	movf	indf2,w,c
  1200  007E10  6E05               	movwf	convertCANid2Reg@canIdType,c
  1201  007E12  0E16               	movlw	low CAN_transmit@tempEIDH
  1202  007E14  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  1203  007E16  0E00               	movlw	high CAN_transmit@tempEIDH
  1204  007E18  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  1205  007E1A  0E17               	movlw	low CAN_transmit@tempEIDL
  1206  007E1C  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  1207  007E1E  0E00               	movlw	high CAN_transmit@tempEIDL
  1208  007E20  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  1209  007E22  0E18               	movlw	low CAN_transmit@tempSIDH
  1210  007E24  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  1211  007E26  0E00               	movlw	high CAN_transmit@tempSIDH
  1212  007E28  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  1213  007E2A  0E19               	movlw	low CAN_transmit@tempSIDL
  1214  007E2C  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  1215  007E2E  0E00               	movlw	high CAN_transmit@tempSIDL
  1216  007E30  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  1217  007E32  EC92  F03D         	call	_convertCANid2Reg	;wreg free
  1218                           
  1219                           ;ecan.c: 199: TXB1EIDH = tempEIDH;
  1220  007E36  C016  FF13         	movff	CAN_transmit@tempEIDH,3859	;volatile
  1221                           
  1222                           ;ecan.c: 200: TXB1EIDL = tempEIDL;
  1223  007E3A  C017  FF14         	movff	CAN_transmit@tempEIDL,3860	;volatile
  1224                           
  1225                           ;ecan.c: 201: TXB1SIDH = tempSIDH;
  1226  007E3E  C018  FF11         	movff	CAN_transmit@tempSIDH,3857	;volatile
  1227                           
  1228                           ;ecan.c: 202: TXB1SIDL = tempSIDL;
  1229  007E42  C019  FF12         	movff	CAN_transmit@tempSIDL,3858	;volatile
  1230                           
  1231                           ;ecan.c: 203: TXB1DLC = tempCanMsg->frame.dlc;
  1232  007E46  EE20 F005          	lfsr	2,5
  1233  007E4A  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1234  007E4C  26D9               	addwf	fsr2l,f,c
  1235  007E4E  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1236  007E50  22DA               	addwfc	fsr2h,f,c
  1237  007E52  50DF               	movf	indf2,w,c
  1238  007E54  010F               	movlb	15	; () banked
  1239  007E56  6F15               	movwf	21,b	;volatile
  1240                           
  1241                           ; BSR set to: 15
  1242                           ;ecan.c: 204: TXB1D0 = tempCanMsg->frame.data0;
  1243  007E58  EE20 F006          	lfsr	2,6
  1244  007E5C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1245  007E5E  26D9               	addwf	fsr2l,f,c
  1246  007E60  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1247  007E62  22DA               	addwfc	fsr2h,f,c
  1248  007E64  50DF               	movf	indf2,w,c
  1249  007E66  010F               	movlb	15	; () banked
  1250  007E68  6F16               	movwf	22,b	;volatile
  1251                           
  1252                           ; BSR set to: 15
  1253                           ;ecan.c: 205: TXB1D1 = tempCanMsg->frame.data1;
  1254  007E6A  EE20 F007          	lfsr	2,7
  1255  007E6E  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1256  007E70  26D9               	addwf	fsr2l,f,c
  1257  007E72  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1258  007E74  22DA               	addwfc	fsr2h,f,c
  1259  007E76  50DF               	movf	indf2,w,c
  1260  007E78  010F               	movlb	15	; () banked
  1261  007E7A  6F17               	movwf	23,b	;volatile
  1262                           
  1263                           ; BSR set to: 15
  1264                           ;ecan.c: 206: TXB1D2 = tempCanMsg->frame.data2;
  1265  007E7C  EE20 F008          	lfsr	2,8
  1266  007E80  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1267  007E82  26D9               	addwf	fsr2l,f,c
  1268  007E84  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1269  007E86  22DA               	addwfc	fsr2h,f,c
  1270  007E88  50DF               	movf	indf2,w,c
  1271  007E8A  010F               	movlb	15	; () banked
  1272  007E8C  6F18               	movwf	24,b	;volatile
  1273                           
  1274                           ; BSR set to: 15
  1275                           ;ecan.c: 207: TXB1D3 = tempCanMsg->frame.data3;
  1276  007E8E  EE20 F009          	lfsr	2,9
  1277  007E92  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1278  007E94  26D9               	addwf	fsr2l,f,c
  1279  007E96  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1280  007E98  22DA               	addwfc	fsr2h,f,c
  1281  007E9A  50DF               	movf	indf2,w,c
  1282  007E9C  010F               	movlb	15	; () banked
  1283  007E9E  6F19               	movwf	25,b	;volatile
  1284                           
  1285                           ; BSR set to: 15
  1286                           ;ecan.c: 208: TXB1D4 = tempCanMsg->frame.data4;
  1287  007EA0  EE20 F00A          	lfsr	2,10
  1288  007EA4  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1289  007EA6  26D9               	addwf	fsr2l,f,c
  1290  007EA8  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1291  007EAA  22DA               	addwfc	fsr2h,f,c
  1292  007EAC  50DF               	movf	indf2,w,c
  1293  007EAE  010F               	movlb	15	; () banked
  1294  007EB0  6F1A               	movwf	26,b	;volatile
  1295                           
  1296                           ; BSR set to: 15
  1297                           ;ecan.c: 209: TXB1D5 = tempCanMsg->frame.data5;
  1298  007EB2  EE20 F00B          	lfsr	2,11
  1299  007EB6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1300  007EB8  26D9               	addwf	fsr2l,f,c
  1301  007EBA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1302  007EBC  22DA               	addwfc	fsr2h,f,c
  1303  007EBE  50DF               	movf	indf2,w,c
  1304  007EC0  010F               	movlb	15	; () banked
  1305  007EC2  6F1B               	movwf	27,b	;volatile
  1306                           
  1307                           ; BSR set to: 15
  1308                           ;ecan.c: 210: TXB1D6 = tempCanMsg->frame.data6;
  1309  007EC4  EE20 F00C          	lfsr	2,12
  1310  007EC8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1311  007ECA  26D9               	addwf	fsr2l,f,c
  1312  007ECC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1313  007ECE  22DA               	addwfc	fsr2h,f,c
  1314  007ED0  50DF               	movf	indf2,w,c
  1315  007ED2  010F               	movlb	15	; () banked
  1316  007ED4  6F1C               	movwf	28,b	;volatile
  1317                           
  1318                           ; BSR set to: 15
  1319                           ;ecan.c: 211: TXB1D7 = tempCanMsg->frame.data7;
  1320  007ED6  EE20 F00D          	lfsr	2,13
  1321  007EDA  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1322  007EDC  26D9               	addwf	fsr2l,f,c
  1323  007EDE  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1324  007EE0  22DA               	addwfc	fsr2h,f,c
  1325  007EE2  50DF               	movf	indf2,w,c
  1326  007EE4  010F               	movlb	15	; () banked
  1327  007EE6  6F1D               	movwf	29,b	;volatile
  1328                           
  1329                           ; BSR set to: 15
  1330                           ;ecan.c: 213: TXB1CONbits.TXREQ = 1;
  1331  007EE8  010F               	movlb	15	; () banked
  1332  007EEA  8710               	bsf	16,3,b	;volatile
  1333                           
  1334                           ; BSR set to: 15
  1335                           ;ecan.c: 214: returnValue = 1;
  1336  007EEC  0E01               	movlw	1
  1337  007EEE  6E15               	movwf	CAN_transmit@returnValue,c
  1338                           
  1339                           ;ecan.c: 215: } else if (TXB2CONbits.TXREQ != 1) {
  1340  007EF0  0012               	return	
  1341  007EF2                     l270:
  1342                           
  1343                           ; BSR set to: 15
  1344  007EF2  010F               	movlb	15	; () banked
  1345  007EF4  B700               	btfsc	0,3,b	;volatile
  1346  007EF6  0012               	return	
  1347                           
  1348                           ; BSR set to: 15
  1349                           ;ecan.c: 217: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  1350  007EF8  EE20 F001          	lfsr	2,1
  1351  007EFC  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1352  007EFE  26D9               	addwf	fsr2l,f,c
  1353  007F00  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1354  007F02  22DA               	addwfc	fsr2h,f,c
  1355  007F04  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  1356  007F08  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  1357  007F0C  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  1358  007F10  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  1359  007F14  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  1360  007F18  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  1361  007F1C  50DF               	movf	indf2,w,c
  1362  007F1E  6E05               	movwf	convertCANid2Reg@canIdType,c
  1363  007F20  0E16               	movlw	low CAN_transmit@tempEIDH
  1364  007F22  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  1365  007F24  0E00               	movlw	high CAN_transmit@tempEIDH
  1366  007F26  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  1367  007F28  0E17               	movlw	low CAN_transmit@tempEIDL
  1368  007F2A  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  1369  007F2C  0E00               	movlw	high CAN_transmit@tempEIDL
  1370  007F2E  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  1371  007F30  0E18               	movlw	low CAN_transmit@tempSIDH
  1372  007F32  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  1373  007F34  0E00               	movlw	high CAN_transmit@tempSIDH
  1374  007F36  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  1375  007F38  0E19               	movlw	low CAN_transmit@tempSIDL
  1376  007F3A  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  1377  007F3C  0E00               	movlw	high CAN_transmit@tempSIDL
  1378  007F3E  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  1379  007F40  EC92  F03D         	call	_convertCANid2Reg	;wreg free
  1380                           
  1381                           ;ecan.c: 219: TXB2EIDH = tempEIDH;
  1382  007F44  C016  FF03         	movff	CAN_transmit@tempEIDH,3843	;volatile
  1383                           
  1384                           ;ecan.c: 220: TXB2EIDL = tempEIDL;
  1385  007F48  C017  FF04         	movff	CAN_transmit@tempEIDL,3844	;volatile
  1386                           
  1387                           ;ecan.c: 221: TXB2SIDH = tempSIDH;
  1388  007F4C  C018  FF01         	movff	CAN_transmit@tempSIDH,3841	;volatile
  1389                           
  1390                           ;ecan.c: 222: TXB2SIDL = tempSIDL;
  1391  007F50  C019  FF02         	movff	CAN_transmit@tempSIDL,3842	;volatile
  1392                           
  1393                           ;ecan.c: 223: TXB2DLC = tempCanMsg->frame.dlc;
  1394  007F54  EE20 F005          	lfsr	2,5
  1395  007F58  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1396  007F5A  26D9               	addwf	fsr2l,f,c
  1397  007F5C  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1398  007F5E  22DA               	addwfc	fsr2h,f,c
  1399  007F60  50DF               	movf	indf2,w,c
  1400  007F62  010F               	movlb	15	; () banked
  1401  007F64  6F05               	movwf	5,b	;volatile
  1402                           
  1403                           ; BSR set to: 15
  1404                           ;ecan.c: 224: TXB2D0 = tempCanMsg->frame.data0;
  1405  007F66  EE20 F006          	lfsr	2,6
  1406  007F6A  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1407  007F6C  26D9               	addwf	fsr2l,f,c
  1408  007F6E  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1409  007F70  22DA               	addwfc	fsr2h,f,c
  1410  007F72  50DF               	movf	indf2,w,c
  1411  007F74  010F               	movlb	15	; () banked
  1412  007F76  6F06               	movwf	6,b	;volatile
  1413                           
  1414                           ; BSR set to: 15
  1415                           ;ecan.c: 225: TXB2D1 = tempCanMsg->frame.data1;
  1416  007F78  EE20 F007          	lfsr	2,7
  1417  007F7C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1418  007F7E  26D9               	addwf	fsr2l,f,c
  1419  007F80  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1420  007F82  22DA               	addwfc	fsr2h,f,c
  1421  007F84  50DF               	movf	indf2,w,c
  1422  007F86  010F               	movlb	15	; () banked
  1423  007F88  6F07               	movwf	7,b	;volatile
  1424                           
  1425                           ; BSR set to: 15
  1426                           ;ecan.c: 226: TXB2D2 = tempCanMsg->frame.data2;
  1427  007F8A  EE20 F008          	lfsr	2,8
  1428  007F8E  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1429  007F90  26D9               	addwf	fsr2l,f,c
  1430  007F92  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1431  007F94  22DA               	addwfc	fsr2h,f,c
  1432  007F96  50DF               	movf	indf2,w,c
  1433  007F98  010F               	movlb	15	; () banked
  1434  007F9A  6F08               	movwf	8,b	;volatile
  1435                           
  1436                           ; BSR set to: 15
  1437                           ;ecan.c: 227: TXB2D3 = tempCanMsg->frame.data3;
  1438  007F9C  EE20 F009          	lfsr	2,9
  1439  007FA0  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1440  007FA2  26D9               	addwf	fsr2l,f,c
  1441  007FA4  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1442  007FA6  22DA               	addwfc	fsr2h,f,c
  1443  007FA8  50DF               	movf	indf2,w,c
  1444  007FAA  010F               	movlb	15	; () banked
  1445  007FAC  6F09               	movwf	9,b	;volatile
  1446                           
  1447                           ; BSR set to: 15
  1448                           ;ecan.c: 228: TXB2D4 = tempCanMsg->frame.data4;
  1449  007FAE  EE20 F00A          	lfsr	2,10
  1450  007FB2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1451  007FB4  26D9               	addwf	fsr2l,f,c
  1452  007FB6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1453  007FB8  22DA               	addwfc	fsr2h,f,c
  1454  007FBA  50DF               	movf	indf2,w,c
  1455  007FBC  010F               	movlb	15	; () banked
  1456  007FBE  6F0A               	movwf	10,b	;volatile
  1457                           
  1458                           ; BSR set to: 15
  1459                           ;ecan.c: 229: TXB2D5 = tempCanMsg->frame.data5;
  1460  007FC0  EE20 F00B          	lfsr	2,11
  1461  007FC4  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1462  007FC6  26D9               	addwf	fsr2l,f,c
  1463  007FC8  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1464  007FCA  22DA               	addwfc	fsr2h,f,c
  1465  007FCC  50DF               	movf	indf2,w,c
  1466  007FCE  010F               	movlb	15	; () banked
  1467  007FD0  6F0B               	movwf	11,b	;volatile
  1468                           
  1469                           ; BSR set to: 15
  1470                           ;ecan.c: 230: TXB2D6 = tempCanMsg->frame.data6;
  1471  007FD2  EE20 F00C          	lfsr	2,12
  1472  007FD6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1473  007FD8  26D9               	addwf	fsr2l,f,c
  1474  007FDA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1475  007FDC  22DA               	addwfc	fsr2h,f,c
  1476  007FDE  50DF               	movf	indf2,w,c
  1477  007FE0  010F               	movlb	15	; () banked
  1478  007FE2  6F0C               	movwf	12,b	;volatile
  1479                           
  1480                           ; BSR set to: 15
  1481                           ;ecan.c: 231: TXB2D7 = tempCanMsg->frame.data7;
  1482  007FE4  EE20 F00D          	lfsr	2,13
  1483  007FE8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1484  007FEA  26D9               	addwf	fsr2l,f,c
  1485  007FEC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1486  007FEE  22DA               	addwfc	fsr2h,f,c
  1487  007FF0  50DF               	movf	indf2,w,c
  1488  007FF2  010F               	movlb	15	; () banked
  1489  007FF4  6F0D               	movwf	13,b	;volatile
  1490                           
  1491                           ; BSR set to: 15
  1492                           ;ecan.c: 233: TXB2CONbits.TXREQ = 1;
  1493  007FF6  010F               	movlb	15	; () banked
  1494  007FF8  8700               	bsf	0,3,b	;volatile
  1495                           
  1496                           ; BSR set to: 15
  1497                           ;ecan.c: 234: returnValue = 1;
  1498  007FFA  0E01               	movlw	1
  1499  007FFC  6E15               	movwf	CAN_transmit@returnValue,c
  1500                           
  1501                           ; BSR set to: 15
  1502                           
  1503                           ; BSR set to: 15
  1504                           
  1505                           ; BSR set to: 15
  1506  007FFE  0012               	return	
  1507  008000                     __end_of_CAN_transmit:
  1508                           	opt stack 0
  1509                           indf2	equ	0xFDF
  1510                           postinc2	equ	0xFDE
  1511                           fsr2h	equ	0xFDA
  1512                           fsr2l	equ	0xFD9
  1513                           status	equ	0xFD8
  1514                           
  1515 ;; *************** function _convertCANid2Reg *****************
  1516 ;; Defined at:
  1517 ;;		line 400 in file "mcc_generated_files/ecan.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  tempPassedIn    4    0[COMRAM] unsigned long 
  1520 ;;  canIdType       1    4[COMRAM] unsigned char 
  1521 ;;  passedInEIDH    2    5[COMRAM] PTR unsigned char 
  1522 ;;		 -> CAN_transmit@tempEIDH(1), 
  1523 ;;  passedInEIDL    2    7[COMRAM] PTR unsigned char 
  1524 ;;		 -> CAN_transmit@tempEIDL(1), 
  1525 ;;  passedInSIDH    2    9[COMRAM] PTR unsigned char 
  1526 ;;		 -> CAN_transmit@tempSIDH(1), 
  1527 ;;  passedInSIDL    2   11[COMRAM] PTR unsigned char 
  1528 ;;		 -> CAN_transmit@tempSIDL(1), 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  wipSIDL         1   17[COMRAM] unsigned char 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1540 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1542 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1543 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1544 ;;Total ram usage:       18 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_CAN_transmit
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text7
  1554  007B24                     __ptext7:
  1555                           	opt stack 0
  1556  007B24                     _convertCANid2Reg:
  1557                           	opt stack 29
  1558                           
  1559                           ;ecan.c: 401: unsigned char wipSIDL = 0;
  1560                           
  1561                           ; BSR set to: 15
  1562                           ;incstack = 0
  1563  007B24  0E00               	movlw	0
  1564  007B26  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  1565                           
  1566                           ;ecan.c: 403: if (canIdType == 2) {
  1567  007B28  0E02               	movlw	2
  1568  007B2A  1805               	xorwf	convertCANid2Reg@canIdType,w,c
  1569  007B2C  A4D8               	btfss	status,2,c
  1570  007B2E  D081               	goto	l1431
  1571                           
  1572                           ;ecan.c: 406: *passedInEIDL = 0xFF & tempPassedInID;
  1573  007B30  C008  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  1574  007B34  C009  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  1575  007B38  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  1576                           
  1577                           ;ecan.c: 407: tempPassedInID = tempPassedInID >> 8;
  1578  007B3C  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1579  007B40  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1580  007B44  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1581  007B48  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1582  007B4C  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  1583  007B50  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  1584  007B54  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  1585  007B58  6A11               	clrf	??_convertCANid2Reg+3,c
  1586  007B5A  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1587  007B5E  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1588  007B62  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1589  007B66  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1590                           
  1591                           ;ecan.c: 410: *passedInEIDH = 0xFF & tempPassedInID;
  1592  007B6A  C006  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  1593  007B6E  C007  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  1594  007B72  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  1595                           
  1596                           ;ecan.c: 411: tempPassedInID = tempPassedInID >> 8;
  1597  007B76  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1598  007B7A  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1599  007B7E  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1600  007B82  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1601  007B86  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  1602  007B8A  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  1603  007B8E  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  1604  007B92  6A11               	clrf	??_convertCANid2Reg+3,c
  1605  007B94  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1606  007B98  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1607  007B9C  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1608  007BA0  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1609                           
  1610                           ;ecan.c: 415: wipSIDL = 0x03 & tempPassedInID;
  1611  007BA4  5001               	movf	convertCANid2Reg@tempPassedInID,w,c
  1612  007BA6  0B03               	andlw	3
  1613  007BA8  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  1614                           
  1615                           ;ecan.c: 416: tempPassedInID = tempPassedInID << 3;
  1616  007BAA  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1617  007BAE  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1618  007BB2  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1619  007BB6  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1620  007BBA  0E03               	movlw	3
  1621  007BBC                     u235:
  1622  007BBC  90D8               	bcf	status,0,c
  1623  007BBE  360E               	rlcf	??_convertCANid2Reg,f,c
  1624  007BC0  360F               	rlcf	??_convertCANid2Reg+1,f,c
  1625  007BC2  3610               	rlcf	??_convertCANid2Reg+2,f,c
  1626  007BC4  3611               	rlcf	??_convertCANid2Reg+3,f,c
  1627  007BC6  2EE8               	decfsz	wreg,f,c
  1628  007BC8  D7F9               	goto	u235
  1629  007BCA  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1630  007BCE  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1631  007BD2  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1632  007BD6  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1633                           
  1634                           ;ecan.c: 417: wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  1635  007BDA  5001               	movf	convertCANid2Reg@tempPassedInID,w,c
  1636  007BDC  0BE0               	andlw	224
  1637  007BDE  2412               	addwf	convertCANid2Reg@wipSIDL,w,c
  1638  007BE0  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  1639                           
  1640                           ;ecan.c: 418: wipSIDL = wipSIDL + 0x08;
  1641  007BE2  5012               	movf	convertCANid2Reg@wipSIDL,w,c
  1642  007BE4  0F08               	addlw	8
  1643  007BE6  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  1644                           
  1645                           ;ecan.c: 419: *passedInSIDL = 0xEB & wipSIDL;
  1646  007BE8  5012               	movf	convertCANid2Reg@wipSIDL,w,c
  1647  007BEA  0BEB               	andlw	235
  1648  007BEC  C00C  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  1649  007BF0  C00D  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  1650  007BF4  6EDF               	movwf	indf2,c
  1651                           
  1652                           ;ecan.c: 422: tempPassedInID = tempPassedInID >> 8;
  1653  007BF6  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1654  007BFA  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1655  007BFE  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1656  007C02  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1657  007C06  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  1658  007C0A  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  1659  007C0E  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  1660  007C12  6A11               	clrf	??_convertCANid2Reg+3,c
  1661  007C14  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1662  007C18  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1663  007C1C  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1664  007C20  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1665                           
  1666                           ;ecan.c: 423: *passedInSIDH = 0xFF & tempPassedInID;
  1667  007C24  C00A  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  1668  007C28  C00B  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  1669  007C2C  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  1670                           
  1671                           ;ecan.c: 424: } else
  1672  007C30  0012               	return	
  1673  007C32                     l1431:
  1674                           
  1675                           ;ecan.c: 425: {
  1676                           ;ecan.c: 426: *passedInEIDH = 0;
  1677  007C32  C006  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  1678  007C36  C007  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  1679  007C3A  0E00               	movlw	0
  1680  007C3C  6EDF               	movwf	indf2,c
  1681                           
  1682                           ;ecan.c: 427: *passedInEIDL = 0;
  1683  007C3E  C008  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  1684  007C42  C009  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  1685  007C46  0E00               	movlw	0
  1686  007C48  6EDF               	movwf	indf2,c
  1687                           
  1688                           ;ecan.c: 428: tempPassedInID = tempPassedInID << 5;
  1689  007C4A  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1690  007C4E  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1691  007C52  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1692  007C56  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1693  007C5A  0E05               	movlw	5
  1694  007C5C                     u245:
  1695  007C5C  90D8               	bcf	status,0,c
  1696  007C5E  360E               	rlcf	??_convertCANid2Reg,f,c
  1697  007C60  360F               	rlcf	??_convertCANid2Reg+1,f,c
  1698  007C62  3610               	rlcf	??_convertCANid2Reg+2,f,c
  1699  007C64  3611               	rlcf	??_convertCANid2Reg+3,f,c
  1700  007C66  2EE8               	decfsz	wreg,f,c
  1701  007C68  D7F9               	goto	u245
  1702  007C6A  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1703  007C6E  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1704  007C72  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1705  007C76  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1706                           
  1707                           ;ecan.c: 429: *passedInSIDL = 0xFF & tempPassedInID;
  1708  007C7A  C00C  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  1709  007C7E  C00D  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  1710  007C82  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  1711                           
  1712                           ;ecan.c: 430: tempPassedInID = tempPassedInID >> 8;
  1713  007C86  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  1714  007C8A  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  1715  007C8E  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  1716  007C92  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  1717  007C96  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  1718  007C9A  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  1719  007C9E  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  1720  007CA2  6A11               	clrf	??_convertCANid2Reg+3,c
  1721  007CA4  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  1722  007CA8  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  1723  007CAC  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  1724  007CB0  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  1725                           
  1726                           ;ecan.c: 431: *passedInSIDH = 0xFF & tempPassedInID;
  1727  007CB4  C00A  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  1728  007CB8  C00B  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  1729  007CBC  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  1730  007CC0  0012               	return	
  1731  007CC2                     __end_of_convertCANid2Reg:
  1732                           	opt stack 0
  1733                           wreg	equ	0xFE8
  1734                           indf2	equ	0xFDF
  1735                           postinc2	equ	0xFDE
  1736                           fsr2h	equ	0xFDA
  1737                           fsr2l	equ	0xFD9
  1738                           status	equ	0xFD8
  1739                           
  1740 ;; *************** function _ADC_GetConversion *****************
  1741 ;; Defined at:
  1742 ;;		line 104 in file "mcc_generated_files/adc.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  channel         1    wreg     enum E15090
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  channel         1    4[COMRAM] enum E15090
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  2    0[COMRAM] unsigned int 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1758 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1759 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1760 ;;Total ram usage:        5 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_main
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text8
  1770  007964                     __ptext8:
  1771                           	opt stack 0
  1772  007964                     _ADC_GetConversion:
  1773                           	opt stack 30
  1774                           
  1775                           ;incstack = 0
  1776                           ;ADC_GetConversion@channel stored from wreg
  1777  007964  6E05               	movwf	ADC_GetConversion@channel,c
  1778                           
  1779                           ;adc.c: 107: ADCON0bits.CHS = channel;
  1780  007966  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  1781  00796A  4603               	rlncf	??_ADC_GetConversion,f,c
  1782  00796C  4603               	rlncf	??_ADC_GetConversion,f,c
  1783  00796E  50C2               	movf	4034,w,c	;volatile
  1784  007970  1803               	xorwf	??_ADC_GetConversion,w,c
  1785  007972  0B83               	andlw	-125
  1786  007974  1803               	xorwf	??_ADC_GetConversion,w,c
  1787  007976  6EC2               	movwf	4034,c	;volatile
  1788                           
  1789                           ;adc.c: 110: ADCON0bits.ADON = 1;
  1790  007978  80C2               	bsf	4034,0,c	;volatile
  1791                           
  1792                           ;adc.c: 114: ADCON0bits.GO_nDONE = 1;
  1793  00797A  82C2               	bsf	4034,1,c	;volatile
  1794  00797C                     l406:
  1795  00797C  B2C2               	btfsc	4034,1,c	;volatile
  1796  00797E  D7FE               	goto	l406
  1797                           
  1798                           ;adc.c: 119: }
  1799                           ;adc.c: 122: return ((ADRESH << 8) + ADRESL);
  1800  007980  50C4               	movf	4036,w,c	;volatile
  1801  007982  6E04               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  1802  007984  6A03               	clrf	??_ADC_GetConversion& (0+255),c
  1803  007986  50C3               	movf	4035,w,c	;volatile
  1804  007988  2403               	addwf	??_ADC_GetConversion,w,c
  1805  00798A  6E01               	movwf	?_ADC_GetConversion,c
  1806  00798C  0E00               	movlw	0
  1807  00798E  2004               	addwfc	??_ADC_GetConversion+1,w,c
  1808  007990  6E02               	movwf	?_ADC_GetConversion+1,c
  1809  007992  0012               	return	
  1810  007994                     __end_of_ADC_GetConversion:
  1811                           	opt stack 0
  1812  0000                     wreg	equ	0xFE8
  1813                           indf2	equ	0xFDF
  1814                           postinc2	equ	0xFDE
  1815                           fsr2h	equ	0xFDA
  1816                           fsr2l	equ	0xFD9
  1817                           status	equ	0xFD8
  1818                           wreg	equ	0xFE8
  1819                           indf2	equ	0xFDF
  1820                           postinc2	equ	0xFDE
  1821                           fsr2h	equ	0xFDA
  1822                           fsr2l	equ	0xFD9
  1823                           status	equ	0xFD8
  1824                           
  1825                           	psect	rparam
  1826  0000                     wreg	equ	0xFE8
  1827                           indf2	equ	0xFDF
  1828                           postinc2	equ	0xFDE
  1829                           fsr2h	equ	0xFDA
  1830                           fsr2l	equ	0xFD9
  1831                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     41      41
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(COMRAM[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(COMRAM[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(COMRAM[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(COMRAM[1]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> main@test(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_CAN_transmit
    _SYSTEM_Initialize->_ECAN_Initialize
    _CAN_transmit->_convertCANid2Reg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    3651
                                             25 COMRAM    16    16      0
                  _ADC_GetConversion
                       _CAN_transmit
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _ECAN_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_transmit                                         7     5      2    3288
                                             18 COMRAM     7     5      2
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (2) _convertCANid2Reg                                    18     5     13    1928
                                              0 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _CAN_transmit
     _convertCANid2Reg
   _SYSTEM_Initialize
     _ADC_Initialize
     _ECAN_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     29      29       1       43.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BIGRAM             E40      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Jul 08 00:19:40 2017

       __size_of_ECAN_Initialize 00EE                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                            l406 797C                              l270 7EF2  
                            l268 7DE4                              l376 79E4  
                   __CFG_CPB$OFF 000000                              u235 7BBC  
                            u245 7C5C                     __CFG_CPD$OFF 000000  
                            wreg 000FE8                             l1043 7A3A  
                           l1055 7B16                             l1431 7C32  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D                             _WPUB 000F5B  
                           _main 79CC     convertCANid2Reg@passedInEIDH 0006  
   convertCANid2Reg@passedInEIDL 0008                             fsr2h 000FDA  
                           indf2 000FDF                             fsr2l 000FD9  
   convertCANid2Reg@passedInSIDH 000A     convertCANid2Reg@passedInSIDL 000C  
        CAN_transmit@returnValue 0015                             start 0000  
                  __CFG_IESO$OFF 000000                    __CFG_FOSC$HS1 000000  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
 __size_of_OSCILLATOR_Initialize 0012    __end_of_OSCILLATOR_Initialize 793C  
                          ?_main 0001                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000             __end_of_CAN_transmit 8000  
                          status 000FD8             CAN_transmit@tempEIDH 0016  
           CAN_transmit@tempEIDL 0017             CAN_transmit@tempSIDH 0018  
           CAN_transmit@tempSIDL 0019                  __initialization 7924  
                   __end_of_main 7A36                           ??_main 001A  
                  __activetblptr 000000                   __CFG_RETEN$OFF 000000  
              ??_ECAN_Initialize 0001                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         _CANCON 000F6F                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _ANCON0 000F5D  
                         _ANCON1 000F5C                  __CFG_BBSIZ$BB2K 000000  
                 __CFG_WDTEN$OFF 000000                           _OSCCON 000FD3  
                         _RXB0D0 000F66                           _RXB0D1 000F67  
                         _RXB0D2 000F68                           _RXB0D3 000F69  
                         _RXB0D4 000F6A                           _RXB1D0 000F36  
                         _RXB0D5 000F6B                           _RXB1D1 000F37  
                         _RXB0D6 000F6C                           _RXB1D2 000F38  
                         _RXB0D7 000F6D                           _RXB1D3 000F39  
                         _RXB1D4 000F3A                           _RXB1D5 000F3B  
                         _RXB1D6 000F3C                           _RXB1D7 000F3D  
                         _TXB0D0 000F26                           _TXB0D1 000F27  
                         _TXB0D2 000F28                           _TXB0D3 000F29  
                         _TXB0D4 000F2A                           _TXB1D0 000F16  
                         _TXB0D5 000F2B                           _TXB1D1 000F17  
                         _TXB0D6 000F2C                           _TXB1D2 000F18  
                         _TXB0D7 000F2D                           _TXB1D3 000F19  
                         _TXB1D4 000F1A                           _TXB2D0 000F06  
                         _TXB1D5 000F1B                           _TXB2D1 000F07  
                         _TXB1D6 000F1C                           _TXB2D2 000F08  
                         _TXB1D7 000F1D                           _TXB2D3 000F09  
                         _TXB2D4 000F0A                           _TXB2D5 000F0B  
                         _TXB2D6 000F0C                           _TXB2D7 000F0D  
                 __CFG_XINST$OFF 000000                   __CFG_STVREN$ON 000000  
      __size_of_convertCANid2Reg 019E         ADC_GetConversion@channel 0005  
              _SYSTEM_Initialize 793C                       __accesstop 0060  
        __end_of__initialization 7924               ?_SYSTEM_Initialize 0001  
                  ___rparam_used 000001                   __pcstackCOMRAM 0001  
            ??_SYSTEM_Initialize 0002            __size_of_CAN_transmit 033E  
      __end_of_SYSTEM_Initialize 794E                  __CFG_PLLCFG$OFF 000000  
                   _CAN_transmit 7CC2                          _ECANCON 000F72  
                        _CANSTAT 000F6E                          _BRGCON1 000E43  
                        _BRGCON2 000E44                          _BRGCON3 000E45  
        __size_of_ADC_Initialize 0016                 __CFG_CANMX$PORTB 000000  
                        _REFOCON 000F9A                          _OSCCON2 000FD2  
                        _RXB0DLC 000F65                          _RXB1DLC 000F35  
                        _OSCTUNE 000F9B                          _TXB0DLC 000F25  
                        _TXB1DLC 000F15                          _TXB2DLC 000F05  
                __CFG_PWRTEN$OFF 000000                          __Hparam 0000  
                        __Lparam 0000                  _ECAN_Initialize 7A36  
                        __pcinit 7924                          __ramtop 0F00  
                        __ptext0 79CC                          __ptext1 793C  
                        __ptext2 7994                          __ptext3 792A  
                        __ptext4 7A36                          __ptext5 794E  
                        __ptext6 7CC2                          __ptext7 7B24  
                        __ptext8 7964            _OSCILLATOR_Initialize 792A  
               _convertCANid2Reg 7B24         ??_PIN_MANAGER_Initialize 0001  
              __CFG_MSSPMSK$MSK7 000000       __size_of_SYSTEM_Initialize 0012  
           end_of_initialization 7924                          postinc2 000FDE  
                      _TRISCbits 000F94           CAN_transmit@tempCanMsg 0013  
                      _TRISDbits 000F95                __CFG_SOSCSEL$HIGH 000000  
        __end_of_ECAN_Initialize 7B24                   _ADC_Initialize 794E  
         ?_OSCILLATOR_Initialize 0001              start_initialization 7924  
__size_of_PIN_MANAGER_Initialize 0038           __end_of_ADC_Initialize 7964  
               ?_ECAN_Initialize 0001           _PIN_MANAGER_Initialize 7994  
       __end_of_convertCANid2Reg 7CC2                  ?_ADC_Initialize 0001  
                    _COMSTATbits 000F71   convertCANid2Reg@tempPassedInID 0001  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                       _PIE5bits 000F76                         _PIR5bits 000F77  
                       _RXB0EIDH 000F63                         _RXB0EIDL 000F64  
                       _RXB1EIDH 000F33                         _RXB1EIDL 000F34  
                       _RXB0SIDH 000F61                         _RXB0SIDL 000F62  
                       _RXB1SIDH 000F31                         _RXF0EIDH 000EE2  
                       _RXB1SIDL 000F32                         _RXF0EIDL 000EE3  
                       _RXF1EIDH 000EE6                         _RXF1EIDL 000EE7  
                       _RXF2EIDH 000EEA                         _RXF2EIDL 000EEB  
                       _RXF3EIDH 000EEE                         _RXF3EIDL 000EEF  
                       _RXF4EIDH 000EF2                         _RXF4EIDL 000EF3  
                       _RXF5EIDH 000EF6                         _RXF5EIDL 000EF7  
                       _RXF0SIDH 000EE0                         _RXF0SIDL 000EE1  
                       _TXB0EIDH 000F23                         _RXF1SIDH 000EE4  
                       _TXB0EIDL 000F24                         _RXF1SIDL 000EE5  
                       _TXB1EIDH 000F13                         _RXF2SIDH 000EE8  
                       _TXB1EIDL 000F14                         _RXF2SIDL 000EE9  
                       _TXB2EIDH 000F03                         _RXF3SIDH 000EEC  
                       _TXB2EIDL 000F04                         _RXF3SIDL 000EED  
                       _RXF4SIDH 000EF0                         _RXF4SIDL 000EF1  
                       _RXF5SIDH 000EF4                         _RXF5SIDL 000EF5  
                       _RXM0EIDH 000EFA                         _RXM0EIDL 000EFB  
                       _TXB0SIDH 000F21                         _RXM1EIDH 000EFE  
                       _TXB0SIDL 000F22                         _RXM1EIDL 000EFF  
                       _TXB1SIDH 000F11                         _TXB1SIDL 000F12  
                       _TXB2SIDH 000F01                         _TXB2SIDL 000F02  
                       _RXM0SIDH 000EF8                         _RXM0SIDL 000EF9  
                       _RXM1SIDH 000EFC                         _RXM1SIDL 000EFD  
                     _ADCON0bits 000FC2                       _ANCON0bits 000F5D  
                       __Hrparam 0000                         __Lrparam 0000  
              _ADC_GetConversion 7964               __CFG_BOREN$SBORDIS 000000  
      convertCANid2Reg@canIdType 0005          ??_OSCILLATOR_Initialize 0001  
             ?_ADC_GetConversion 0001                       _CIOCONbits 000F70  
            ??_ADC_GetConversion 0003          convertCANid2Reg@wipSIDL 0012  
                  __size_of_main 006A        __end_of_ADC_GetConversion 7994  
                  ?_CAN_transmit 0013                         main@data 001A  
                       main@test 001C              __CFG_INTOSCSEL$HIGH 000000  
                    _RXB0CONbits 000F60                      _RXB1CONbits 000F30  
        ?_PIN_MANAGER_Initialize 0001                      _TXB0CONbits 000F20  
                    _TXB1CONbits 000F10                      _TXB2CONbits 000F00  
               ??_ADC_Initialize 0001                   ??_CAN_transmit 0015  
              ?_convertCANid2Reg 0001               __CFG_WDTPS$1048576 000000  
             ??_convertCANid2Reg 000E   __end_of_PIN_MANAGER_Initialize 79CC  
            __CFG_BORPWR$ZPBORMV 000000       __size_of_ADC_GetConversion 0030  
