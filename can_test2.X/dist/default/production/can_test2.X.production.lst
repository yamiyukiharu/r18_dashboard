

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jul 13 10:59:01 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,inline
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28  0000                     
    29                           ; Version 1.42
    30                           ; Generated 13/04/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F45K80 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     _BRGCON3	set	3653
    64  0000                     _BRGCON2	set	3652
    65  0000                     _BRGCON1	set	3651
    66  0000                     _RXF5SIDL	set	3829
    67  0000                     _RXF5SIDH	set	3828
    68  0000                     _RXF5EIDL	set	3831
    69  0000                     _RXF5EIDH	set	3830
    70  0000                     _RXF4SIDL	set	3825
    71  0000                     _RXF4SIDH	set	3824
    72  0000                     _RXF4EIDL	set	3827
    73  0000                     _RXF4EIDH	set	3826
    74  0000                     _RXF3SIDL	set	3821
    75  0000                     _RXF3SIDH	set	3820
    76  0000                     _RXF3EIDL	set	3823
    77  0000                     _RXF3EIDH	set	3822
    78  0000                     _RXF2SIDL	set	3817
    79  0000                     _RXF2SIDH	set	3816
    80  0000                     _RXF2EIDL	set	3819
    81  0000                     _RXF2EIDH	set	3818
    82  0000                     _RXF1SIDL	set	3813
    83  0000                     _RXF1SIDH	set	3812
    84  0000                     _RXF1EIDL	set	3815
    85  0000                     _RXF1EIDH	set	3814
    86  0000                     _RXF0SIDL	set	3809
    87  0000                     _RXF0SIDH	set	3808
    88  0000                     _RXF0EIDL	set	3811
    89  0000                     _RXF0EIDH	set	3810
    90  0000                     _RXM1SIDL	set	3837
    91  0000                     _RXM1SIDH	set	3836
    92  0000                     _RXM1EIDL	set	3839
    93  0000                     _RXM1EIDH	set	3838
    94  0000                     _RXM0SIDL	set	3833
    95  0000                     _RXM0SIDH	set	3832
    96  0000                     _RXM0EIDL	set	3835
    97  0000                     _RXM0EIDH	set	3834
    98  0000                     _ANCON0bits	set	3933
    99  0000                     _WPUB	set	3931
   100  0000                     _ANCON1	set	3932
   101  0000                     _ANCON0	set	3933
   102  0000                     _RXB1D7	set	3901
   103  0000                     _RXB1D6	set	3900
   104  0000                     _RXB1D5	set	3899
   105  0000                     _RXB1D4	set	3898
   106  0000                     _RXB1D3	set	3897
   107  0000                     _RXB1D2	set	3896
   108  0000                     _RXB1D1	set	3895
   109  0000                     _RXB1D0	set	3894
   110  0000                     _RXB1DLC	set	3893
   111  0000                     _RXB1SIDH	set	3889
   112  0000                     _RXB1EIDL	set	3892
   113  0000                     _RXB1EIDH	set	3891
   114  0000                     _RXB1SIDL	set	3890
   115  0000                     _RXB1CONbits	set	3888
   116  0000                     _TXB2D7	set	3853
   117  0000                     _TXB2D6	set	3852
   118  0000                     _TXB2D5	set	3851
   119  0000                     _TXB2D4	set	3850
   120  0000                     _TXB2D3	set	3849
   121  0000                     _TXB2D2	set	3848
   122  0000                     _TXB2D1	set	3847
   123  0000                     _TXB2D0	set	3846
   124  0000                     _TXB2DLC	set	3845
   125  0000                     _TXB2SIDL	set	3842
   126  0000                     _TXB2SIDH	set	3841
   127  0000                     _TXB2EIDL	set	3844
   128  0000                     _TXB2EIDH	set	3843
   129  0000                     _TXB2CONbits	set	3840
   130  0000                     _TXB1D7	set	3869
   131  0000                     _TXB1D6	set	3868
   132  0000                     _TXB1D5	set	3867
   133  0000                     _TXB1D4	set	3866
   134  0000                     _TXB1D3	set	3865
   135  0000                     _TXB1D2	set	3864
   136  0000                     _TXB1D1	set	3863
   137  0000                     _TXB1D0	set	3862
   138  0000                     _TXB1DLC	set	3861
   139  0000                     _TXB1SIDL	set	3858
   140  0000                     _TXB1SIDH	set	3857
   141  0000                     _TXB1EIDL	set	3860
   142  0000                     _TXB1EIDH	set	3859
   143  0000                     _TXB1CONbits	set	3856
   144  0000                     _TXB0D7	set	3885
   145  0000                     _TXB0D6	set	3884
   146  0000                     _TXB0D5	set	3883
   147  0000                     _TXB0D4	set	3882
   148  0000                     _TXB0D3	set	3881
   149  0000                     _TXB0D2	set	3880
   150  0000                     _TXB0D1	set	3879
   151  0000                     _TXB0D0	set	3878
   152  0000                     _TXB0DLC	set	3877
   153  0000                     _TXB0SIDL	set	3874
   154  0000                     _TXB0SIDH	set	3873
   155  0000                     _TXB0EIDL	set	3876
   156  0000                     _TXB0EIDH	set	3875
   157  0000                     _TXB0CONbits	set	3872
   158  0000                     _LATAbits	set	3977
   159  0000                     _LATDbits	set	3980
   160  0000                     _TRISAbits	set	3986
   161  0000                     _LATCbits	set	3979
   162  0000                     _TRISCbits	set	3988
   163  0000                     _TRISDbits	set	3989
   164  0000                     _CIOCONbits	set	3952
   165  0000                     _SSPSTATbits	set	4039
   166  0000                     _SSPBUF	set	4041
   167  0000                     _SSPCON1bits	set	4038
   168  0000                     _SSPADD	set	4040
   169  0000                     _SSPCON1	set	4038
   170  0000                     _SSPSTAT	set	4039
   171  0000                     _TRISD	set	3989
   172  0000                     _TRISC	set	3988
   173  0000                     _TRISB	set	3987
   174  0000                     _TRISA	set	3986
   175  0000                     _TRISE	set	3990
   176  0000                     _LATC	set	3979
   177  0000                     _LATB	set	3978
   178  0000                     _LATA	set	3977
   179  0000                     _LATD	set	3980
   180  0000                     _LATE	set	3981
   181  0000                     _COMSTATbits	set	3953
   182  0000                     _RXB0D7	set	3949
   183  0000                     _RXB0D6	set	3948
   184  0000                     _RXB0D5	set	3947
   185  0000                     _RXB0D4	set	3946
   186  0000                     _RXB0D3	set	3945
   187  0000                     _RXB0D2	set	3944
   188  0000                     _RXB0D1	set	3943
   189  0000                     _RXB0D0	set	3942
   190  0000                     _RXB0DLC	set	3941
   191  0000                     _RXB0SIDH	set	3937
   192  0000                     _RXB0EIDL	set	3940
   193  0000                     _RXB0EIDH	set	3939
   194  0000                     _RXB0SIDL	set	3938
   195  0000                     _RXB0CONbits	set	3936
   196  0000                     _PIE5bits	set	3958
   197  0000                     _PIR5bits	set	3959
   198  0000                     _ECANCON	set	3954
   199  0000                     _CANSTAT	set	3950
   200  0000                     _CANCON	set	3951
   201  0000                     _REFOCON	set	3994
   202  0000                     _OSCTUNE	set	3995
   203  0000                     _OSCCON2	set	4050
   204  0000                     _OSCCON	set	4051
   205  0000                     _TRISA5	set	31893
   206  0000                     _TRISC3	set	31907
   207  0000                     _TRISC5	set	31909
   208                           
   209                           ; #config settings
   210  0000                     
   211                           	psect	cinit
   212  007126                     __pcinit:
   213                           	opt stack 0
   214  007126                     start_initialization:
   215                           	opt stack 0
   216  007126                     __initialization:
   217                           	opt stack 0
   218                           
   219                           ; Clear objects allocated to COMRAM (4 bytes)
   220  007126  6A30               	clrf	(__pbssCOMRAM+3)& (0+255),c
   221  007128  6A2F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   222  00712A  6A2E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   223  00712C  6A2D               	clrf	__pbssCOMRAM& (0+255),c
   224  00712E                     end_of_initialization:
   225                           	opt stack 0
   226  00712E                     __end_of__initialization:
   227                           	opt stack 0
   228  00712E  0100               	movlb	0
   229  007130  EFBE  F039         	goto	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMRAM
   232  00002D                     __pbssCOMRAM:
   233                           	opt stack 0
   234  00002D                     _cmd_offset:
   235                           	opt stack 0
   236  00002D                     	ds	2
   237  00002F                     _dli:
   238                           	opt stack 0
   239  00002F                     	ds	2
   240                           
   241                           	psect	cstackCOMRAM
   242  000001                     __pcstackCOMRAM:
   243                           	opt stack 0
   244  000001                     ??_ECAN_Initialize:
   245  000001                     ?_convertReg2ExtendedCANid:
   246                           	opt stack 0
   247  000001                     ?_convertReg2StandardCANid:
   248                           	opt stack 0
   249  000001                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   250                           	opt stack 0
   251  000001                     convertReg2StandardCANid@tempRXBn_SIDL:
   252                           	opt stack 0
   253  000001                     SPI_Exchange8bit@data:
   254                           	opt stack 0
   255  000001                     convertCANid2Reg@tempPassedInID:
   256                           	opt stack 0
   257                           
   258                           ; 4 bytes @ 0x0
   259  000001                     	ds	1
   260  000002                     ?_rd16:
   261                           	opt stack 0
   262  000002                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   263                           	opt stack 0
   264  000002                     host_command@command:
   265                           	opt stack 0
   266  000002                     wr8@addr:
   267                           	opt stack 0
   268  000002                     wr16@addr:
   269                           	opt stack 0
   270  000002                     wr32@addr:
   271                           	opt stack 0
   272  000002                     rd16@addr:
   273                           	opt stack 0
   274                           
   275                           ; 3 bytes @ 0x1
   276  000002                     	ds	1
   277  000003                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x2
   281  000003                     	ds	2
   282  000005                     ??_convertReg2ExtendedCANid:
   283  000005                     ??_convertReg2StandardCANid:
   284  000005                     ??_rd16:
   285  000005                     convertCANid2Reg@canIdType:
   286                           	opt stack 0
   287  000005                     wr8@value:
   288                           	opt stack 0
   289  000005                     wr16@value:
   290                           	opt stack 0
   291  000005                     wr32@value:
   292                           	opt stack 0
   293                           
   294                           ; 4 bytes @ 0x4
   295  000005                     	ds	1
   296  000006                     ??_wr8:
   297  000006                     convertCANid2Reg@passedInEIDH:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x5
   301  000006                     	ds	1
   302  000007                     ??_wr16:
   303  000007                     convertReg2StandardCANid@tempRXBn_SIDH:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x6
   307  000007                     	ds	1
   308  000008                     rd16@temp:
   309                           	opt stack 0
   310  000008                     convertCANid2Reg@passedInEIDL:
   311                           	opt stack 0
   312  000008                     convertReg2StandardCANid@returnValue:
   313                           	opt stack 0
   314                           
   315                           ; 4 bytes @ 0x7
   316  000008                     	ds	1
   317  000009                     ??_wr32:
   318  000009                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0x8
   322  000009                     	ds	1
   323  00000A                     convertCANid2Reg@passedInSIDH:
   324                           	opt stack 0
   325  00000A                     convertReg2ExtendedCANid@returnValue:
   326                           	opt stack 0
   327                           
   328                           ; 4 bytes @ 0x9
   329  00000A                     	ds	2
   330  00000C                     convertCANid2Reg@passedInSIDL:
   331                           	opt stack 0
   332  00000C                     convertReg2StandardCANid@ConvertedID:
   333                           	opt stack 0
   334                           
   335                           ; 4 bytes @ 0xB
   336  00000C                     	ds	1
   337  00000D                     ??_FT800_Init:
   338                           
   339                           ; 1 bytes @ 0xC
   340  00000D                     	ds	1
   341  00000E                     ??_convertCANid2Reg:
   342  00000E                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0xD
   346  00000E                     	ds	1
   347  00000F                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0xE
   351  00000F                     	ds	1
   352  000010                     convertReg2ExtendedCANid@ConvertedID:
   353                           	opt stack 0
   354                           
   355                           ; 4 bytes @ 0xF
   356  000010                     	ds	2
   357  000012                     convertCANid2Reg@wipSIDL:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x11
   361  000012                     	ds	1
   362  000013                     CAN_transmit@tempCanMsg:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x12
   366  000013                     	ds	1
   367  000014                     CAN_receive@tempCanMsg:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x13
   371  000014                     	ds	1
   372  000015                     CAN_transmit@returnValue:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x14
   376  000015                     	ds	1
   377  000016                     CAN_transmit@tempEIDH:
   378                           	opt stack 0
   379  000016                     CAN_receive@returnValue:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x15
   383  000016                     	ds	1
   384  000017                     CAN_transmit@tempEIDL:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x16
   388  000017                     	ds	1
   389  000018                     CAN_transmit@tempSIDH:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x17
   393  000018                     	ds	1
   394  000019                     CAN_transmit@tempSIDL:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x18
   398  000019                     	ds	1
   399  00001A                     ??_main:
   400                           
   401                           ; 1 bytes @ 0x19
   402  00001A                     	ds	1
   403  00001B                     main@data0:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x1A
   407  00001B                     	ds	2
   408  00001D                     main@data1:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x1C
   412  00001D                     	ds	2
   413  00001F                     main@test:
   414                           	opt stack 0
   415                           
   416                           ; 14 bytes @ 0x1E
   417  00001F                     	ds	14
   418                           
   419 ;;
   420 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   421 ;;
   422 ;; *************** function _main *****************
   423 ;; Defined at:
   424 ;;		line 18 in file "main.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;  data1           2   28[COMRAM] int 
   429 ;;  data0           2   26[COMRAM] int 
   430 ;;  test           14   30[COMRAM] struct .
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   441 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   442 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   443 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   444 ;;Total ram usage:       19 bytes
   445 ;; Hardware stack levels required when called:    3
   446 ;; This function calls:
   447 ;;		_CAN_receive
   448 ;;		_CAN_transmit
   449 ;;		_FT800_Init
   450 ;;		_SYSTEM_Initialize
   451 ;; This function is called by:
   452 ;;		Startup code after reset
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text0
   457  00737C                     __ptext0:
   458                           	opt stack 0
   459  00737C                     _main:
   460                           	opt stack 28
   461                           
   462                           ;main.c: 20: uCAN_MSG test;
   463                           ;main.c: 22: SYSTEM_Initialize();
   464                           
   465                           ;incstack = 0
   466  00737C  ECAB  F038         	call	_SYSTEM_Initialize	;wreg free
   467                           
   468                           ;main.c: 23: CIOCONbits.CLKSEL = 1;
   469  007380  8070               	bsf	3952,0,c	;volatile
   470                           
   471                           ;main.c: 24: CIOCONbits.ENDRHI = 1;
   472  007382  8A70               	bsf	3952,5,c	;volatile
   473                           
   474                           ;main.c: 25: CIOCONbits.TX2SRC = 0;
   475  007384  9E70               	bcf	3952,7,c	;volatile
   476                           
   477                           ;main.c: 26: CIOCONbits.TX2EN = 1;
   478  007386  8C70               	bsf	3952,6,c	;volatile
   479                           
   480                           ;main.c: 28: RXB0CONbits.RXM0 = 1;
   481  007388  8A60               	bsf	3936,5,c	;volatile
   482                           
   483                           ;main.c: 29: RXB0CONbits.RXM1 = 0;
   484  00738A  9C60               	bcf	3936,6,c	;volatile
   485                           
   486                           ;main.c: 30: RXB0CONbits.RB0DBEN = 0;
   487  00738C  9460               	bcf	3936,2,c	;volatile
   488                           
   489                           ;main.c: 31: RXB0CONbits.FILHIT0 = 0;
   490  00738E  9060               	bcf	3936,0,c	;volatile
   491                           
   492                           ;main.c: 34: do { TRISDbits.TRISD0 = 0; } while(0);
   493  007390  9095               	bcf	3989,0,c	;volatile
   494                           
   495                           ;main.c: 37: do { TRISCbits.TRISC0 = 0; } while(0);
   496  007392  9094               	bcf	3988,0,c	;volatile
   497                           
   498                           ;main.c: 38: do { LATCbits.LATC0 = 0; } while(0);
   499  007394  908B               	bcf	3979,0,c	;volatile
   500                           
   501                           ;main.c: 40: do { ANCON0bits.ANSEL1 = 0; } while(0);
   502  007396  010F               	movlb	15	; () banked
   503  007398  935D               	bcf	93,1,b	;volatile
   504                           
   505                           ; BSR set to: 15
   506                           
   507                           ; BSR set to: 15
   508                           
   509                           ;main.c: 41: do { ANCON0bits.ANSEL2 = 0; } while(0);
   510                           
   511                           ; BSR set to: 15
   512  00739A  010F               	movlb	15	; () banked
   513  00739C  955D               	bcf	93,2,b	;volatile
   514                           
   515                           ; BSR set to: 15
   516                           
   517                           ; BSR set to: 15
   518                           
   519                           ;main.c: 42: do { TRISAbits.TRISA1 = 0; } while(0);
   520                           
   521                           ; BSR set to: 15
   522  00739E  9292               	bcf	3986,1,c	;volatile
   523                           
   524                           ; BSR set to: 15
   525                           
   526                           ; BSR set to: 15
   527                           
   528                           ;main.c: 43: do { TRISAbits.TRISA2 = 0; } while(0);
   529                           
   530                           ; BSR set to: 15
   531  0073A0  9492               	bcf	3986,2,c	;volatile
   532                           
   533                           ; BSR set to: 15
   534                           ;main.c: 45: TRISC5 = 0;
   535                           
   536                           ; BSR set to: 15
   537  0073A2  9A94               	bcf	3988,5,c	;volatile
   538                           
   539                           ; BSR set to: 15
   540                           ;main.c: 46: TRISC3 = 0;
   541  0073A4  9694               	bcf	3988,3,c	;volatile
   542                           
   543                           ; BSR set to: 15
   544                           ;main.c: 47: TRISA5 = 1;
   545  0073A6  8A92               	bsf	3986,5,c	;volatile
   546                           
   547                           ; BSR set to: 15
   548                           ;main.c: 49: SSPSTATbits.SMP = 0;
   549  0073A8  9EC7               	bcf	4039,7,c	;volatile
   550                           
   551                           ; BSR set to: 15
   552                           ;main.c: 50: SSPSTATbits.CKE = 1;
   553  0073AA  8CC7               	bsf	4039,6,c	;volatile
   554                           
   555                           ; BSR set to: 15
   556                           ;main.c: 51: SSPCON1bits.SSPEN = 1;
   557  0073AC  8AC6               	bsf	4038,5,c	;volatile
   558                           
   559                           ; BSR set to: 15
   560                           ;main.c: 52: SSPCON1bits.CKP = 1;
   561  0073AE  88C6               	bsf	4038,4,c	;volatile
   562                           
   563                           ; BSR set to: 15
   564                           ;main.c: 53: SSPCON1bits.SSPM = 0b0000;
   565  0073B0  90C6               	bcf	4038,0,c	;volatile
   566  0073B2  92C6               	bcf	4038,1,c	;volatile
   567  0073B4  94C6               	bcf	4038,2,c	;volatile
   568  0073B6  96C6               	bcf	4038,3,c	;volatile
   569                           
   570                           ;main.c: 55: FT800_Init();
   571  0073B8  EC1C  F03D         	call	_FT800_Init	;wreg free
   572                           
   573                           ;main.c: 58: do { LATDbits.LATD0 = 1; } while(0);
   574  0073BC  808C               	bsf	3980,0,c	;volatile
   575  0073BE                     l2176:
   576                           
   577                           ;main.c: 61: {
   578                           ;main.c: 62: int data0 = 222;
   579  0073BE  0E00               	movlw	0
   580  0073C0  6E1C               	movwf	main@data0+1,c
   581  0073C2  0EDE               	movlw	222
   582  0073C4  6E1B               	movwf	main@data0,c
   583                           
   584                           ;main.c: 63: int data1 = 222;
   585  0073C6  0E00               	movlw	0
   586  0073C8  6E1E               	movwf	main@data1+1,c
   587  0073CA  0EDE               	movlw	222
   588  0073CC  6E1D               	movwf	main@data1,c
   589                           
   590                           ;main.c: 64: if(CAN_receive(&test)) {
   591  0073CE  0E1F               	movlw	low main@test
   592  0073D0  6E14               	movwf	CAN_receive@tempCanMsg,c
   593  0073D2  0E00               	movlw	high main@test
   594  0073D4  6E15               	movwf	CAN_receive@tempCanMsg+1,c
   595  0073D6  EC07  F03C         	call	_CAN_receive	;wreg free
   596  0073DA  0900               	iorlw	0
   597  0073DC  B4D8               	btfsc	status,2,c
   598  0073DE  D019               	goto	l454
   599                           
   600                           ;main.c: 65: if(test.frame.id == 0x640) {
   601  0073E0  0E40               	movlw	64
   602  0073E2  1820               	xorwf	main@test+1,w,c
   603  0073E4  E117               	bnz	l2188
   604  0073E6  0E06               	movlw	6
   605  0073E8  1821               	xorwf	main@test+2,w,c
   606  0073EA  1022               	iorwf	main@test+3,w,c
   607  0073EC  1023               	iorwf	main@test+4,w,c
   608  0073EE  A4D8               	btfss	status,2,c
   609  0073F0  D011               	goto	l2188
   610                           
   611                           ;main.c: 66: data0 = test.frame.data0;
   612  0073F2  C025  F01B         	movff	main@test+6,main@data0
   613  0073F6  6A1C               	clrf	main@data0+1,c
   614                           
   615                           ;main.c: 67: data1 = test.frame.data1;
   616  0073F8  C026  F01D         	movff	main@test+7,main@data1
   617  0073FC  6A1E               	clrf	main@data1+1,c
   618                           
   619                           ;main.c: 68: do { LATDbits.LATD0 = 0; } while(0);
   620  0073FE  908C               	bcf	3980,0,c	;volatile
   621                           
   622                           ;main.c: 69: _delay((unsigned long)((20)*(16000000/4000.0)));
   623  007400  0E68               	movlw	104
   624  007402  6E1A               	movwf	??_main& (0+255),c
   625  007404  0EE4               	movlw	228
   626  007406                     u507:
   627  007406  2EE8               	decfsz	wreg,f,c
   628  007408  D7FE               	bra	u507
   629  00740A  2E1A               	decfsz	??_main& (0+255),f,c
   630  00740C  D7FC               	bra	u507
   631  00740E  D000               	nop2	
   632                           
   633                           ;main.c: 70: }
   634                           ;main.c: 71: } else {
   635  007410  D001               	goto	l2188
   636  007412                     l454:
   637  007412  808C               	bsf	3980,0,c	;volatile
   638  007414                     l2188:
   639                           
   640                           ;main.c: 73: }
   641                           ;main.c: 75: test.frame.idType=1;
   642  007414  0E01               	movlw	1
   643  007416  6E1F               	movwf	main@test,c
   644                           
   645                           ;main.c: 76: test.frame.id=0x120;
   646  007418  0E20               	movlw	32
   647  00741A  6E20               	movwf	main@test+1,c
   648  00741C  0E01               	movlw	1
   649  00741E  6E21               	movwf	main@test+2,c
   650  007420  0E00               	movlw	0
   651  007422  6E22               	movwf	main@test+3,c
   652  007424  0E00               	movlw	0
   653  007426  6E23               	movwf	main@test+4,c
   654                           
   655                           ;main.c: 77: test.frame.dlc=8;
   656  007428  0E08               	movlw	8
   657  00742A  6E24               	movwf	main@test+5,c
   658                           
   659                           ;main.c: 78: test.frame.data0= data0;
   660  00742C  C01B  F025         	movff	main@data0,main@test+6
   661                           
   662                           ;main.c: 79: test.frame.data1= data1;
   663  007430  C01D  F026         	movff	main@data1,main@test+7
   664                           
   665                           ;main.c: 81: CAN_transmit(&test);
   666  007434  0E1F               	movlw	low main@test
   667  007436  6E13               	movwf	CAN_transmit@tempCanMsg,c
   668  007438  0E00               	movlw	high main@test
   669  00743A  6E14               	movwf	CAN_transmit@tempCanMsg+1,c
   670  00743C  EC61  F03E         	call	_CAN_transmit	;wreg free
   671  007440  D7BE               	goto	l2176
   672  007442                     __end_of_main:
   673                           	opt stack 0
   674                           wreg	equ	0xFE8
   675                           status	equ	0xFD8
   676                           
   677 ;; *************** function _SYSTEM_Initialize *****************
   678 ;; Defined at:
   679 ;;		line 111 in file "mcc_generated_files/mcc.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, status,2, status,0, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   697 ;;Total ram usage:        0 bytes
   698 ;; Hardware stack levels used:    1
   699 ;; Hardware stack levels required when called:    1
   700 ;; This function calls:
   701 ;;		_ECAN_Initialize
   702 ;;		_OSCILLATOR_Initialize
   703 ;;		_PIN_MANAGER_Initialize
   704 ;;		_SPI_Initialize
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text1
   711  007156                     __ptext1:
   712                           	opt stack 0
   713  007156                     _SYSTEM_Initialize:
   714                           	opt stack 29
   715                           
   716                           ;mcc.c: 114: PIN_MANAGER_Initialize();
   717                           
   718                           ;incstack = 0
   719  007156  ECDC  F038         	call	_PIN_MANAGER_Initialize	;wreg free
   720                           
   721                           ;mcc.c: 115: OSCILLATOR_Initialize();
   722  00715A  ECA2  F038         	call	_OSCILLATOR_Initialize	;wreg free
   723                           
   724                           ;mcc.c: 116: SPI_Initialize();
   725  00715E  EC8C  F038         	call	_SPI_Initialize	;wreg free
   726                           
   727                           ;mcc.c: 117: ECAN_Initialize();
   728  007162  EC21  F03A         	call	_ECAN_Initialize	;wreg free
   729  007166  0012               	return		;funcret
   730  007168                     __end_of_SYSTEM_Initialize:
   731                           	opt stack 0
   732                           wreg	equ	0xFE8
   733                           status	equ	0xFD8
   734                           
   735 ;; *************** function _SPI_Initialize *****************
   736 ;; Defined at:
   737 ;;		line 63 in file "mcc_generated_files/spi.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; This function calls:
   758 ;;		Nothing
   759 ;; This function is called by:
   760 ;;		_SYSTEM_Initialize
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text2
   765  007118                     __ptext2:
   766                           	opt stack 0
   767  007118                     _SPI_Initialize:
   768                           	opt stack 29
   769                           
   770                           ;spi.c: 68: SSPSTAT = 0x00;
   771                           
   772                           ;incstack = 0
   773  007118  0E00               	movlw	0
   774  00711A  6EC7               	movwf	4039,c	;volatile
   775                           
   776                           ;spi.c: 71: SSPCON1 = 0x21;
   777  00711C  0E21               	movlw	33
   778  00711E  6EC6               	movwf	4038,c	;volatile
   779                           
   780                           ;spi.c: 74: SSPADD = 0x00;
   781  007120  0E00               	movlw	0
   782  007122  6EC8               	movwf	4040,c	;volatile
   783  007124  0012               	return		;funcret
   784  007126                     __end_of_SPI_Initialize:
   785                           	opt stack 0
   786                           wreg	equ	0xFE8
   787                           status	equ	0xFD8
   788                           
   789 ;; *************** function _PIN_MANAGER_Initialize *****************
   790 ;; Defined at:
   791 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   809 ;;Total ram usage:        0 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; This function calls:
   812 ;;		Nothing
   813 ;; This function is called by:
   814 ;;		_SYSTEM_Initialize
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text3
   819  0071B8                     __ptext3:
   820                           	opt stack 0
   821  0071B8                     _PIN_MANAGER_Initialize:
   822                           	opt stack 29
   823                           
   824                           ;pin_manager.c: 56: LATE = 0x00;
   825                           
   826                           ;incstack = 0
   827  0071B8  0E00               	movlw	0
   828  0071BA  6E8D               	movwf	3981,c	;volatile
   829                           
   830                           ;pin_manager.c: 57: LATD = 0x00;
   831  0071BC  0E00               	movlw	0
   832  0071BE  6E8C               	movwf	3980,c	;volatile
   833                           
   834                           ;pin_manager.c: 58: LATA = 0x07;
   835  0071C0  0E07               	movlw	7
   836  0071C2  6E89               	movwf	3977,c	;volatile
   837                           
   838                           ;pin_manager.c: 59: LATB = 0x00;
   839  0071C4  0E00               	movlw	0
   840  0071C6  6E8A               	movwf	3978,c	;volatile
   841                           
   842                           ;pin_manager.c: 60: LATC = 0x00;
   843  0071C8  0E00               	movlw	0
   844  0071CA  6E8B               	movwf	3979,c	;volatile
   845                           
   846                           ;pin_manager.c: 65: TRISE = 0x07;
   847  0071CC  0E07               	movlw	7
   848  0071CE  6E96               	movwf	3990,c	;volatile
   849                           
   850                           ;pin_manager.c: 66: TRISA = 0xE9;
   851  0071D0  0EE9               	movlw	233
   852  0071D2  6E92               	movwf	3986,c	;volatile
   853                           
   854                           ;pin_manager.c: 67: TRISB = 0xFB;
   855  0071D4  0EFB               	movlw	251
   856  0071D6  6E93               	movwf	3987,c	;volatile
   857                           
   858                           ;pin_manager.c: 68: TRISC = 0xD6;
   859  0071D8  0ED6               	movlw	214
   860  0071DA  6E94               	movwf	3988,c	;volatile
   861                           
   862                           ;pin_manager.c: 69: TRISD = 0xFE;
   863  0071DC  0EFE               	movlw	254
   864  0071DE  6E95               	movwf	3989,c	;volatile
   865                           
   866                           ;pin_manager.c: 74: ANCON0 = 0xF8;
   867  0071E0  0EF8               	movlw	248
   868  0071E2  010F               	movlb	15	; () banked
   869  0071E4  6F5D               	movwf	93,b	;volatile
   870                           
   871                           ;pin_manager.c: 75: ANCON1 = 0x77;
   872  0071E6  0E77               	movlw	119
   873  0071E8  010F               	movlb	15	; () banked
   874  0071EA  6F5C               	movwf	92,b	;volatile
   875                           
   876                           ; BSR set to: 15
   877                           ;pin_manager.c: 80: WPUB = 0xFF;
   878  0071EC  010F               	movlb	15	; () banked
   879  0071EE  695B               	setf	91,b	;volatile
   880                           
   881                           ; BSR set to: 15
   882  0071F0  0012               	return		;funcret
   883  0071F2                     __end_of_PIN_MANAGER_Initialize:
   884                           	opt stack 0
   885                           wreg	equ	0xFE8
   886                           status	equ	0xFD8
   887                           
   888 ;; *************** function _OSCILLATOR_Initialize *****************
   889 ;; Defined at:
   890 ;;		line 120 in file "mcc_generated_files/mcc.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_SYSTEM_Initialize
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text4
   918  007144                     __ptext4:
   919                           	opt stack 0
   920  007144                     _OSCILLATOR_Initialize:
   921                           	opt stack 29
   922                           
   923                           ;mcc.c: 123: OSCCON = 0x60;
   924                           
   925                           ; BSR set to: 15
   926                           ;incstack = 0
   927  007144  0E60               	movlw	96
   928  007146  6ED3               	movwf	4051,c	;volatile
   929                           
   930                           ;mcc.c: 125: OSCCON2 = 0x00;
   931  007148  0E00               	movlw	0
   932  00714A  6ED2               	movwf	4050,c	;volatile
   933                           
   934                           ;mcc.c: 127: OSCTUNE = 0x00;
   935  00714C  0E00               	movlw	0
   936  00714E  6E9B               	movwf	3995,c	;volatile
   937                           
   938                           ;mcc.c: 129: REFOCON = 0x00;
   939  007150  0E00               	movlw	0
   940  007152  6E9A               	movwf	3994,c	;volatile
   941  007154  0012               	return		;funcret
   942  007156                     __end_of_OSCILLATOR_Initialize:
   943                           	opt stack 0
   944                           wreg	equ	0xFE8
   945                           status	equ	0xFD8
   946                           
   947 ;; *************** function _ECAN_Initialize *****************
   948 ;; Defined at:
   949 ;;		line 63 in file "mcc_generated_files/ecan.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;Total ram usage:        1 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_SYSTEM_Initialize
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text5
   977  007442                     __ptext5:
   978                           	opt stack 0
   979  007442                     _ECAN_Initialize:
   980                           	opt stack 29
   981                           
   982                           ;ecan.c: 65: CANCON = 0x80;
   983                           
   984                           ;incstack = 0
   985  007442  0E80               	movlw	128
   986  007444  6E6F               	movwf	3951,c	;volatile
   987  007446                     l1156:
   988  007446  506E               	movf	3950,w,c	;volatile
   989  007448  0BE0               	andlw	224
   990  00744A  0A80               	xorlw	128
   991  00744C  A4D8               	btfss	status,2,c
   992  00744E  D7FB               	goto	l1156
   993                           
   994                           ;ecan.c: 71: ECANCON = 0x00;
   995  007450  0E00               	movlw	0
   996  007452  6E72               	movwf	3954,c	;volatile
   997                           
   998                           ;ecan.c: 86: RXM0EIDH = 0xFF;
   999  007454  010E               	movlb	14	; () banked
  1000  007456  69FA               	setf	250,b	;volatile
  1001                           
  1002                           ; BSR set to: 14
  1003                           ;ecan.c: 87: RXM0EIDL = 0xFF;
  1004  007458  010E               	movlb	14	; () banked
  1005  00745A  69FB               	setf	251,b	;volatile
  1006                           
  1007                           ; BSR set to: 14
  1008                           ;ecan.c: 88: RXM0SIDH = 0xFF;
  1009  00745C  010E               	movlb	14	; () banked
  1010  00745E  69F8               	setf	248,b	;volatile
  1011                           
  1012                           ; BSR set to: 14
  1013                           ;ecan.c: 89: RXM0SIDL = 0xFF;
  1014  007460  010E               	movlb	14	; () banked
  1015  007462  69F9               	setf	249,b	;volatile
  1016                           
  1017                           ; BSR set to: 14
  1018                           ;ecan.c: 91: RXM1EIDH = 0xFF;
  1019  007464  010E               	movlb	14	; () banked
  1020  007466  69FE               	setf	254,b	;volatile
  1021                           
  1022                           ; BSR set to: 14
  1023                           ;ecan.c: 92: RXM1EIDL = 0xFF;
  1024  007468  010E               	movlb	14	; () banked
  1025  00746A  69FF               	setf	255,b	;volatile
  1026                           
  1027                           ; BSR set to: 14
  1028                           ;ecan.c: 93: RXM1SIDH = 0xFF;
  1029  00746C  010E               	movlb	14	; () banked
  1030  00746E  69FC               	setf	252,b	;volatile
  1031                           
  1032                           ; BSR set to: 14
  1033                           ;ecan.c: 94: RXM1SIDL = 0xFF;
  1034  007470  010E               	movlb	14	; () banked
  1035  007472  69FD               	setf	253,b	;volatile
  1036                           
  1037                           ;ecan.c: 100: RXF0EIDH = 0x00;
  1038  007474  0E00               	movlw	0
  1039  007476  010E               	movlb	14	; () banked
  1040  007478  6FE2               	movwf	226,b	;volatile
  1041                           
  1042                           ;ecan.c: 101: RXF0EIDL = 0x00;
  1043  00747A  0E00               	movlw	0
  1044  00747C  010E               	movlb	14	; () banked
  1045  00747E  6FE3               	movwf	227,b	;volatile
  1046                           
  1047                           ;ecan.c: 102: RXF0SIDH = 0xC8;
  1048  007480  0EC8               	movlw	200
  1049  007482  010E               	movlb	14	; () banked
  1050  007484  6FE0               	movwf	224,b	;volatile
  1051                           
  1052                           ;ecan.c: 103: RXF0SIDL = 0x00;
  1053  007486  0E00               	movlw	0
  1054  007488  010E               	movlb	14	; () banked
  1055  00748A  6FE1               	movwf	225,b	;volatile
  1056                           
  1057                           ;ecan.c: 105: RXF1EIDH = 0x00;
  1058  00748C  0E00               	movlw	0
  1059  00748E  010E               	movlb	14	; () banked
  1060  007490  6FE6               	movwf	230,b	;volatile
  1061                           
  1062                           ;ecan.c: 106: RXF1EIDL = 0x00;
  1063  007492  0E00               	movlw	0
  1064  007494  010E               	movlb	14	; () banked
  1065  007496  6FE7               	movwf	231,b	;volatile
  1066                           
  1067                           ;ecan.c: 107: RXF1SIDH = 0x00;
  1068  007498  0E00               	movlw	0
  1069  00749A  010E               	movlb	14	; () banked
  1070  00749C  6FE4               	movwf	228,b	;volatile
  1071                           
  1072                           ;ecan.c: 108: RXF1SIDL = 0x00;
  1073  00749E  0E00               	movlw	0
  1074  0074A0  010E               	movlb	14	; () banked
  1075  0074A2  6FE5               	movwf	229,b	;volatile
  1076                           
  1077                           ;ecan.c: 110: RXF2EIDH = 0x00;
  1078  0074A4  0E00               	movlw	0
  1079  0074A6  010E               	movlb	14	; () banked
  1080  0074A8  6FEA               	movwf	234,b	;volatile
  1081                           
  1082                           ;ecan.c: 111: RXF2EIDL = 0x00;
  1083  0074AA  0E00               	movlw	0
  1084  0074AC  010E               	movlb	14	; () banked
  1085  0074AE  6FEB               	movwf	235,b	;volatile
  1086                           
  1087                           ;ecan.c: 112: RXF2SIDH = 0x00;
  1088  0074B0  0E00               	movlw	0
  1089  0074B2  010E               	movlb	14	; () banked
  1090  0074B4  6FE8               	movwf	232,b	;volatile
  1091                           
  1092                           ;ecan.c: 113: RXF2SIDL = 0x00;
  1093  0074B6  0E00               	movlw	0
  1094  0074B8  010E               	movlb	14	; () banked
  1095  0074BA  6FE9               	movwf	233,b	;volatile
  1096                           
  1097                           ;ecan.c: 115: RXF3EIDH = 0x00;
  1098  0074BC  0E00               	movlw	0
  1099  0074BE  010E               	movlb	14	; () banked
  1100  0074C0  6FEE               	movwf	238,b	;volatile
  1101                           
  1102                           ;ecan.c: 116: RXF3EIDL = 0x00;
  1103  0074C2  0E00               	movlw	0
  1104  0074C4  010E               	movlb	14	; () banked
  1105  0074C6  6FEF               	movwf	239,b	;volatile
  1106                           
  1107                           ;ecan.c: 117: RXF3SIDH = 0x00;
  1108  0074C8  0E00               	movlw	0
  1109  0074CA  010E               	movlb	14	; () banked
  1110  0074CC  6FEC               	movwf	236,b	;volatile
  1111                           
  1112                           ;ecan.c: 118: RXF3SIDL = 0x00;
  1113  0074CE  0E00               	movlw	0
  1114  0074D0  010E               	movlb	14	; () banked
  1115  0074D2  6FED               	movwf	237,b	;volatile
  1116                           
  1117                           ;ecan.c: 120: RXF4EIDH = 0x00;
  1118  0074D4  0E00               	movlw	0
  1119  0074D6  010E               	movlb	14	; () banked
  1120  0074D8  6FF2               	movwf	242,b	;volatile
  1121                           
  1122                           ;ecan.c: 121: RXF4EIDL = 0x00;
  1123  0074DA  0E00               	movlw	0
  1124  0074DC  010E               	movlb	14	; () banked
  1125  0074DE  6FF3               	movwf	243,b	;volatile
  1126                           
  1127                           ;ecan.c: 122: RXF4SIDH = 0x00;
  1128  0074E0  0E00               	movlw	0
  1129  0074E2  010E               	movlb	14	; () banked
  1130  0074E4  6FF0               	movwf	240,b	;volatile
  1131                           
  1132                           ;ecan.c: 123: RXF4SIDL = 0x00;
  1133  0074E6  0E00               	movlw	0
  1134  0074E8  010E               	movlb	14	; () banked
  1135  0074EA  6FF1               	movwf	241,b	;volatile
  1136                           
  1137                           ;ecan.c: 125: RXF5EIDH = 0x00;
  1138  0074EC  0E00               	movlw	0
  1139  0074EE  010E               	movlb	14	; () banked
  1140  0074F0  6FF6               	movwf	246,b	;volatile
  1141                           
  1142                           ;ecan.c: 126: RXF5EIDL = 0x00;
  1143  0074F2  0E00               	movlw	0
  1144  0074F4  010E               	movlb	14	; () banked
  1145  0074F6  6FF7               	movwf	247,b	;volatile
  1146                           
  1147                           ;ecan.c: 127: RXF5SIDH = 0x00;
  1148  0074F8  0E00               	movlw	0
  1149  0074FA  010E               	movlb	14	; () banked
  1150  0074FC  6FF4               	movwf	244,b	;volatile
  1151                           
  1152                           ;ecan.c: 128: RXF5SIDL = 0x00;
  1153  0074FE  0E00               	movlw	0
  1154  007500  010E               	movlb	14	; () banked
  1155  007502  6FF5               	movwf	245,b	;volatile
  1156                           
  1157                           ;ecan.c: 143: BRGCON1 = 0x00;
  1158  007504  0E00               	movlw	0
  1159  007506  010E               	movlb	14	; () banked
  1160  007508  6F43               	movwf	67,b	;volatile
  1161                           
  1162                           ;ecan.c: 144: BRGCON2 = 0x98;
  1163  00750A  0E98               	movlw	152
  1164  00750C  010E               	movlb	14	; () banked
  1165  00750E  6F44               	movwf	68,b	;volatile
  1166                           
  1167                           ;ecan.c: 145: BRGCON3 = 0x01;
  1168  007510  0E01               	movlw	1
  1169  007512  010E               	movlb	14	; () banked
  1170  007514  6F45               	movwf	69,b	;volatile
  1171                           
  1172                           ;ecan.c: 147: CANCON = 0x00;
  1173  007516  0E00               	movlw	0
  1174  007518  6E6F               	movwf	3951,c	;volatile
  1175  00751A                     l1176:
  1176  00751A  CF6E F001          	movff	3950,??_ECAN_Initialize	;volatile
  1177  00751E  0EE0               	movlw	224
  1178  007520  1601               	andwf	??_ECAN_Initialize,f,c
  1179  007522  B4D8               	btfsc	status,2,c
  1180  007524  0012               	return	
  1181  007526  D7F9               	goto	l1176
  1182  007528                     __end_of_ECAN_Initialize:
  1183                           	opt stack 0
  1184                           wreg	equ	0xFE8
  1185                           status	equ	0xFD8
  1186                           
  1187 ;; *************** function _FT800_Init *****************
  1188 ;; Defined at:
  1189 ;;		line 139 in file "Gue/FT800.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2, status,0, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1207 ;;Total ram usage:        1 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    2
  1210 ;; This function calls:
  1211 ;;		_host_command
  1212 ;;		_rd16
  1213 ;;		_wr16
  1214 ;;		_wr32
  1215 ;;		_wr8
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text6
  1222  007A38                     __ptext6:
  1223                           	opt stack 0
  1224  007A38                     _FT800_Init:
  1225                           	opt stack 28
  1226                           
  1227                           ;FT800.c: 141: LATAbits.LATA2 = 0;
  1228                           
  1229                           ;incstack = 0
  1230  007A38  9489               	bcf	3977,2,c	;volatile
  1231                           
  1232                           ;FT800.c: 142: _delay((unsigned long)((20)*(16000000/4000.0)));
  1233  007A3A  0E68               	movlw	104
  1234  007A3C  6E0D               	movwf	??_FT800_Init& (0+255),c
  1235  007A3E  0EE4               	movlw	228
  1236  007A40                     u517:
  1237  007A40  2EE8               	decfsz	wreg,f,c
  1238  007A42  D7FE               	bra	u517
  1239  007A44  2E0D               	decfsz	??_FT800_Init& (0+255),f,c
  1240  007A46  D7FC               	bra	u517
  1241  007A48  D000               	nop2	
  1242                           
  1243                           ;FT800.c: 143: LATAbits.LATA2 = 1;
  1244  007A4A  8489               	bsf	3977,2,c	;volatile
  1245                           
  1246                           ;FT800.c: 144: _delay((unsigned long)((20)*(16000000/4000.0)));
  1247  007A4C  0E68               	movlw	104
  1248  007A4E  6E0D               	movwf	??_FT800_Init& (0+255),c
  1249  007A50  0EE4               	movlw	228
  1250  007A52                     u527:
  1251  007A52  2EE8               	decfsz	wreg,f,c
  1252  007A54  D7FE               	bra	u527
  1253  007A56  2E0D               	decfsz	??_FT800_Init& (0+255),f,c
  1254  007A58  D7FC               	bra	u527
  1255  007A5A  D000               	nop2	
  1256                           
  1257                           ;FT800.c: 146: host_command(0x00);
  1258  007A5C  0E00               	movlw	0
  1259  007A5E  ECB4  F038         	call	_host_command
  1260                           
  1261                           ;FT800.c: 148: host_command(0x44);
  1262  007A62  0E44               	movlw	68
  1263  007A64  ECB4  F038         	call	_host_command
  1264                           
  1265                           ;FT800.c: 150: host_command(0x62);
  1266  007A68  0E62               	movlw	98
  1267  007A6A  ECB4  F038         	call	_host_command
  1268                           
  1269                           ;FT800.c: 153: wr16(1057840UL, 480);
  1270  007A6E  0E30               	movlw	48
  1271  007A70  6E02               	movwf	wr16@addr,c
  1272  007A72  0E24               	movlw	36
  1273  007A74  6E03               	movwf	wr16@addr+1,c
  1274  007A76  0E10               	movlw	16
  1275  007A78  6E04               	movwf	wr16@addr+2,c
  1276  007A7A  0E01               	movlw	1
  1277  007A7C  6E06               	movwf	wr16@value+1,c
  1278  007A7E  0EE0               	movlw	224
  1279  007A80  6E05               	movwf	wr16@value,c
  1280  007A82  ECF9  F038         	call	_wr16	;wreg free
  1281                           
  1282                           ;FT800.c: 154: wr16(1057860UL, 272);
  1283  007A86  0E44               	movlw	68
  1284  007A88  6E02               	movwf	wr16@addr,c
  1285  007A8A  0E24               	movlw	36
  1286  007A8C  6E03               	movwf	wr16@addr+1,c
  1287  007A8E  0E10               	movlw	16
  1288  007A90  6E04               	movwf	wr16@addr+2,c
  1289  007A92  0E01               	movlw	1
  1290  007A94  6E06               	movwf	wr16@value+1,c
  1291  007A96  0E10               	movlw	16
  1292  007A98  6E05               	movwf	wr16@value,c
  1293  007A9A  ECF9  F038         	call	_wr16	;wreg free
  1294                           
  1295                           ;FT800.c: 155: wr16(1057832UL, 525);
  1296  007A9E  0E28               	movlw	40
  1297  007AA0  6E02               	movwf	wr16@addr,c
  1298  007AA2  0E24               	movlw	36
  1299  007AA4  6E03               	movwf	wr16@addr+1,c
  1300  007AA6  0E10               	movlw	16
  1301  007AA8  6E04               	movwf	wr16@addr+2,c
  1302  007AAA  0E02               	movlw	2
  1303  007AAC  6E06               	movwf	wr16@value+1,c
  1304  007AAE  0E0D               	movlw	13
  1305  007AB0  6E05               	movwf	wr16@value,c
  1306  007AB2  ECF9  F038         	call	_wr16	;wreg free
  1307                           
  1308                           ;FT800.c: 156: wr16(1057844UL, 0);
  1309  007AB6  0E34               	movlw	52
  1310  007AB8  6E02               	movwf	wr16@addr,c
  1311  007ABA  0E24               	movlw	36
  1312  007ABC  6E03               	movwf	wr16@addr+1,c
  1313  007ABE  0E10               	movlw	16
  1314  007AC0  6E04               	movwf	wr16@addr+2,c
  1315  007AC2  0E00               	movlw	0
  1316  007AC4  6E06               	movwf	wr16@value+1,c
  1317  007AC6  0E00               	movlw	0
  1318  007AC8  6E05               	movwf	wr16@value,c
  1319  007ACA  ECF9  F038         	call	_wr16	;wreg free
  1320                           
  1321                           ;FT800.c: 157: wr16(1057848UL, 41);
  1322  007ACE  0E38               	movlw	56
  1323  007AD0  6E02               	movwf	wr16@addr,c
  1324  007AD2  0E24               	movlw	36
  1325  007AD4  6E03               	movwf	wr16@addr+1,c
  1326  007AD6  0E10               	movlw	16
  1327  007AD8  6E04               	movwf	wr16@addr+2,c
  1328  007ADA  0E00               	movlw	0
  1329  007ADC  6E06               	movwf	wr16@value+1,c
  1330  007ADE  0E29               	movlw	41
  1331  007AE0  6E05               	movwf	wr16@value,c
  1332  007AE2  ECF9  F038         	call	_wr16	;wreg free
  1333                           
  1334                           ;FT800.c: 158: wr16(1057836UL, 43);
  1335  007AE6  0E2C               	movlw	44
  1336  007AE8  6E02               	movwf	wr16@addr,c
  1337  007AEA  0E24               	movlw	36
  1338  007AEC  6E03               	movwf	wr16@addr+1,c
  1339  007AEE  0E10               	movlw	16
  1340  007AF0  6E04               	movwf	wr16@addr+2,c
  1341  007AF2  0E00               	movlw	0
  1342  007AF4  6E06               	movwf	wr16@value+1,c
  1343  007AF6  0E2B               	movlw	43
  1344  007AF8  6E05               	movwf	wr16@value,c
  1345  007AFA  ECF9  F038         	call	_wr16	;wreg free
  1346                           
  1347                           ;FT800.c: 159: wr16(1057852UL, 286);
  1348  007AFE  0E3C               	movlw	60
  1349  007B00  6E02               	movwf	wr16@addr,c
  1350  007B02  0E24               	movlw	36
  1351  007B04  6E03               	movwf	wr16@addr+1,c
  1352  007B06  0E10               	movlw	16
  1353  007B08  6E04               	movwf	wr16@addr+2,c
  1354  007B0A  0E01               	movlw	1
  1355  007B0C  6E06               	movwf	wr16@value+1,c
  1356  007B0E  0E1E               	movlw	30
  1357  007B10  6E05               	movwf	wr16@value,c
  1358  007B12  ECF9  F038         	call	_wr16	;wreg free
  1359                           
  1360                           ;FT800.c: 160: wr16(1057864UL, 0);
  1361  007B16  0E48               	movlw	72
  1362  007B18  6E02               	movwf	wr16@addr,c
  1363  007B1A  0E24               	movlw	36
  1364  007B1C  6E03               	movwf	wr16@addr+1,c
  1365  007B1E  0E10               	movlw	16
  1366  007B20  6E04               	movwf	wr16@addr+2,c
  1367  007B22  0E00               	movlw	0
  1368  007B24  6E06               	movwf	wr16@value+1,c
  1369  007B26  0E00               	movlw	0
  1370  007B28  6E05               	movwf	wr16@value,c
  1371  007B2A  ECF9  F038         	call	_wr16	;wreg free
  1372                           
  1373                           ;FT800.c: 161: wr16(1057868UL, 10);
  1374  007B2E  0E4C               	movlw	76
  1375  007B30  6E02               	movwf	wr16@addr,c
  1376  007B32  0E24               	movlw	36
  1377  007B34  6E03               	movwf	wr16@addr+1,c
  1378  007B36  0E10               	movlw	16
  1379  007B38  6E04               	movwf	wr16@addr+2,c
  1380  007B3A  0E00               	movlw	0
  1381  007B3C  6E06               	movwf	wr16@value+1,c
  1382  007B3E  0E0A               	movlw	10
  1383  007B40  6E05               	movwf	wr16@value,c
  1384  007B42  ECF9  F038         	call	_wr16	;wreg free
  1385                           
  1386                           ;FT800.c: 162: wr16(1057856UL, 12);
  1387  007B46  0E40               	movlw	64
  1388  007B48  6E02               	movwf	wr16@addr,c
  1389  007B4A  0E24               	movlw	36
  1390  007B4C  6E03               	movwf	wr16@addr+1,c
  1391  007B4E  0E10               	movlw	16
  1392  007B50  6E04               	movwf	wr16@addr+2,c
  1393  007B52  0E00               	movlw	0
  1394  007B54  6E06               	movwf	wr16@value+1,c
  1395  007B56  0E0C               	movlw	12
  1396  007B58  6E05               	movwf	wr16@value,c
  1397  007B5A  ECF9  F038         	call	_wr16	;wreg free
  1398                           
  1399                           ;FT800.c: 163: wr8(1057892UL, 0);
  1400  007B5E  0E64               	movlw	100
  1401  007B60  6E02               	movwf	wr8@addr,c
  1402  007B62  0E24               	movlw	36
  1403  007B64  6E03               	movwf	wr8@addr+1,c
  1404  007B66  0E10               	movlw	16
  1405  007B68  6E04               	movwf	wr8@addr+2,c
  1406  007B6A  0E00               	movlw	0
  1407  007B6C  6E05               	movwf	wr8@value,c
  1408  007B6E  ECC1  F038         	call	_wr8	;wreg free
  1409                           
  1410                           ;FT800.c: 164: wr8(1057884UL, 0);
  1411  007B72  0E5C               	movlw	92
  1412  007B74  6E02               	movwf	wr8@addr,c
  1413  007B76  0E24               	movlw	36
  1414  007B78  6E03               	movwf	wr8@addr+1,c
  1415  007B7A  0E10               	movlw	16
  1416  007B7C  6E04               	movwf	wr8@addr+2,c
  1417  007B7E  0E00               	movlw	0
  1418  007B80  6E05               	movwf	wr8@value,c
  1419  007B82  ECC1  F038         	call	_wr8	;wreg free
  1420                           
  1421                           ;FT800.c: 165: wr16(1057880UL, 0x01B6);
  1422  007B86  0E58               	movlw	88
  1423  007B88  6E02               	movwf	wr16@addr,c
  1424  007B8A  0E24               	movlw	36
  1425  007B8C  6E03               	movwf	wr16@addr+1,c
  1426  007B8E  0E10               	movlw	16
  1427  007B90  6E04               	movwf	wr16@addr+2,c
  1428  007B92  0E01               	movlw	1
  1429  007B94  6E06               	movwf	wr16@value+1,c
  1430  007B96  0EB6               	movlw	182
  1431  007B98  6E05               	movwf	wr16@value,c
  1432  007B9A  ECF9  F038         	call	_wr16	;wreg free
  1433                           
  1434                           ;FT800.c: 166: wr8(1057888UL, 0x0000);
  1435  007B9E  0E60               	movlw	96
  1436  007BA0  6E02               	movwf	wr8@addr,c
  1437  007BA2  0E24               	movlw	36
  1438  007BA4  6E03               	movwf	wr8@addr+1,c
  1439  007BA6  0E10               	movlw	16
  1440  007BA8  6E04               	movwf	wr8@addr+2,c
  1441  007BAA  0E00               	movlw	0
  1442  007BAC  6E05               	movwf	wr8@value,c
  1443  007BAE  ECC1  F038         	call	_wr8	;wreg free
  1444                           
  1445                           ;FT800.c: 169: wr8(1057896UL, 0);
  1446  007BB2  0E68               	movlw	104
  1447  007BB4  6E02               	movwf	wr8@addr,c
  1448  007BB6  0E24               	movlw	36
  1449  007BB8  6E03               	movwf	wr8@addr+1,c
  1450  007BBA  0E10               	movlw	16
  1451  007BBC  6E04               	movwf	wr8@addr+2,c
  1452  007BBE  0E00               	movlw	0
  1453  007BC0  6E05               	movwf	wr8@value,c
  1454  007BC2  ECC1  F038         	call	_wr8	;wreg free
  1455                           
  1456                           ;FT800.c: 171: wr8(1057876UL, 0);
  1457  007BC6  0E54               	movlw	84
  1458  007BC8  6E02               	movwf	wr8@addr,c
  1459  007BCA  0E24               	movlw	36
  1460  007BCC  6E03               	movwf	wr8@addr+1,c
  1461  007BCE  0E10               	movlw	16
  1462  007BD0  6E04               	movwf	wr8@addr+2,c
  1463  007BD2  0E00               	movlw	0
  1464  007BD4  6E05               	movwf	wr8@value,c
  1465  007BD6  ECC1  F038         	call	_wr8	;wreg free
  1466                           
  1467                           ;FT800.c: 178: wr32(1048576UL+0,((2UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&
      +                          255UL)<<0)));
  1468  007BDA  0E00               	movlw	0
  1469  007BDC  6E02               	movwf	wr32@addr,c
  1470  007BDE  0E00               	movlw	0
  1471  007BE0  6E03               	movwf	wr32@addr+1,c
  1472  007BE2  0E10               	movlw	16
  1473  007BE4  6E04               	movwf	wr32@addr+2,c
  1474  007BE6  0E00               	movlw	0
  1475  007BE8  6E05               	movwf	wr32@value,c
  1476  007BEA  0EFF               	movlw	255
  1477  007BEC  6E06               	movwf	wr32@value+1,c
  1478  007BEE  0EFF               	movlw	255
  1479  007BF0  6E07               	movwf	wr32@value+2,c
  1480  007BF2  0E02               	movlw	2
  1481  007BF4  6E08               	movwf	wr32@value+3,c
  1482  007BF6  EC3F  F039         	call	_wr32	;wreg free
  1483                           
  1484                           ;FT800.c: 179: wr32(1048576UL+4,((38UL<<24)|(((1)&1UL)<<2)|(((1)&1UL)<<1)|(((1)&1UL)<<0)
      +                          ));
  1485  007BFA  0E04               	movlw	4
  1486  007BFC  6E02               	movwf	wr32@addr,c
  1487  007BFE  0E00               	movlw	0
  1488  007C00  6E03               	movwf	wr32@addr+1,c
  1489  007C02  0E10               	movlw	16
  1490  007C04  6E04               	movwf	wr32@addr+2,c
  1491  007C06  0E07               	movlw	7
  1492  007C08  6E05               	movwf	wr32@value,c
  1493  007C0A  0E00               	movlw	0
  1494  007C0C  6E06               	movwf	wr32@value+1,c
  1495  007C0E  0E00               	movlw	0
  1496  007C10  6E07               	movwf	wr32@value+2,c
  1497  007C12  0E26               	movlw	38
  1498  007C14  6E08               	movwf	wr32@value+3,c
  1499  007C16  EC3F  F039         	call	_wr32	;wreg free
  1500                           
  1501                           ;FT800.c: 180: wr32(1048576UL+8,((0UL<<24)));
  1502  007C1A  0E08               	movlw	8
  1503  007C1C  6E02               	movwf	wr32@addr,c
  1504  007C1E  0E00               	movlw	0
  1505  007C20  6E03               	movwf	wr32@addr+1,c
  1506  007C22  0E10               	movlw	16
  1507  007C24  6E04               	movwf	wr32@addr+2,c
  1508  007C26  0E00               	movlw	0
  1509  007C28  6E05               	movwf	wr32@value,c
  1510  007C2A  0E00               	movlw	0
  1511  007C2C  6E06               	movwf	wr32@value+1,c
  1512  007C2E  0E00               	movlw	0
  1513  007C30  6E07               	movwf	wr32@value+2,c
  1514  007C32  0E00               	movlw	0
  1515  007C34  6E08               	movwf	wr32@value+3,c
  1516  007C36  EC3F  F039         	call	_wr32	;wreg free
  1517                           
  1518                           ;FT800.c: 182: wr8(1057872UL,2UL);
  1519  007C3A  0E50               	movlw	80
  1520  007C3C  6E02               	movwf	wr8@addr,c
  1521  007C3E  0E24               	movlw	36
  1522  007C40  6E03               	movwf	wr8@addr+1,c
  1523  007C42  0E10               	movlw	16
  1524  007C44  6E04               	movwf	wr8@addr+2,c
  1525  007C46  0E02               	movlw	2
  1526  007C48  6E05               	movwf	wr8@value,c
  1527  007C4A  ECC1  F038         	call	_wr8	;wreg free
  1528                           
  1529                           ;FT800.c: 187: wr8(1057932UL, 0xfc);
  1530  007C4E  0E8C               	movlw	140
  1531  007C50  6E02               	movwf	wr8@addr,c
  1532  007C52  0E24               	movlw	36
  1533  007C54  6E03               	movwf	wr8@addr+1,c
  1534  007C56  0E10               	movlw	16
  1535  007C58  6E04               	movwf	wr8@addr+2,c
  1536  007C5A  0EFC               	movlw	252
  1537  007C5C  6E05               	movwf	wr8@value,c
  1538  007C5E  ECC1  F038         	call	_wr8	;wreg free
  1539                           
  1540                           ;FT800.c: 188: wr8(1057936UL, 0xff);
  1541  007C62  0E90               	movlw	144
  1542  007C64  6E02               	movwf	wr8@addr,c
  1543  007C66  0E24               	movlw	36
  1544  007C68  6E03               	movwf	wr8@addr+1,c
  1545  007C6A  0E10               	movlw	16
  1546  007C6C  6E04               	movwf	wr8@addr+2,c
  1547  007C6E  0EFF               	movlw	255
  1548  007C70  6E05               	movwf	wr8@value,c
  1549  007C72  ECC1  F038         	call	_wr8	;wreg free
  1550                           
  1551                           ;FT800.c: 190: wr8(1057900UL,5);
  1552  007C76  0E6C               	movlw	108
  1553  007C78  6E02               	movwf	wr8@addr,c
  1554  007C7A  0E24               	movlw	36
  1555  007C7C  6E03               	movwf	wr8@addr+1,c
  1556  007C7E  0E10               	movlw	16
  1557  007C80  6E04               	movwf	wr8@addr+2,c
  1558  007C82  0E05               	movlw	5
  1559  007C84  6E05               	movwf	wr8@value,c
  1560  007C86  ECC1  F038         	call	_wr8	;wreg free
  1561                           
  1562                           ;FT800.c: 192: cmd_offset=rd16(1058024UL);while(rd16(1058020UL) != cmd_offset);
  1563  007C8A  0EE8               	movlw	232
  1564  007C8C  6E02               	movwf	rd16@addr,c
  1565  007C8E  0E24               	movlw	36
  1566  007C90  6E03               	movwf	rd16@addr+1,c
  1567  007C92  0E10               	movlw	16
  1568  007C94  6E04               	movwf	rd16@addr+2,c
  1569  007C96  EC17  F039         	call	_rd16	;wreg free
  1570  007C9A  C002  F02D         	movff	?_rd16,_cmd_offset
  1571  007C9E  C003  F02E         	movff	?_rd16+1,_cmd_offset+1
  1572  007CA2                     l2124:
  1573  007CA2  0EE4               	movlw	228
  1574  007CA4  6E02               	movwf	rd16@addr,c
  1575  007CA6  0E24               	movlw	36
  1576  007CA8  6E03               	movwf	rd16@addr+1,c
  1577  007CAA  0E10               	movlw	16
  1578  007CAC  6E04               	movwf	rd16@addr+2,c
  1579  007CAE  EC17  F039         	call	_rd16	;wreg free
  1580  007CB2  502D               	movf	_cmd_offset,w,c
  1581  007CB4  1802               	xorwf	?_rd16,w,c
  1582  007CB6  E1F5               	bnz	l2124
  1583  007CB8  502E               	movf	_cmd_offset+1,w,c
  1584  007CBA  1803               	xorwf	?_rd16+1,w,c
  1585  007CBC  B4D8               	btfsc	status,2,c
  1586  007CBE  0012               	return	
  1587  007CC0  D7F0               	goto	l2124
  1588  007CC2                     __end_of_FT800_Init:
  1589                           	opt stack 0
  1590                           wreg	equ	0xFE8
  1591                           status	equ	0xFD8
  1592                           
  1593 ;; *************** function _wr8 *****************
  1594 ;; Defined at:
  1595 ;;		line 16 in file "Gue/FT800.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;  addr            3    1[COMRAM] unsigned um
  1598 ;;  value           1    4[COMRAM] unsigned char 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1612 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1613 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1614 ;;Total ram usage:        7 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    1
  1617 ;; This function calls:
  1618 ;;		_SPI_Exchange8bit
  1619 ;; This function is called by:
  1620 ;;		_FT800_Init
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text7
  1625  007182                     __ptext7:
  1626                           	opt stack 0
  1627  007182                     _wr8:
  1628                           	opt stack 28
  1629                           
  1630                           ;FT800.c: 17: LATAbits.LATA1 = 0;
  1631                           
  1632                           ;incstack = 0
  1633  007182  9289               	bcf	3977,1,c	;volatile
  1634                           
  1635                           ;FT800.c: 18: SPI_Exchange8bit(0x80 | (addr >> 16));
  1636  007184  5004               	movf	wr8@addr+2,w,c
  1637  007186  0980               	iorlw	128
  1638  007188  EC9A  F038         	call	_SPI_Exchange8bit
  1639                           
  1640                           ;FT800.c: 19: SPI_Exchange8bit(addr >> 8);
  1641  00718C  C002  F006         	movff	wr8@addr,??_wr8
  1642  007190  C003  F007         	movff	wr8@addr+1,??_wr8+1
  1643  007194  C004  F008         	movff	wr8@addr+2,??_wr8+2
  1644  007198  C007  F006         	movff	??_wr8+1,??_wr8
  1645  00719C  C008  F007         	movff	??_wr8+2,??_wr8+1
  1646  0071A0  6A08               	clrf	??_wr8+2,c
  1647  0071A2  5006               	movf	??_wr8,w,c
  1648  0071A4  EC9A  F038         	call	_SPI_Exchange8bit
  1649                           
  1650                           ;FT800.c: 20: SPI_Exchange8bit(addr);
  1651  0071A8  5002               	movf	wr8@addr,w,c
  1652  0071AA  EC9A  F038         	call	_SPI_Exchange8bit
  1653                           
  1654                           ;FT800.c: 21: SPI_Exchange8bit(value);
  1655  0071AE  5005               	movf	wr8@value,w,c
  1656  0071B0  EC9A  F038         	call	_SPI_Exchange8bit
  1657                           
  1658                           ;FT800.c: 22: LATAbits.LATA1 = 1;
  1659  0071B4  8289               	bsf	3977,1,c	;volatile
  1660  0071B6  0012               	return		;funcret
  1661  0071B8                     __end_of_wr8:
  1662                           	opt stack 0
  1663                           wreg	equ	0xFE8
  1664                           status	equ	0xFD8
  1665                           
  1666 ;; *************** function _wr32 *****************
  1667 ;; Defined at:
  1668 ;;		line 34 in file "Gue/FT800.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  addr            3    1[COMRAM] unsigned um
  1671 ;;  value           4    4[COMRAM] unsigned long 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1683 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1685 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1686 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1687 ;;Total ram usage:       11 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    1
  1690 ;; This function calls:
  1691 ;;		_SPI_Exchange8bit
  1692 ;; This function is called by:
  1693 ;;		_FT800_Init
  1694 ;;		_cmd
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text8
  1699  00727E                     __ptext8:
  1700                           	opt stack 0
  1701  00727E                     _wr32:
  1702                           	opt stack 28
  1703                           
  1704                           ;FT800.c: 35: LATAbits.LATA1 = 0;
  1705                           
  1706                           ;incstack = 0
  1707  00727E  9289               	bcf	3977,1,c	;volatile
  1708                           
  1709                           ;FT800.c: 36: SPI_Exchange8bit(0x80 | (addr >> 16));
  1710  007280  5004               	movf	wr32@addr+2,w,c
  1711  007282  0980               	iorlw	128
  1712  007284  EC9A  F038         	call	_SPI_Exchange8bit
  1713                           
  1714                           ;FT800.c: 37: SPI_Exchange8bit(addr >> 8);
  1715  007288  C002  F009         	movff	wr32@addr,??_wr32
  1716  00728C  C003  F00A         	movff	wr32@addr+1,??_wr32+1
  1717  007290  C004  F00B         	movff	wr32@addr+2,??_wr32+2
  1718  007294  C00A  F009         	movff	??_wr32+1,??_wr32
  1719  007298  C00B  F00A         	movff	??_wr32+2,??_wr32+1
  1720  00729C  6A0B               	clrf	??_wr32+2,c
  1721  00729E  5009               	movf	??_wr32,w,c
  1722  0072A0  EC9A  F038         	call	_SPI_Exchange8bit
  1723                           
  1724                           ;FT800.c: 38: SPI_Exchange8bit(addr);
  1725  0072A4  5002               	movf	wr32@addr,w,c
  1726  0072A6  EC9A  F038         	call	_SPI_Exchange8bit
  1727                           
  1728                           ;FT800.c: 39: SPI_Exchange8bit(((value) & 0xFFFF) & 0xFF);SPI_Exchange8bit((((value) & 0
      +                          xFFFF) >> 8) & 0xFF);SPI_Exchange8bit((((value) >> 16) & 0xFFFF) & 0xFF);SPI_Exchange8bi
      +                          t(((((value) >> 16) & 0xFFFF) >> 8) & 0xFF);
  1729  0072AA  5005               	movf	wr32@value,w,c
  1730  0072AC  EC9A  F038         	call	_SPI_Exchange8bit
  1731  0072B0  5006               	movf	wr32@value+1,w,c
  1732  0072B2  EC9A  F038         	call	_SPI_Exchange8bit
  1733  0072B6  5007               	movf	wr32@value+2,w,c
  1734  0072B8  EC9A  F038         	call	_SPI_Exchange8bit
  1735  0072BC  C005  F009         	movff	wr32@value,??_wr32
  1736  0072C0  C006  F00A         	movff	wr32@value+1,??_wr32+1
  1737  0072C4  C007  F00B         	movff	wr32@value+2,??_wr32+2
  1738  0072C8  C008  F00C         	movff	wr32@value+3,??_wr32+3
  1739  0072CC  0E11               	movlw	17
  1740  0072CE  D005               	goto	u390
  1741  0072D0                     u395:
  1742  0072D0  90D8               	bcf	status,0,c
  1743  0072D2  320C               	rrcf	??_wr32+3,f,c
  1744  0072D4  320B               	rrcf	??_wr32+2,f,c
  1745  0072D6  320A               	rrcf	??_wr32+1,f,c
  1746  0072D8  3209               	rrcf	??_wr32,f,c
  1747  0072DA                     u390:
  1748  0072DA  2EE8               	decfsz	wreg,f,c
  1749  0072DC  D7F9               	goto	u395
  1750  0072DE  C00A  F009         	movff	??_wr32+1,??_wr32
  1751  0072E2  C00B  F00A         	movff	??_wr32+2,??_wr32+1
  1752  0072E6  C00C  F00B         	movff	??_wr32+3,??_wr32+2
  1753  0072EA  6A0C               	clrf	??_wr32+3,c
  1754  0072EC  5009               	movf	??_wr32,w,c
  1755  0072EE  EC9A  F038         	call	_SPI_Exchange8bit
  1756                           
  1757                           ;FT800.c: 40: LATAbits.LATA1 = 1;
  1758  0072F2  8289               	bsf	3977,1,c	;volatile
  1759  0072F4  0012               	return		;funcret
  1760  0072F6                     __end_of_wr32:
  1761                           	opt stack 0
  1762                           wreg	equ	0xFE8
  1763                           status	equ	0xFD8
  1764                           
  1765 ;; *************** function _wr16 *****************
  1766 ;; Defined at:
  1767 ;;		line 25 in file "Gue/FT800.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  addr            3    1[COMRAM] unsigned um
  1770 ;;  value           2    4[COMRAM] unsigned int 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2, status,0, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1782 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1784 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;Total ram usage:        8 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    1
  1789 ;; This function calls:
  1790 ;;		_SPI_Exchange8bit
  1791 ;; This function is called by:
  1792 ;;		_FT800_Init
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text9
  1797  0071F2                     __ptext9:
  1798                           	opt stack 0
  1799  0071F2                     _wr16:
  1800                           	opt stack 28
  1801                           
  1802                           ;FT800.c: 26: LATAbits.LATA1 = 0;
  1803                           
  1804                           ;incstack = 0
  1805  0071F2  9289               	bcf	3977,1,c	;volatile
  1806                           
  1807                           ;FT800.c: 27: SPI_Exchange8bit(0x80 | (addr >> 16));
  1808  0071F4  5004               	movf	wr16@addr+2,w,c
  1809  0071F6  0980               	iorlw	128
  1810  0071F8  EC9A  F038         	call	_SPI_Exchange8bit
  1811                           
  1812                           ;FT800.c: 28: SPI_Exchange8bit(addr >> 8);
  1813  0071FC  C002  F007         	movff	wr16@addr,??_wr16
  1814  007200  C003  F008         	movff	wr16@addr+1,??_wr16+1
  1815  007204  C004  F009         	movff	wr16@addr+2,??_wr16+2
  1816  007208  C008  F007         	movff	??_wr16+1,??_wr16
  1817  00720C  C009  F008         	movff	??_wr16+2,??_wr16+1
  1818  007210  6A09               	clrf	??_wr16+2,c
  1819  007212  5007               	movf	??_wr16,w,c
  1820  007214  EC9A  F038         	call	_SPI_Exchange8bit
  1821                           
  1822                           ;FT800.c: 29: SPI_Exchange8bit(addr);
  1823  007218  5002               	movf	wr16@addr,w,c
  1824  00721A  EC9A  F038         	call	_SPI_Exchange8bit
  1825                           
  1826                           ;FT800.c: 30: SPI_Exchange8bit((value) & 0xFF);SPI_Exchange8bit(((value) >> 8) & 0xFF);
  1827  00721E  5005               	movf	wr16@value,w,c
  1828  007220  EC9A  F038         	call	_SPI_Exchange8bit
  1829  007224  5006               	movf	wr16@value+1,w,c
  1830  007226  EC9A  F038         	call	_SPI_Exchange8bit
  1831                           
  1832                           ;FT800.c: 31: LATAbits.LATA1 = 1;
  1833  00722A  8289               	bsf	3977,1,c	;volatile
  1834  00722C  0012               	return		;funcret
  1835  00722E                     __end_of_wr16:
  1836                           	opt stack 0
  1837                           wreg	equ	0xFE8
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function _rd16 *****************
  1841 ;; Defined at:
  1842 ;;		line 72 in file "Gue/FT800.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  addr            3    1[COMRAM] unsigned um
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  temp            1    7[COMRAM] unsigned char 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  2    1[COMRAM] unsigned int 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1856 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1859 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1860 ;;Total ram usage:        7 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    1
  1863 ;; This function calls:
  1864 ;;		_SPI_Exchange8bit
  1865 ;; This function is called by:
  1866 ;;		_FT800_Init
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text10
  1871  00722E                     __ptext10:
  1872                           	opt stack 0
  1873  00722E                     _rd16:
  1874                           	opt stack 28
  1875                           
  1876                           ;FT800.c: 73: LATAbits.LATA1 = 0;
  1877                           
  1878                           ;incstack = 0
  1879  00722E  9289               	bcf	3977,1,c	;volatile
  1880                           
  1881                           ;FT800.c: 74: SPI_Exchange8bit(addr >> 16);
  1882  007230  5004               	movf	rd16@addr+2,w,c
  1883  007232  EC9A  F038         	call	_SPI_Exchange8bit
  1884                           
  1885                           ;FT800.c: 75: SPI_Exchange8bit(addr >> 8);
  1886  007236  C002  F005         	movff	rd16@addr,??_rd16
  1887  00723A  C003  F006         	movff	rd16@addr+1,??_rd16+1
  1888  00723E  C004  F007         	movff	rd16@addr+2,??_rd16+2
  1889  007242  C006  F005         	movff	??_rd16+1,??_rd16
  1890  007246  C007  F006         	movff	??_rd16+2,??_rd16+1
  1891  00724A  6A07               	clrf	??_rd16+2,c
  1892  00724C  5005               	movf	??_rd16,w,c
  1893  00724E  EC9A  F038         	call	_SPI_Exchange8bit
  1894                           
  1895                           ;FT800.c: 76: SPI_Exchange8bit(addr);
  1896  007252  5002               	movf	rd16@addr,w,c
  1897  007254  EC9A  F038         	call	_SPI_Exchange8bit
  1898                           
  1899                           ;FT800.c: 77: SPI_Exchange8bit(0);
  1900  007258  0E00               	movlw	0
  1901  00725A  EC9A  F038         	call	_SPI_Exchange8bit
  1902                           
  1903                           ;FT800.c: 78: SPI_Exchange8bit(0);
  1904  00725E  0E00               	movlw	0
  1905  007260  EC9A  F038         	call	_SPI_Exchange8bit
  1906                           
  1907                           ;FT800.c: 79: ft_uint8_t temp = SSPBUF;
  1908  007264  CFC9 F008          	movff	4041,rd16@temp	;volatile
  1909                           
  1910                           ;FT800.c: 80: SPI_Exchange8bit(0);
  1911  007268  0E00               	movlw	0
  1912  00726A  EC9A  F038         	call	_SPI_Exchange8bit
  1913                           
  1914                           ;FT800.c: 81: LATAbits.LATA1 = 1;
  1915  00726E  8289               	bsf	3977,1,c	;volatile
  1916                           
  1917                           ;FT800.c: 82: return ((ft_uint16_t)SSPBUF << 8) | temp;
  1918  007270  50C9               	movf	4041,w,c	;volatile
  1919  007272  6E05               	movwf	??_rd16& (0+255),c
  1920  007274  5008               	movf	rd16@temp,w,c
  1921  007276  6E02               	movwf	?_rd16,c
  1922  007278  C005  F003         	movff	??_rd16,?_rd16+1
  1923  00727C  0012               	return	
  1924  00727E                     __end_of_rd16:
  1925                           	opt stack 0
  1926                           wreg	equ	0xFE8
  1927                           status	equ	0xFD8
  1928                           
  1929 ;; *************** function _host_command *****************
  1930 ;; Defined at:
  1931 ;;		line 8 in file "Gue/FT800.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  command         1    wreg     unsigned char 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  command         1    1[COMRAM] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1949 ;;Total ram usage:        1 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    1
  1952 ;; This function calls:
  1953 ;;		_SPI_Exchange8bit
  1954 ;; This function is called by:
  1955 ;;		_FT800_Init
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text11
  1960  007168                     __ptext11:
  1961                           	opt stack 0
  1962  007168                     _host_command:
  1963                           	opt stack 28
  1964                           
  1965                           ;incstack = 0
  1966                           ;host_command@command stored from wreg
  1967  007168  6E02               	movwf	host_command@command,c
  1968                           
  1969                           ;FT800.c: 9: LATAbits.LATA1 = 0;
  1970  00716A  9289               	bcf	3977,1,c	;volatile
  1971                           
  1972                           ;FT800.c: 10: SPI_Exchange8bit(command);
  1973  00716C  5002               	movf	host_command@command,w,c
  1974  00716E  EC9A  F038         	call	_SPI_Exchange8bit
  1975                           
  1976                           ;FT800.c: 11: SPI_Exchange8bit(0);
  1977  007172  0E00               	movlw	0
  1978  007174  EC9A  F038         	call	_SPI_Exchange8bit
  1979                           
  1980                           ;FT800.c: 12: SPI_Exchange8bit(0);
  1981  007178  0E00               	movlw	0
  1982  00717A  EC9A  F038         	call	_SPI_Exchange8bit
  1983                           
  1984                           ;FT800.c: 13: LATAbits.LATA1 = 1;
  1985  00717E  8289               	bsf	3977,1,c	;volatile
  1986  007180  0012               	return		;funcret
  1987  007182                     __end_of_host_command:
  1988                           	opt stack 0
  1989                           wreg	equ	0xFE8
  1990                           status	equ	0xFD8
  1991                           
  1992 ;; *************** function _SPI_Exchange8bit *****************
  1993 ;; Defined at:
  1994 ;;		line 77 in file "mcc_generated_files/spi.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  data            1    wreg     unsigned char 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  data            1    0[COMRAM] unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      unsigned char 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2011 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2012 ;;Total ram usage:        1 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_host_command
  2018 ;;		_wr8
  2019 ;;		_wr16
  2020 ;;		_wr32
  2021 ;;		_rd16
  2022 ;;		_SPI_Exchange8bitBuffer
  2023 ;;		_wr8s
  2024 ;;		_rd8
  2025 ;;		_rd32
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text12
  2030  007134                     __ptext12:
  2031                           	opt stack 0
  2032  007134                     _SPI_Exchange8bit:
  2033                           	opt stack 28
  2034                           
  2035                           ;incstack = 0
  2036                           ;SPI_Exchange8bit@data stored from wreg
  2037  007134  6E01               	movwf	SPI_Exchange8bit@data,c
  2038                           
  2039                           ;spi.c: 80: SSPCON1bits.WCOL = 0;
  2040  007136  9EC6               	bcf	4038,7,c	;volatile
  2041                           
  2042                           ;spi.c: 82: SSPBUF = data;
  2043  007138  C001  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  2044  00713C                     l361:
  2045  00713C  A0C7               	btfss	4039,0,c	;volatile
  2046  00713E  D7FE               	goto	l361
  2047                           
  2048                           ;spi.c: 86: }
  2049                           ;spi.c: 88: return (SSPBUF);
  2050  007140  50C9               	movf	4041,w,c	;volatile
  2051  007142  0012               	return		;funcret
  2052  007144                     __end_of_SPI_Exchange8bit:
  2053                           	opt stack 0
  2054                           wreg	equ	0xFE8
  2055                           status	equ	0xFD8
  2056                           
  2057 ;; *************** function _CAN_transmit *****************
  2058 ;; Defined at:
  2059 ;;		line 165 in file "mcc_generated_files/ecan.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  tempCanMsg      2   18[COMRAM] PTR struct .
  2062 ;;		 -> main@test(14), 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  tempSIDL        1   24[COMRAM] unsigned char 
  2065 ;;  tempSIDH        1   23[COMRAM] unsigned char 
  2066 ;;  tempEIDL        1   22[COMRAM] unsigned char 
  2067 ;;  tempEIDH        1   21[COMRAM] unsigned char 
  2068 ;;  returnValue     1   20[COMRAM] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      unsigned char 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2079 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2081 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2082 ;;Total ram usage:        7 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; Hardware stack levels required when called:    1
  2085 ;; This function calls:
  2086 ;;		_convertCANid2Reg
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text13
  2093  007CC2                     __ptext13:
  2094                           	opt stack 0
  2095  007CC2                     _CAN_transmit:
  2096                           	opt stack 29
  2097                           
  2098                           ;ecan.c: 166: unsigned char tempEIDH = 0;
  2099                           
  2100                           ;incstack = 0
  2101  007CC2  0E00               	movlw	0
  2102  007CC4  6E16               	movwf	CAN_transmit@tempEIDH,c
  2103                           
  2104                           ;ecan.c: 167: unsigned char tempEIDL = 0;
  2105  007CC6  0E00               	movlw	0
  2106  007CC8  6E17               	movwf	CAN_transmit@tempEIDL,c
  2107                           
  2108                           ;ecan.c: 168: unsigned char tempSIDH = 0;
  2109  007CCA  0E00               	movlw	0
  2110  007CCC  6E18               	movwf	CAN_transmit@tempSIDH,c
  2111                           
  2112                           ;ecan.c: 169: unsigned char tempSIDL = 0;
  2113  007CCE  0E00               	movlw	0
  2114  007CD0  6E19               	movwf	CAN_transmit@tempSIDL,c
  2115                           
  2116                           ;ecan.c: 171: unsigned char returnValue = 0;
  2117  007CD2  0E00               	movlw	0
  2118  007CD4  6E15               	movwf	CAN_transmit@returnValue,c
  2119                           
  2120                           ;ecan.c: 173: if (TXB0CONbits.TXREQ != 1) {
  2121  007CD6  010F               	movlb	15	; () banked
  2122  007CD8  B720               	btfsc	32,3,b	;volatile
  2123  007CDA  D084               	goto	l268
  2124                           
  2125                           ; BSR set to: 15
  2126                           ;ecan.c: 175: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  2127  007CDC  EE20 F001          	lfsr	2,1
  2128  007CE0  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2129  007CE2  26D9               	addwf	fsr2l,f,c
  2130  007CE4  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2131  007CE6  22DA               	addwfc	fsr2h,f,c
  2132  007CE8  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  2133  007CEC  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  2134  007CF0  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  2135  007CF4  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  2136  007CF8  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  2137  007CFC  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  2138  007D00  50DF               	movf	indf2,w,c
  2139  007D02  6E05               	movwf	convertCANid2Reg@canIdType,c
  2140  007D04  0E16               	movlw	low CAN_transmit@tempEIDH
  2141  007D06  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  2142  007D08  0E00               	movlw	high CAN_transmit@tempEIDH
  2143  007D0A  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  2144  007D0C  0E17               	movlw	low CAN_transmit@tempEIDL
  2145  007D0E  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  2146  007D10  0E00               	movlw	high CAN_transmit@tempEIDL
  2147  007D12  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  2148  007D14  0E18               	movlw	low CAN_transmit@tempSIDH
  2149  007D16  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  2150  007D18  0E00               	movlw	high CAN_transmit@tempSIDH
  2151  007D1A  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  2152  007D1C  0E19               	movlw	low CAN_transmit@tempSIDL
  2153  007D1E  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  2154  007D20  0E00               	movlw	high CAN_transmit@tempSIDL
  2155  007D22  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  2156  007D24  EC38  F03B         	call	_convertCANid2Reg	;wreg free
  2157                           
  2158                           ;ecan.c: 177: TXB0EIDH = tempEIDH;
  2159  007D28  C016  FF23         	movff	CAN_transmit@tempEIDH,3875	;volatile
  2160                           
  2161                           ;ecan.c: 178: TXB0EIDL = tempEIDL;
  2162  007D2C  C017  FF24         	movff	CAN_transmit@tempEIDL,3876	;volatile
  2163                           
  2164                           ;ecan.c: 179: TXB0SIDH = tempSIDH;
  2165  007D30  C018  FF21         	movff	CAN_transmit@tempSIDH,3873	;volatile
  2166                           
  2167                           ;ecan.c: 180: TXB0SIDL = tempSIDL;
  2168  007D34  C019  FF22         	movff	CAN_transmit@tempSIDL,3874	;volatile
  2169                           
  2170                           ;ecan.c: 181: TXB0DLC = tempCanMsg->frame.dlc;
  2171  007D38  EE20 F005          	lfsr	2,5
  2172  007D3C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2173  007D3E  26D9               	addwf	fsr2l,f,c
  2174  007D40  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2175  007D42  22DA               	addwfc	fsr2h,f,c
  2176  007D44  50DF               	movf	indf2,w,c
  2177  007D46  010F               	movlb	15	; () banked
  2178  007D48  6F25               	movwf	37,b	;volatile
  2179                           
  2180                           ; BSR set to: 15
  2181                           ;ecan.c: 182: TXB0D0 = tempCanMsg->frame.data0;
  2182  007D4A  EE20 F006          	lfsr	2,6
  2183  007D4E  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2184  007D50  26D9               	addwf	fsr2l,f,c
  2185  007D52  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2186  007D54  22DA               	addwfc	fsr2h,f,c
  2187  007D56  50DF               	movf	indf2,w,c
  2188  007D58  010F               	movlb	15	; () banked
  2189  007D5A  6F26               	movwf	38,b	;volatile
  2190                           
  2191                           ; BSR set to: 15
  2192                           ;ecan.c: 183: TXB0D1 = tempCanMsg->frame.data1;
  2193  007D5C  EE20 F007          	lfsr	2,7
  2194  007D60  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2195  007D62  26D9               	addwf	fsr2l,f,c
  2196  007D64  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2197  007D66  22DA               	addwfc	fsr2h,f,c
  2198  007D68  50DF               	movf	indf2,w,c
  2199  007D6A  010F               	movlb	15	; () banked
  2200  007D6C  6F27               	movwf	39,b	;volatile
  2201                           
  2202                           ; BSR set to: 15
  2203                           ;ecan.c: 184: TXB0D2 = tempCanMsg->frame.data2;
  2204  007D6E  EE20 F008          	lfsr	2,8
  2205  007D72  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2206  007D74  26D9               	addwf	fsr2l,f,c
  2207  007D76  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2208  007D78  22DA               	addwfc	fsr2h,f,c
  2209  007D7A  50DF               	movf	indf2,w,c
  2210  007D7C  010F               	movlb	15	; () banked
  2211  007D7E  6F28               	movwf	40,b	;volatile
  2212                           
  2213                           ; BSR set to: 15
  2214                           ;ecan.c: 185: TXB0D3 = tempCanMsg->frame.data3;
  2215  007D80  EE20 F009          	lfsr	2,9
  2216  007D84  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2217  007D86  26D9               	addwf	fsr2l,f,c
  2218  007D88  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2219  007D8A  22DA               	addwfc	fsr2h,f,c
  2220  007D8C  50DF               	movf	indf2,w,c
  2221  007D8E  010F               	movlb	15	; () banked
  2222  007D90  6F29               	movwf	41,b	;volatile
  2223                           
  2224                           ; BSR set to: 15
  2225                           ;ecan.c: 186: TXB0D4 = tempCanMsg->frame.data4;
  2226  007D92  EE20 F00A          	lfsr	2,10
  2227  007D96  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2228  007D98  26D9               	addwf	fsr2l,f,c
  2229  007D9A  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2230  007D9C  22DA               	addwfc	fsr2h,f,c
  2231  007D9E  50DF               	movf	indf2,w,c
  2232  007DA0  010F               	movlb	15	; () banked
  2233  007DA2  6F2A               	movwf	42,b	;volatile
  2234                           
  2235                           ; BSR set to: 15
  2236                           ;ecan.c: 187: TXB0D5 = tempCanMsg->frame.data5;
  2237  007DA4  EE20 F00B          	lfsr	2,11
  2238  007DA8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2239  007DAA  26D9               	addwf	fsr2l,f,c
  2240  007DAC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2241  007DAE  22DA               	addwfc	fsr2h,f,c
  2242  007DB0  50DF               	movf	indf2,w,c
  2243  007DB2  010F               	movlb	15	; () banked
  2244  007DB4  6F2B               	movwf	43,b	;volatile
  2245                           
  2246                           ; BSR set to: 15
  2247                           ;ecan.c: 188: TXB0D6 = tempCanMsg->frame.data6;
  2248  007DB6  EE20 F00C          	lfsr	2,12
  2249  007DBA  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2250  007DBC  26D9               	addwf	fsr2l,f,c
  2251  007DBE  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2252  007DC0  22DA               	addwfc	fsr2h,f,c
  2253  007DC2  50DF               	movf	indf2,w,c
  2254  007DC4  010F               	movlb	15	; () banked
  2255  007DC6  6F2C               	movwf	44,b	;volatile
  2256                           
  2257                           ; BSR set to: 15
  2258                           ;ecan.c: 189: TXB0D7 = tempCanMsg->frame.data7;
  2259  007DC8  EE20 F00D          	lfsr	2,13
  2260  007DCC  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2261  007DCE  26D9               	addwf	fsr2l,f,c
  2262  007DD0  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2263  007DD2  22DA               	addwfc	fsr2h,f,c
  2264  007DD4  50DF               	movf	indf2,w,c
  2265  007DD6  010F               	movlb	15	; () banked
  2266  007DD8  6F2D               	movwf	45,b	;volatile
  2267                           
  2268                           ; BSR set to: 15
  2269                           ;ecan.c: 191: TXB0CONbits.TXREQ = 1;
  2270  007DDA  010F               	movlb	15	; () banked
  2271  007DDC  8720               	bsf	32,3,b	;volatile
  2272                           
  2273                           ; BSR set to: 15
  2274                           ;ecan.c: 192: returnValue = 1;
  2275  007DDE  0E01               	movlw	1
  2276  007DE0  6E15               	movwf	CAN_transmit@returnValue,c
  2277                           
  2278                           ;ecan.c: 193: } else if (TXB1CONbits.TXREQ != 1) {
  2279  007DE2  0012               	return	
  2280  007DE4                     l268:
  2281                           
  2282                           ; BSR set to: 15
  2283  007DE4  010F               	movlb	15	; () banked
  2284  007DE6  B710               	btfsc	16,3,b	;volatile
  2285  007DE8  D084               	goto	l270
  2286                           
  2287                           ; BSR set to: 15
  2288                           ;ecan.c: 195: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  2289  007DEA  EE20 F001          	lfsr	2,1
  2290  007DEE  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2291  007DF0  26D9               	addwf	fsr2l,f,c
  2292  007DF2  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2293  007DF4  22DA               	addwfc	fsr2h,f,c
  2294  007DF6  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  2295  007DFA  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  2296  007DFE  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  2297  007E02  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  2298  007E06  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  2299  007E0A  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  2300  007E0E  50DF               	movf	indf2,w,c
  2301  007E10  6E05               	movwf	convertCANid2Reg@canIdType,c
  2302  007E12  0E16               	movlw	low CAN_transmit@tempEIDH
  2303  007E14  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  2304  007E16  0E00               	movlw	high CAN_transmit@tempEIDH
  2305  007E18  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  2306  007E1A  0E17               	movlw	low CAN_transmit@tempEIDL
  2307  007E1C  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  2308  007E1E  0E00               	movlw	high CAN_transmit@tempEIDL
  2309  007E20  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  2310  007E22  0E18               	movlw	low CAN_transmit@tempSIDH
  2311  007E24  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  2312  007E26  0E00               	movlw	high CAN_transmit@tempSIDH
  2313  007E28  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  2314  007E2A  0E19               	movlw	low CAN_transmit@tempSIDL
  2315  007E2C  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  2316  007E2E  0E00               	movlw	high CAN_transmit@tempSIDL
  2317  007E30  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  2318  007E32  EC38  F03B         	call	_convertCANid2Reg	;wreg free
  2319                           
  2320                           ;ecan.c: 197: TXB1EIDH = tempEIDH;
  2321  007E36  C016  FF13         	movff	CAN_transmit@tempEIDH,3859	;volatile
  2322                           
  2323                           ;ecan.c: 198: TXB1EIDL = tempEIDL;
  2324  007E3A  C017  FF14         	movff	CAN_transmit@tempEIDL,3860	;volatile
  2325                           
  2326                           ;ecan.c: 199: TXB1SIDH = tempSIDH;
  2327  007E3E  C018  FF11         	movff	CAN_transmit@tempSIDH,3857	;volatile
  2328                           
  2329                           ;ecan.c: 200: TXB1SIDL = tempSIDL;
  2330  007E42  C019  FF12         	movff	CAN_transmit@tempSIDL,3858	;volatile
  2331                           
  2332                           ;ecan.c: 201: TXB1DLC = tempCanMsg->frame.dlc;
  2333  007E46  EE20 F005          	lfsr	2,5
  2334  007E4A  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2335  007E4C  26D9               	addwf	fsr2l,f,c
  2336  007E4E  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2337  007E50  22DA               	addwfc	fsr2h,f,c
  2338  007E52  50DF               	movf	indf2,w,c
  2339  007E54  010F               	movlb	15	; () banked
  2340  007E56  6F15               	movwf	21,b	;volatile
  2341                           
  2342                           ; BSR set to: 15
  2343                           ;ecan.c: 202: TXB1D0 = tempCanMsg->frame.data0;
  2344  007E58  EE20 F006          	lfsr	2,6
  2345  007E5C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2346  007E5E  26D9               	addwf	fsr2l,f,c
  2347  007E60  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2348  007E62  22DA               	addwfc	fsr2h,f,c
  2349  007E64  50DF               	movf	indf2,w,c
  2350  007E66  010F               	movlb	15	; () banked
  2351  007E68  6F16               	movwf	22,b	;volatile
  2352                           
  2353                           ; BSR set to: 15
  2354                           ;ecan.c: 203: TXB1D1 = tempCanMsg->frame.data1;
  2355  007E6A  EE20 F007          	lfsr	2,7
  2356  007E6E  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2357  007E70  26D9               	addwf	fsr2l,f,c
  2358  007E72  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2359  007E74  22DA               	addwfc	fsr2h,f,c
  2360  007E76  50DF               	movf	indf2,w,c
  2361  007E78  010F               	movlb	15	; () banked
  2362  007E7A  6F17               	movwf	23,b	;volatile
  2363                           
  2364                           ; BSR set to: 15
  2365                           ;ecan.c: 204: TXB1D2 = tempCanMsg->frame.data2;
  2366  007E7C  EE20 F008          	lfsr	2,8
  2367  007E80  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2368  007E82  26D9               	addwf	fsr2l,f,c
  2369  007E84  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2370  007E86  22DA               	addwfc	fsr2h,f,c
  2371  007E88  50DF               	movf	indf2,w,c
  2372  007E8A  010F               	movlb	15	; () banked
  2373  007E8C  6F18               	movwf	24,b	;volatile
  2374                           
  2375                           ; BSR set to: 15
  2376                           ;ecan.c: 205: TXB1D3 = tempCanMsg->frame.data3;
  2377  007E8E  EE20 F009          	lfsr	2,9
  2378  007E92  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2379  007E94  26D9               	addwf	fsr2l,f,c
  2380  007E96  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2381  007E98  22DA               	addwfc	fsr2h,f,c
  2382  007E9A  50DF               	movf	indf2,w,c
  2383  007E9C  010F               	movlb	15	; () banked
  2384  007E9E  6F19               	movwf	25,b	;volatile
  2385                           
  2386                           ; BSR set to: 15
  2387                           ;ecan.c: 206: TXB1D4 = tempCanMsg->frame.data4;
  2388  007EA0  EE20 F00A          	lfsr	2,10
  2389  007EA4  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2390  007EA6  26D9               	addwf	fsr2l,f,c
  2391  007EA8  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2392  007EAA  22DA               	addwfc	fsr2h,f,c
  2393  007EAC  50DF               	movf	indf2,w,c
  2394  007EAE  010F               	movlb	15	; () banked
  2395  007EB0  6F1A               	movwf	26,b	;volatile
  2396                           
  2397                           ; BSR set to: 15
  2398                           ;ecan.c: 207: TXB1D5 = tempCanMsg->frame.data5;
  2399  007EB2  EE20 F00B          	lfsr	2,11
  2400  007EB6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2401  007EB8  26D9               	addwf	fsr2l,f,c
  2402  007EBA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2403  007EBC  22DA               	addwfc	fsr2h,f,c
  2404  007EBE  50DF               	movf	indf2,w,c
  2405  007EC0  010F               	movlb	15	; () banked
  2406  007EC2  6F1B               	movwf	27,b	;volatile
  2407                           
  2408                           ; BSR set to: 15
  2409                           ;ecan.c: 208: TXB1D6 = tempCanMsg->frame.data6;
  2410  007EC4  EE20 F00C          	lfsr	2,12
  2411  007EC8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2412  007ECA  26D9               	addwf	fsr2l,f,c
  2413  007ECC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2414  007ECE  22DA               	addwfc	fsr2h,f,c
  2415  007ED0  50DF               	movf	indf2,w,c
  2416  007ED2  010F               	movlb	15	; () banked
  2417  007ED4  6F1C               	movwf	28,b	;volatile
  2418                           
  2419                           ; BSR set to: 15
  2420                           ;ecan.c: 209: TXB1D7 = tempCanMsg->frame.data7;
  2421  007ED6  EE20 F00D          	lfsr	2,13
  2422  007EDA  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2423  007EDC  26D9               	addwf	fsr2l,f,c
  2424  007EDE  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2425  007EE0  22DA               	addwfc	fsr2h,f,c
  2426  007EE2  50DF               	movf	indf2,w,c
  2427  007EE4  010F               	movlb	15	; () banked
  2428  007EE6  6F1D               	movwf	29,b	;volatile
  2429                           
  2430                           ; BSR set to: 15
  2431                           ;ecan.c: 211: TXB1CONbits.TXREQ = 1;
  2432  007EE8  010F               	movlb	15	; () banked
  2433  007EEA  8710               	bsf	16,3,b	;volatile
  2434                           
  2435                           ; BSR set to: 15
  2436                           ;ecan.c: 212: returnValue = 1;
  2437  007EEC  0E01               	movlw	1
  2438  007EEE  6E15               	movwf	CAN_transmit@returnValue,c
  2439                           
  2440                           ;ecan.c: 213: } else if (TXB2CONbits.TXREQ != 1) {
  2441  007EF0  0012               	return	
  2442  007EF2                     l270:
  2443                           
  2444                           ; BSR set to: 15
  2445  007EF2  010F               	movlb	15	; () banked
  2446  007EF4  B700               	btfsc	0,3,b	;volatile
  2447  007EF6  0012               	return	
  2448                           
  2449                           ; BSR set to: 15
  2450                           ;ecan.c: 215: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  2451  007EF8  EE20 F001          	lfsr	2,1
  2452  007EFC  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2453  007EFE  26D9               	addwf	fsr2l,f,c
  2454  007F00  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2455  007F02  22DA               	addwfc	fsr2h,f,c
  2456  007F04  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  2457  007F08  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  2458  007F0C  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  2459  007F10  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  2460  007F14  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  2461  007F18  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  2462  007F1C  50DF               	movf	indf2,w,c
  2463  007F1E  6E05               	movwf	convertCANid2Reg@canIdType,c
  2464  007F20  0E16               	movlw	low CAN_transmit@tempEIDH
  2465  007F22  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  2466  007F24  0E00               	movlw	high CAN_transmit@tempEIDH
  2467  007F26  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  2468  007F28  0E17               	movlw	low CAN_transmit@tempEIDL
  2469  007F2A  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  2470  007F2C  0E00               	movlw	high CAN_transmit@tempEIDL
  2471  007F2E  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  2472  007F30  0E18               	movlw	low CAN_transmit@tempSIDH
  2473  007F32  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  2474  007F34  0E00               	movlw	high CAN_transmit@tempSIDH
  2475  007F36  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  2476  007F38  0E19               	movlw	low CAN_transmit@tempSIDL
  2477  007F3A  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  2478  007F3C  0E00               	movlw	high CAN_transmit@tempSIDL
  2479  007F3E  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  2480  007F40  EC38  F03B         	call	_convertCANid2Reg	;wreg free
  2481                           
  2482                           ;ecan.c: 217: TXB2EIDH = tempEIDH;
  2483  007F44  C016  FF03         	movff	CAN_transmit@tempEIDH,3843	;volatile
  2484                           
  2485                           ;ecan.c: 218: TXB2EIDL = tempEIDL;
  2486  007F48  C017  FF04         	movff	CAN_transmit@tempEIDL,3844	;volatile
  2487                           
  2488                           ;ecan.c: 219: TXB2SIDH = tempSIDH;
  2489  007F4C  C018  FF01         	movff	CAN_transmit@tempSIDH,3841	;volatile
  2490                           
  2491                           ;ecan.c: 220: TXB2SIDL = tempSIDL;
  2492  007F50  C019  FF02         	movff	CAN_transmit@tempSIDL,3842	;volatile
  2493                           
  2494                           ;ecan.c: 221: TXB2DLC = tempCanMsg->frame.dlc;
  2495  007F54  EE20 F005          	lfsr	2,5
  2496  007F58  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2497  007F5A  26D9               	addwf	fsr2l,f,c
  2498  007F5C  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2499  007F5E  22DA               	addwfc	fsr2h,f,c
  2500  007F60  50DF               	movf	indf2,w,c
  2501  007F62  010F               	movlb	15	; () banked
  2502  007F64  6F05               	movwf	5,b	;volatile
  2503                           
  2504                           ; BSR set to: 15
  2505                           ;ecan.c: 222: TXB2D0 = tempCanMsg->frame.data0;
  2506  007F66  EE20 F006          	lfsr	2,6
  2507  007F6A  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2508  007F6C  26D9               	addwf	fsr2l,f,c
  2509  007F6E  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2510  007F70  22DA               	addwfc	fsr2h,f,c
  2511  007F72  50DF               	movf	indf2,w,c
  2512  007F74  010F               	movlb	15	; () banked
  2513  007F76  6F06               	movwf	6,b	;volatile
  2514                           
  2515                           ; BSR set to: 15
  2516                           ;ecan.c: 223: TXB2D1 = tempCanMsg->frame.data1;
  2517  007F78  EE20 F007          	lfsr	2,7
  2518  007F7C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2519  007F7E  26D9               	addwf	fsr2l,f,c
  2520  007F80  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2521  007F82  22DA               	addwfc	fsr2h,f,c
  2522  007F84  50DF               	movf	indf2,w,c
  2523  007F86  010F               	movlb	15	; () banked
  2524  007F88  6F07               	movwf	7,b	;volatile
  2525                           
  2526                           ; BSR set to: 15
  2527                           ;ecan.c: 224: TXB2D2 = tempCanMsg->frame.data2;
  2528  007F8A  EE20 F008          	lfsr	2,8
  2529  007F8E  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2530  007F90  26D9               	addwf	fsr2l,f,c
  2531  007F92  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2532  007F94  22DA               	addwfc	fsr2h,f,c
  2533  007F96  50DF               	movf	indf2,w,c
  2534  007F98  010F               	movlb	15	; () banked
  2535  007F9A  6F08               	movwf	8,b	;volatile
  2536                           
  2537                           ; BSR set to: 15
  2538                           ;ecan.c: 225: TXB2D3 = tempCanMsg->frame.data3;
  2539  007F9C  EE20 F009          	lfsr	2,9
  2540  007FA0  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2541  007FA2  26D9               	addwf	fsr2l,f,c
  2542  007FA4  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2543  007FA6  22DA               	addwfc	fsr2h,f,c
  2544  007FA8  50DF               	movf	indf2,w,c
  2545  007FAA  010F               	movlb	15	; () banked
  2546  007FAC  6F09               	movwf	9,b	;volatile
  2547                           
  2548                           ; BSR set to: 15
  2549                           ;ecan.c: 226: TXB2D4 = tempCanMsg->frame.data4;
  2550  007FAE  EE20 F00A          	lfsr	2,10
  2551  007FB2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2552  007FB4  26D9               	addwf	fsr2l,f,c
  2553  007FB6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2554  007FB8  22DA               	addwfc	fsr2h,f,c
  2555  007FBA  50DF               	movf	indf2,w,c
  2556  007FBC  010F               	movlb	15	; () banked
  2557  007FBE  6F0A               	movwf	10,b	;volatile
  2558                           
  2559                           ; BSR set to: 15
  2560                           ;ecan.c: 227: TXB2D5 = tempCanMsg->frame.data5;
  2561  007FC0  EE20 F00B          	lfsr	2,11
  2562  007FC4  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2563  007FC6  26D9               	addwf	fsr2l,f,c
  2564  007FC8  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2565  007FCA  22DA               	addwfc	fsr2h,f,c
  2566  007FCC  50DF               	movf	indf2,w,c
  2567  007FCE  010F               	movlb	15	; () banked
  2568  007FD0  6F0B               	movwf	11,b	;volatile
  2569                           
  2570                           ; BSR set to: 15
  2571                           ;ecan.c: 228: TXB2D6 = tempCanMsg->frame.data6;
  2572  007FD2  EE20 F00C          	lfsr	2,12
  2573  007FD6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2574  007FD8  26D9               	addwf	fsr2l,f,c
  2575  007FDA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2576  007FDC  22DA               	addwfc	fsr2h,f,c
  2577  007FDE  50DF               	movf	indf2,w,c
  2578  007FE0  010F               	movlb	15	; () banked
  2579  007FE2  6F0C               	movwf	12,b	;volatile
  2580                           
  2581                           ; BSR set to: 15
  2582                           ;ecan.c: 229: TXB2D7 = tempCanMsg->frame.data7;
  2583  007FE4  EE20 F00D          	lfsr	2,13
  2584  007FE8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2585  007FEA  26D9               	addwf	fsr2l,f,c
  2586  007FEC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2587  007FEE  22DA               	addwfc	fsr2h,f,c
  2588  007FF0  50DF               	movf	indf2,w,c
  2589  007FF2  010F               	movlb	15	; () banked
  2590  007FF4  6F0D               	movwf	13,b	;volatile
  2591                           
  2592                           ; BSR set to: 15
  2593                           ;ecan.c: 231: TXB2CONbits.TXREQ = 1;
  2594  007FF6  010F               	movlb	15	; () banked
  2595  007FF8  8700               	bsf	0,3,b	;volatile
  2596                           
  2597                           ; BSR set to: 15
  2598                           ;ecan.c: 232: returnValue = 1;
  2599  007FFA  0E01               	movlw	1
  2600  007FFC  6E15               	movwf	CAN_transmit@returnValue,c
  2601                           
  2602                           ; BSR set to: 15
  2603                           
  2604                           ; BSR set to: 15
  2605                           
  2606                           ; BSR set to: 15
  2607  007FFE  0012               	return	
  2608  008000                     __end_of_CAN_transmit:
  2609                           	opt stack 0
  2610                           wreg	equ	0xFE8
  2611                           indf2	equ	0xFDF
  2612                           postinc2	equ	0xFDE
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _convertCANid2Reg *****************
  2618 ;; Defined at:
  2619 ;;		line 398 in file "mcc_generated_files/ecan.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  tempPassedIn    4    0[COMRAM] unsigned long 
  2622 ;;  canIdType       1    4[COMRAM] unsigned char 
  2623 ;;  passedInEIDH    2    5[COMRAM] PTR unsigned char 
  2624 ;;		 -> CAN_transmit@tempEIDH(1), 
  2625 ;;  passedInEIDL    2    7[COMRAM] PTR unsigned char 
  2626 ;;		 -> CAN_transmit@tempEIDL(1), 
  2627 ;;  passedInSIDH    2    9[COMRAM] PTR unsigned char 
  2628 ;;		 -> CAN_transmit@tempSIDH(1), 
  2629 ;;  passedInSIDL    2   11[COMRAM] PTR unsigned char 
  2630 ;;		 -> CAN_transmit@tempSIDL(1), 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  wipSIDL         1   17[COMRAM] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2642 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2644 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2645 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2646 ;;Total ram usage:       18 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_CAN_transmit
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text14
  2656  007670                     __ptext14:
  2657                           	opt stack 0
  2658  007670                     _convertCANid2Reg:
  2659                           	opt stack 29
  2660                           
  2661                           ;ecan.c: 399: unsigned char wipSIDL = 0;
  2662                           
  2663                           ; BSR set to: 15
  2664                           ;incstack = 0
  2665  007670  0E00               	movlw	0
  2666  007672  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  2667                           
  2668                           ;ecan.c: 401: if (canIdType == 2) {
  2669  007674  0E02               	movlw	2
  2670  007676  1805               	xorwf	convertCANid2Reg@canIdType,w,c
  2671  007678  A4D8               	btfss	status,2,c
  2672  00767A  D081               	goto	l1786
  2673                           
  2674                           ;ecan.c: 404: *passedInEIDL = 0xFF & tempPassedInID;
  2675  00767C  C008  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  2676  007680  C009  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  2677  007684  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2678                           
  2679                           ;ecan.c: 405: tempPassedInID = tempPassedInID >> 8;
  2680  007688  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2681  00768C  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2682  007690  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2683  007694  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2684  007698  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  2685  00769C  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  2686  0076A0  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  2687  0076A4  6A11               	clrf	??_convertCANid2Reg+3,c
  2688  0076A6  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2689  0076AA  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2690  0076AE  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2691  0076B2  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2692                           
  2693                           ;ecan.c: 408: *passedInEIDH = 0xFF & tempPassedInID;
  2694  0076B6  C006  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  2695  0076BA  C007  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  2696  0076BE  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2697                           
  2698                           ;ecan.c: 409: tempPassedInID = tempPassedInID >> 8;
  2699  0076C2  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2700  0076C6  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2701  0076CA  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2702  0076CE  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2703  0076D2  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  2704  0076D6  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  2705  0076DA  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  2706  0076DE  6A11               	clrf	??_convertCANid2Reg+3,c
  2707  0076E0  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2708  0076E4  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2709  0076E8  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2710  0076EC  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2711                           
  2712                           ;ecan.c: 413: wipSIDL = 0x03 & tempPassedInID;
  2713  0076F0  5001               	movf	convertCANid2Reg@tempPassedInID,w,c
  2714  0076F2  0B03               	andlw	3
  2715  0076F4  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  2716                           
  2717                           ;ecan.c: 414: tempPassedInID = tempPassedInID << 3;
  2718  0076F6  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2719  0076FA  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2720  0076FE  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2721  007702  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2722  007706  0E03               	movlw	3
  2723  007708                     u355:
  2724  007708  90D8               	bcf	status,0,c
  2725  00770A  360E               	rlcf	??_convertCANid2Reg,f,c
  2726  00770C  360F               	rlcf	??_convertCANid2Reg+1,f,c
  2727  00770E  3610               	rlcf	??_convertCANid2Reg+2,f,c
  2728  007710  3611               	rlcf	??_convertCANid2Reg+3,f,c
  2729  007712  2EE8               	decfsz	wreg,f,c
  2730  007714  D7F9               	goto	u355
  2731  007716  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2732  00771A  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2733  00771E  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2734  007722  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2735                           
  2736                           ;ecan.c: 415: wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  2737  007726  5001               	movf	convertCANid2Reg@tempPassedInID,w,c
  2738  007728  0BE0               	andlw	224
  2739  00772A  2412               	addwf	convertCANid2Reg@wipSIDL,w,c
  2740  00772C  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  2741                           
  2742                           ;ecan.c: 416: wipSIDL = wipSIDL + 0x08;
  2743  00772E  5012               	movf	convertCANid2Reg@wipSIDL,w,c
  2744  007730  0F08               	addlw	8
  2745  007732  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  2746                           
  2747                           ;ecan.c: 417: *passedInSIDL = 0xEB & wipSIDL;
  2748  007734  5012               	movf	convertCANid2Reg@wipSIDL,w,c
  2749  007736  0BEB               	andlw	235
  2750  007738  C00C  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  2751  00773C  C00D  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  2752  007740  6EDF               	movwf	indf2,c
  2753                           
  2754                           ;ecan.c: 420: tempPassedInID = tempPassedInID >> 8;
  2755  007742  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2756  007746  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2757  00774A  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2758  00774E  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2759  007752  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  2760  007756  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  2761  00775A  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  2762  00775E  6A11               	clrf	??_convertCANid2Reg+3,c
  2763  007760  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2764  007764  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2765  007768  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2766  00776C  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2767                           
  2768                           ;ecan.c: 421: *passedInSIDH = 0xFF & tempPassedInID;
  2769  007770  C00A  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  2770  007774  C00B  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  2771  007778  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2772                           
  2773                           ;ecan.c: 422: } else
  2774  00777C  0012               	return	
  2775  00777E                     l1786:
  2776                           
  2777                           ;ecan.c: 423: {
  2778                           ;ecan.c: 424: *passedInEIDH = 0;
  2779  00777E  C006  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  2780  007782  C007  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  2781  007786  0E00               	movlw	0
  2782  007788  6EDF               	movwf	indf2,c
  2783                           
  2784                           ;ecan.c: 425: *passedInEIDL = 0;
  2785  00778A  C008  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  2786  00778E  C009  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  2787  007792  0E00               	movlw	0
  2788  007794  6EDF               	movwf	indf2,c
  2789                           
  2790                           ;ecan.c: 426: tempPassedInID = tempPassedInID << 5;
  2791  007796  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2792  00779A  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2793  00779E  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2794  0077A2  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2795  0077A6  0E05               	movlw	5
  2796  0077A8                     u365:
  2797  0077A8  90D8               	bcf	status,0,c
  2798  0077AA  360E               	rlcf	??_convertCANid2Reg,f,c
  2799  0077AC  360F               	rlcf	??_convertCANid2Reg+1,f,c
  2800  0077AE  3610               	rlcf	??_convertCANid2Reg+2,f,c
  2801  0077B0  3611               	rlcf	??_convertCANid2Reg+3,f,c
  2802  0077B2  2EE8               	decfsz	wreg,f,c
  2803  0077B4  D7F9               	goto	u365
  2804  0077B6  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2805  0077BA  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2806  0077BE  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2807  0077C2  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2808                           
  2809                           ;ecan.c: 427: *passedInSIDL = 0xFF & tempPassedInID;
  2810  0077C6  C00C  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  2811  0077CA  C00D  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  2812  0077CE  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2813                           
  2814                           ;ecan.c: 428: tempPassedInID = tempPassedInID >> 8;
  2815  0077D2  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2816  0077D6  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2817  0077DA  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2818  0077DE  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2819  0077E2  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  2820  0077E6  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  2821  0077EA  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  2822  0077EE  6A11               	clrf	??_convertCANid2Reg+3,c
  2823  0077F0  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2824  0077F4  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2825  0077F8  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2826  0077FC  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2827                           
  2828                           ;ecan.c: 429: *passedInSIDH = 0xFF & tempPassedInID;
  2829  007800  C00A  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  2830  007804  C00B  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  2831  007808  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2832  00780C  0012               	return	
  2833  00780E                     __end_of_convertCANid2Reg:
  2834                           	opt stack 0
  2835                           wreg	equ	0xFE8
  2836                           indf2	equ	0xFDF
  2837                           postinc2	equ	0xFDE
  2838                           fsr2h	equ	0xFDA
  2839                           fsr2l	equ	0xFD9
  2840                           status	equ	0xFD8
  2841                           
  2842 ;; *************** function _CAN_receive *****************
  2843 ;; Defined at:
  2844 ;;		line 240 in file "mcc_generated_files/ecan.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  tempCanMsg      2   19[COMRAM] PTR struct .
  2847 ;;		 -> main@test(14), 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  returnValue     1   21[COMRAM] unsigned char 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      unsigned char 
  2852 ;; Registers used:
  2853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2862 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2863 ;;Total ram usage:        3 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    1
  2866 ;; This function calls:
  2867 ;;		_convertReg2ExtendedCANid
  2868 ;;		_convertReg2StandardCANid
  2869 ;; This function is called by:
  2870 ;;		_main
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text15
  2875  00780E                     __ptext15:
  2876                           	opt stack 0
  2877  00780E                     _CAN_receive:
  2878                           	opt stack 29
  2879                           
  2880                           ;ecan.c: 241: unsigned char returnValue = 0;
  2881                           
  2882                           ;incstack = 0
  2883  00780E  0E00               	movlw	0
  2884  007810  6E16               	movwf	CAN_receive@returnValue,c
  2885                           
  2886                           ;ecan.c: 245: {
  2887                           ;ecan.c: 248: if (RXB0CONbits.RXFUL != 0)
  2888  007812  AE60               	btfss	3936,7,c	;volatile
  2889  007814  D083               	goto	l276
  2890                           
  2891                           ;ecan.c: 249: {
  2892                           ;ecan.c: 250: if ((RXB0SIDL & 0x08) == 0x08)
  2893  007816  A662               	btfss	3938,3,c	;volatile
  2894  007818  D01E               	goto	l2000
  2895                           
  2896                           ;ecan.c: 251: {
  2897                           ;ecan.c: 253: tempCanMsg->frame.idType = (unsigned char) 2;
  2898  00781A  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2899  00781E  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2900  007822  0E02               	movlw	2
  2901  007824  6EDF               	movwf	indf2,c
  2902                           
  2903                           ;ecan.c: 254: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB0EIDH, RXB0EIDL, RXB0SI
      +                          DH, RXB0SIDL);
  2904  007826  CF64 F001          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  2905  00782A  CF61 F002          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  2906  00782E  CF62 F003          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  2907  007832  5063               	movf	3939,w,c	;volatile
  2908  007834  EC94  F03A         	call	_convertReg2ExtendedCANid
  2909  007838  EE20 F001          	lfsr	2,1
  2910  00783C  5014               	movf	CAN_receive@tempCanMsg,w,c
  2911  00783E  26D9               	addwf	fsr2l,f,c
  2912  007840  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2913  007842  22DA               	addwfc	fsr2h,f,c
  2914  007844  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  2915  007848  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  2916  00784C  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  2917  007850  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  2918                           
  2919                           ;ecan.c: 255: } else {
  2920  007854  D019               	goto	l2004
  2921  007856                     l2000:
  2922                           
  2923                           ;ecan.c: 257: tempCanMsg->frame.idType = (unsigned char) 1;
  2924  007856  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2925  00785A  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2926  00785E  0E01               	movlw	1
  2927  007860  6EDF               	movwf	indf2,c
  2928                           
  2929                           ;ecan.c: 258: tempCanMsg->frame.id = convertReg2StandardCANid(RXB0SIDH, RXB0SIDL);
  2930  007862  CF62 F001          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  2931  007866  5061               	movf	3937,w,c	;volatile
  2932  007868  EC7B  F039         	call	_convertReg2StandardCANid
  2933  00786C  EE20 F001          	lfsr	2,1
  2934  007870  5014               	movf	CAN_receive@tempCanMsg,w,c
  2935  007872  26D9               	addwf	fsr2l,f,c
  2936  007874  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2937  007876  22DA               	addwfc	fsr2h,f,c
  2938  007878  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  2939  00787C  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  2940  007880  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  2941  007884  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  2942  007888                     l2004:
  2943                           
  2944                           ;ecan.c: 259: }
  2945                           ;ecan.c: 261: tempCanMsg->frame.dlc = RXB0DLC;
  2946  007888  EE20 F005          	lfsr	2,5
  2947  00788C  5014               	movf	CAN_receive@tempCanMsg,w,c
  2948  00788E  26D9               	addwf	fsr2l,f,c
  2949  007890  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2950  007892  22DA               	addwfc	fsr2h,f,c
  2951  007894  CF65 FFDF          	movff	3941,indf2	;volatile
  2952                           
  2953                           ;ecan.c: 262: tempCanMsg->frame.data0 = RXB0D0;
  2954  007898  EE20 F006          	lfsr	2,6
  2955  00789C  5014               	movf	CAN_receive@tempCanMsg,w,c
  2956  00789E  26D9               	addwf	fsr2l,f,c
  2957  0078A0  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2958  0078A2  22DA               	addwfc	fsr2h,f,c
  2959  0078A4  CF66 FFDF          	movff	3942,indf2	;volatile
  2960                           
  2961                           ;ecan.c: 263: tempCanMsg->frame.data1 = RXB0D1;
  2962  0078A8  EE20 F007          	lfsr	2,7
  2963  0078AC  5014               	movf	CAN_receive@tempCanMsg,w,c
  2964  0078AE  26D9               	addwf	fsr2l,f,c
  2965  0078B0  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2966  0078B2  22DA               	addwfc	fsr2h,f,c
  2967  0078B4  CF67 FFDF          	movff	3943,indf2	;volatile
  2968                           
  2969                           ;ecan.c: 264: tempCanMsg->frame.data2 = RXB0D2;
  2970  0078B8  EE20 F008          	lfsr	2,8
  2971  0078BC  5014               	movf	CAN_receive@tempCanMsg,w,c
  2972  0078BE  26D9               	addwf	fsr2l,f,c
  2973  0078C0  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2974  0078C2  22DA               	addwfc	fsr2h,f,c
  2975  0078C4  CF68 FFDF          	movff	3944,indf2	;volatile
  2976                           
  2977                           ;ecan.c: 265: tempCanMsg->frame.data3 = RXB0D3;
  2978  0078C8  EE20 F009          	lfsr	2,9
  2979  0078CC  5014               	movf	CAN_receive@tempCanMsg,w,c
  2980  0078CE  26D9               	addwf	fsr2l,f,c
  2981  0078D0  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2982  0078D2  22DA               	addwfc	fsr2h,f,c
  2983  0078D4  CF69 FFDF          	movff	3945,indf2	;volatile
  2984                           
  2985                           ;ecan.c: 266: tempCanMsg->frame.data4 = RXB0D4;
  2986  0078D8  EE20 F00A          	lfsr	2,10
  2987  0078DC  5014               	movf	CAN_receive@tempCanMsg,w,c
  2988  0078DE  26D9               	addwf	fsr2l,f,c
  2989  0078E0  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2990  0078E2  22DA               	addwfc	fsr2h,f,c
  2991  0078E4  CF6A FFDF          	movff	3946,indf2	;volatile
  2992                           
  2993                           ;ecan.c: 267: tempCanMsg->frame.data5 = RXB0D5;
  2994  0078E8  EE20 F00B          	lfsr	2,11
  2995  0078EC  5014               	movf	CAN_receive@tempCanMsg,w,c
  2996  0078EE  26D9               	addwf	fsr2l,f,c
  2997  0078F0  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2998  0078F2  22DA               	addwfc	fsr2h,f,c
  2999  0078F4  CF6B FFDF          	movff	3947,indf2	;volatile
  3000                           
  3001                           ;ecan.c: 268: tempCanMsg->frame.data6 = RXB0D6;
  3002  0078F8  EE20 F00C          	lfsr	2,12
  3003  0078FC  5014               	movf	CAN_receive@tempCanMsg,w,c
  3004  0078FE  26D9               	addwf	fsr2l,f,c
  3005  007900  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3006  007902  22DA               	addwfc	fsr2h,f,c
  3007  007904  CF6C FFDF          	movff	3948,indf2	;volatile
  3008                           
  3009                           ;ecan.c: 269: tempCanMsg->frame.data7 = RXB0D7;
  3010  007908  EE20 F00D          	lfsr	2,13
  3011  00790C  5014               	movf	CAN_receive@tempCanMsg,w,c
  3012  00790E  26D9               	addwf	fsr2l,f,c
  3013  007910  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3014  007912  22DA               	addwfc	fsr2h,f,c
  3015  007914  CF6D FFDF          	movff	3949,indf2	;volatile
  3016                           
  3017                           ;ecan.c: 270: RXB0CONbits.RXFUL = 0;
  3018  007918  9E60               	bcf	3936,7,c	;volatile
  3019  00791A  D089               	goto	l2056
  3020  00791C                     l276:
  3021  00791C  010F               	movlb	15	; () banked
  3022  00791E  AF30               	btfss	48,7,b	;volatile
  3023  007920  D088               	goto	l2058
  3024                           
  3025                           ; BSR set to: 15
  3026                           ;ecan.c: 273: {
  3027                           ;ecan.c: 274: if ((RXB1SIDL & 0x08) == 0x08)
  3028  007922  010F               	movlb	15	; () banked
  3029  007924  A732               	btfss	50,3,b	;volatile
  3030  007926  D01F               	goto	l2032
  3031                           
  3032                           ; BSR set to: 15
  3033                           ;ecan.c: 275: {
  3034                           ;ecan.c: 277: tempCanMsg->frame.idType = (unsigned char) 2;
  3035  007928  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3036  00792C  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3037  007930  0E02               	movlw	2
  3038  007932  6EDF               	movwf	indf2,c
  3039                           
  3040                           ; BSR set to: 15
  3041                           ;ecan.c: 278: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB1EIDH, RXB1EIDL, RXB1SI
      +                          DH, RXB1SIDL);
  3042  007934  CF34 F001          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  3043  007938  CF31 F002          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  3044  00793C  CF32 F003          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  3045  007940  010F               	movlb	15	; () banked
  3046  007942  5133               	movf	51,w,b	;volatile
  3047  007944  EC94  F03A         	call	_convertReg2ExtendedCANid
  3048  007948  EE20 F001          	lfsr	2,1
  3049  00794C  5014               	movf	CAN_receive@tempCanMsg,w,c
  3050  00794E  26D9               	addwf	fsr2l,f,c
  3051  007950  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3052  007952  22DA               	addwfc	fsr2h,f,c
  3053  007954  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  3054  007958  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  3055  00795C  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  3056  007960  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  3057                           
  3058                           ;ecan.c: 279: }
  3059  007964  D01A               	goto	l2036
  3060  007966                     l2032:
  3061                           
  3062                           ;ecan.c: 280: else
  3063                           ;ecan.c: 281: {
  3064                           ;ecan.c: 283: tempCanMsg->frame.idType = (unsigned char) 1;
  3065  007966  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3066  00796A  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3067  00796E  0E01               	movlw	1
  3068  007970  6EDF               	movwf	indf2,c
  3069                           
  3070                           ;ecan.c: 284: tempCanMsg->frame.id = convertReg2StandardCANid(RXB1SIDH, RXB1SIDL);
  3071  007972  CF32 F001          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  3072  007976  010F               	movlb	15	; () banked
  3073  007978  5131               	movf	49,w,b	;volatile
  3074  00797A  EC7B  F039         	call	_convertReg2StandardCANid
  3075  00797E  EE20 F001          	lfsr	2,1
  3076  007982  5014               	movf	CAN_receive@tempCanMsg,w,c
  3077  007984  26D9               	addwf	fsr2l,f,c
  3078  007986  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3079  007988  22DA               	addwfc	fsr2h,f,c
  3080  00798A  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  3081  00798E  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  3082  007992  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  3083  007996  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  3084  00799A                     l2036:
  3085                           
  3086                           ;ecan.c: 285: }
  3087                           ;ecan.c: 287: tempCanMsg->frame.dlc = RXB1DLC;
  3088  00799A  EE20 F005          	lfsr	2,5
  3089  00799E  5014               	movf	CAN_receive@tempCanMsg,w,c
  3090  0079A0  26D9               	addwf	fsr2l,f,c
  3091  0079A2  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3092  0079A4  22DA               	addwfc	fsr2h,f,c
  3093  0079A6  CF35 FFDF          	movff	3893,indf2	;volatile
  3094                           
  3095                           ;ecan.c: 288: tempCanMsg->frame.data0 = RXB1D0;
  3096  0079AA  EE20 F006          	lfsr	2,6
  3097  0079AE  5014               	movf	CAN_receive@tempCanMsg,w,c
  3098  0079B0  26D9               	addwf	fsr2l,f,c
  3099  0079B2  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3100  0079B4  22DA               	addwfc	fsr2h,f,c
  3101  0079B6  CF36 FFDF          	movff	3894,indf2	;volatile
  3102                           
  3103                           ;ecan.c: 289: tempCanMsg->frame.data1 = RXB1D1;
  3104  0079BA  EE20 F007          	lfsr	2,7
  3105  0079BE  5014               	movf	CAN_receive@tempCanMsg,w,c
  3106  0079C0  26D9               	addwf	fsr2l,f,c
  3107  0079C2  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3108  0079C4  22DA               	addwfc	fsr2h,f,c
  3109  0079C6  CF37 FFDF          	movff	3895,indf2	;volatile
  3110                           
  3111                           ;ecan.c: 290: tempCanMsg->frame.data2 = RXB1D2;
  3112  0079CA  EE20 F008          	lfsr	2,8
  3113  0079CE  5014               	movf	CAN_receive@tempCanMsg,w,c
  3114  0079D0  26D9               	addwf	fsr2l,f,c
  3115  0079D2  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3116  0079D4  22DA               	addwfc	fsr2h,f,c
  3117  0079D6  CF38 FFDF          	movff	3896,indf2	;volatile
  3118                           
  3119                           ;ecan.c: 291: tempCanMsg->frame.data3 = RXB1D3;
  3120  0079DA  EE20 F009          	lfsr	2,9
  3121  0079DE  5014               	movf	CAN_receive@tempCanMsg,w,c
  3122  0079E0  26D9               	addwf	fsr2l,f,c
  3123  0079E2  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3124  0079E4  22DA               	addwfc	fsr2h,f,c
  3125  0079E6  CF39 FFDF          	movff	3897,indf2	;volatile
  3126                           
  3127                           ;ecan.c: 292: tempCanMsg->frame.data4 = RXB1D4;
  3128  0079EA  EE20 F00A          	lfsr	2,10
  3129  0079EE  5014               	movf	CAN_receive@tempCanMsg,w,c
  3130  0079F0  26D9               	addwf	fsr2l,f,c
  3131  0079F2  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3132  0079F4  22DA               	addwfc	fsr2h,f,c
  3133  0079F6  CF3A FFDF          	movff	3898,indf2	;volatile
  3134                           
  3135                           ;ecan.c: 293: tempCanMsg->frame.data5 = RXB1D5;
  3136  0079FA  EE20 F00B          	lfsr	2,11
  3137  0079FE  5014               	movf	CAN_receive@tempCanMsg,w,c
  3138  007A00  26D9               	addwf	fsr2l,f,c
  3139  007A02  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3140  007A04  22DA               	addwfc	fsr2h,f,c
  3141  007A06  CF3B FFDF          	movff	3899,indf2	;volatile
  3142                           
  3143                           ;ecan.c: 294: tempCanMsg->frame.data6 = RXB1D6;
  3144  007A0A  EE20 F00C          	lfsr	2,12
  3145  007A0E  5014               	movf	CAN_receive@tempCanMsg,w,c
  3146  007A10  26D9               	addwf	fsr2l,f,c
  3147  007A12  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3148  007A14  22DA               	addwfc	fsr2h,f,c
  3149  007A16  CF3C FFDF          	movff	3900,indf2	;volatile
  3150                           
  3151                           ;ecan.c: 295: tempCanMsg->frame.data7 = RXB1D7;
  3152  007A1A  EE20 F00D          	lfsr	2,13
  3153  007A1E  5014               	movf	CAN_receive@tempCanMsg,w,c
  3154  007A20  26D9               	addwf	fsr2l,f,c
  3155  007A22  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3156  007A24  22DA               	addwfc	fsr2h,f,c
  3157  007A26  CF3D FFDF          	movff	3901,indf2	;volatile
  3158                           
  3159                           ;ecan.c: 296: RXB1CONbits.RXFUL = 0;
  3160  007A2A  010F               	movlb	15	; () banked
  3161  007A2C  9F30               	bcf	48,7,b	;volatile
  3162  007A2E                     l2056:
  3163                           
  3164                           ; BSR set to: 15
  3165                           ;ecan.c: 297: returnValue = 1;
  3166  007A2E  0E01               	movlw	1
  3167  007A30  6E16               	movwf	CAN_receive@returnValue,c
  3168  007A32                     l2058:
  3169                           
  3170                           ;ecan.c: 298: }
  3171                           ;ecan.c: 301: PIR5bits.RXB1IF = 0;
  3172  007A32  9277               	bcf	3959,1,c	;volatile
  3173                           
  3174                           ;ecan.c: 302: }
  3175                           ;ecan.c: 305: return (returnValue);
  3176  007A34  5016               	movf	CAN_receive@returnValue,w,c
  3177  007A36  0012               	return	
  3178  007A38                     __end_of_CAN_receive:
  3179                           	opt stack 0
  3180                           wreg	equ	0xFE8
  3181                           indf2	equ	0xFDF
  3182                           postinc2	equ	0xFDE
  3183                           fsr2h	equ	0xFDA
  3184                           fsr2l	equ	0xFD9
  3185                           status	equ	0xFD8
  3186                           
  3187 ;; *************** function _convertReg2StandardCANid *****************
  3188 ;; Defined at:
  3189 ;;		line 386 in file "mcc_generated_files/ecan.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  tempRXBn_SID    1    wreg     unsigned char 
  3192 ;;  tempRXBn_SID    1    0[COMRAM] unsigned char 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  tempRXBn_SID    1    6[COMRAM] unsigned char 
  3195 ;;  ConvertedID     4   11[COMRAM] unsigned long 
  3196 ;;  returnValue     4    7[COMRAM] unsigned long 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  4    0[COMRAM] unsigned long 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3207 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3209 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3210 ;;Total ram usage:       15 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_CAN_receive
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text16
  3220  0072F6                     __ptext16:
  3221                           	opt stack 0
  3222  0072F6                     _convertReg2StandardCANid:
  3223                           	opt stack 29
  3224                           
  3225                           ;incstack = 0
  3226                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  3227  0072F6  6E07               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
  3228                           
  3229                           ;ecan.c: 387: unsigned long returnValue = 0;
  3230  0072F8  0E00               	movlw	0
  3231  0072FA  6E08               	movwf	convertReg2StandardCANid@returnValue,c
  3232  0072FC  0E00               	movlw	0
  3233  0072FE  6E09               	movwf	convertReg2StandardCANid@returnValue+1,c
  3234  007300  0E00               	movlw	0
  3235  007302  6E0A               	movwf	convertReg2StandardCANid@returnValue+2,c
  3236  007304  0E00               	movlw	0
  3237  007306  6E0B               	movwf	convertReg2StandardCANid@returnValue+3,c
  3238                           
  3239                           ;ecan.c: 388: unsigned long ConvertedID;
  3240                           ;ecan.c: 392: ConvertedID = (tempRXBn_SIDH << 3);
  3241  007308  5007               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
  3242  00730A  6E05               	movwf	??_convertReg2StandardCANid& (0+255),c
  3243  00730C  6A06               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
  3244  00730E  90D8               	bcf	status,0,c
  3245  007310  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3246  007312  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3247  007314  90D8               	bcf	status,0,c
  3248  007316  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3249  007318  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3250  00731A  90D8               	bcf	status,0,c
  3251  00731C  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3252  00731E  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3253  007320  C005  F00C         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  3254  007324  C006  F00D         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  3255  007328  0E00               	movlw	0
  3256  00732A  BE0D               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
  3257  00732C  0EFF               	movlw	-1
  3258  00732E  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  3259  007330  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  3260                           
  3261                           ;ecan.c: 393: ConvertedID = ConvertedID + (tempRXBn_SIDL >> 5);
  3262  007332  C001  F005         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  3263  007336  0E05               	movlw	5
  3264  007338  6E06               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
  3265  00733A                     u385:
  3266  00733A  90D8               	bcf	status,0,c
  3267  00733C  3205               	rrcf	??_convertReg2StandardCANid,f,c
  3268  00733E  2E06               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
  3269  007340  D7FC               	goto	u385
  3270  007342  5005               	movf	??_convertReg2StandardCANid,w,c
  3271  007344  240C               	addwf	convertReg2StandardCANid@ConvertedID,w,c
  3272  007346  6E0C               	movwf	convertReg2StandardCANid@ConvertedID,c
  3273  007348  0E00               	movlw	0
  3274  00734A  200D               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
  3275  00734C  6E0D               	movwf	convertReg2StandardCANid@ConvertedID+1,c
  3276  00734E  0E00               	movlw	0
  3277  007350  200E               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
  3278  007352  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  3279  007354  0E00               	movlw	0
  3280  007356  200F               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
  3281  007358  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  3282                           
  3283                           ;ecan.c: 394: returnValue = ConvertedID;
  3284  00735A  C00C  F008         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  3285  00735E  C00D  F009         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  3286  007362  C00E  F00A         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  3287  007366  C00F  F00B         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  3288                           
  3289                           ;ecan.c: 395: return (returnValue);
  3290  00736A  C008  F001         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  3291  00736E  C009  F002         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  3292  007372  C00A  F003         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  3293  007376  C00B  F004         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  3294  00737A  0012               	return	
  3295  00737C                     __end_of_convertReg2StandardCANid:
  3296                           	opt stack 0
  3297                           wreg	equ	0xFE8
  3298                           indf2	equ	0xFDF
  3299                           postinc2	equ	0xFDE
  3300                           fsr2h	equ	0xFDA
  3301                           fsr2l	equ	0xFD9
  3302                           status	equ	0xFD8
  3303                           
  3304 ;; *************** function _convertReg2ExtendedCANid *****************
  3305 ;; Defined at:
  3306 ;;		line 366 in file "mcc_generated_files/ecan.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  tempRXBn_EID    1    wreg     unsigned char 
  3309 ;;  tempRXBn_EID    1    0[COMRAM] unsigned char 
  3310 ;;  tempRXBn_SID    1    1[COMRAM] unsigned char 
  3311 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  tempRXBn_EID    1    8[COMRAM] unsigned char 
  3314 ;;  ConvertedID     4   15[COMRAM] unsigned long 
  3315 ;;  returnValue     4    9[COMRAM] unsigned long 
  3316 ;;  CAN_standard    1   14[COMRAM] unsigned char 
  3317 ;;  CAN_standard    1   13[COMRAM] unsigned char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  4    0[COMRAM] unsigned long 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, status,0
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3328 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3329 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3330 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3331 ;;Total ram usage:       19 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_CAN_receive
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text17
  3341  007528                     __ptext17:
  3342                           	opt stack 0
  3343  007528                     _convertReg2ExtendedCANid:
  3344                           	opt stack 29
  3345                           
  3346                           ;incstack = 0
  3347                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  3348  007528  6E09               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
  3349                           
  3350                           ;ecan.c: 367: unsigned long returnValue = 0;
  3351  00752A  0E00               	movlw	0
  3352  00752C  6E0A               	movwf	convertReg2ExtendedCANid@returnValue,c
  3353  00752E  0E00               	movlw	0
  3354  007530  6E0B               	movwf	convertReg2ExtendedCANid@returnValue+1,c
  3355  007532  0E00               	movlw	0
  3356  007534  6E0C               	movwf	convertReg2ExtendedCANid@returnValue+2,c
  3357  007536  0E00               	movlw	0
  3358  007538  6E0D               	movwf	convertReg2ExtendedCANid@returnValue+3,c
  3359                           
  3360                           ;ecan.c: 368: unsigned long ConvertedID = 0;
  3361  00753A  0E00               	movlw	0
  3362  00753C  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3363  00753E  0E00               	movlw	0
  3364  007540  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3365  007542  0E00               	movlw	0
  3366  007544  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3367  007546  0E00               	movlw	0
  3368  007548  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3369                           
  3370                           ;ecan.c: 369: unsigned char CAN_standardLo_ID_lo2bits;
  3371                           ;ecan.c: 370: unsigned char CAN_standardLo_ID_hi3bits;
  3372                           ;ecan.c: 372: CAN_standardLo_ID_lo2bits = (tempRXBn_SIDL & 0x03);
  3373  00754A  5003               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  3374  00754C  0B03               	andlw	3
  3375  00754E  6E0E               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
  3376                           
  3377                           ;ecan.c: 373: CAN_standardLo_ID_hi3bits = (tempRXBn_SIDL >> 5);
  3378  007550  3803               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  3379  007552  42E8               	rrncf	wreg,f,c
  3380  007554  0B07               	andlw	7
  3381  007556  6E0F               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
  3382                           
  3383                           ;ecan.c: 374: ConvertedID = (tempRXBn_SIDH << 3);
  3384  007558  5002               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
  3385  00755A  6E05               	movwf	??_convertReg2ExtendedCANid& (0+255),c
  3386  00755C  6A06               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
  3387  00755E  90D8               	bcf	status,0,c
  3388  007560  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3389  007562  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3390  007564  90D8               	bcf	status,0,c
  3391  007566  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3392  007568  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3393  00756A  90D8               	bcf	status,0,c
  3394  00756C  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3395  00756E  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3396  007570  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3397  007574  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3398  007578  0E00               	movlw	0
  3399  00757A  BE11               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
  3400  00757C  0EFF               	movlw	-1
  3401  00757E  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3402  007580  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3403                           
  3404                           ;ecan.c: 375: ConvertedID = ConvertedID + CAN_standardLo_ID_hi3bits;
  3405  007582  500F               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
  3406  007584  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3407  007586  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3408  007588  0E00               	movlw	0
  3409  00758A  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3410  00758C  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3411  00758E  0E00               	movlw	0
  3412  007590  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3413  007592  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3414  007594  0E00               	movlw	0
  3415  007596  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3416  007598  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3417                           
  3418                           ;ecan.c: 376: ConvertedID = (ConvertedID << 2);
  3419  00759A  C010  F005         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  3420  00759E  C011  F006         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  3421  0075A2  C012  F007         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  3422  0075A6  C013  F008         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  3423  0075AA  0E02               	movlw	2
  3424  0075AC                     u375:
  3425  0075AC  90D8               	bcf	status,0,c
  3426  0075AE  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3427  0075B0  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3428  0075B2  3607               	rlcf	??_convertReg2ExtendedCANid+2,f,c
  3429  0075B4  3608               	rlcf	??_convertReg2ExtendedCANid+3,f,c
  3430  0075B6  2EE8               	decfsz	wreg,f,c
  3431  0075B8  D7F9               	goto	u375
  3432  0075BA  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3433  0075BE  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3434  0075C2  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3435  0075C6  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3436                           
  3437                           ;ecan.c: 377: ConvertedID = ConvertedID + CAN_standardLo_ID_lo2bits;
  3438  0075CA  500E               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
  3439  0075CC  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3440  0075CE  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3441  0075D0  0E00               	movlw	0
  3442  0075D2  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3443  0075D4  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3444  0075D6  0E00               	movlw	0
  3445  0075D8  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3446  0075DA  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3447  0075DC  0E00               	movlw	0
  3448  0075DE  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3449  0075E0  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3450                           
  3451                           ;ecan.c: 378: ConvertedID = (ConvertedID << 8);
  3452  0075E2  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  3453  0075E6  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  3454  0075EA  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  3455  0075EE  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  3456  0075F0  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3457  0075F4  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3458  0075F8  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3459  0075FC  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3460                           
  3461                           ;ecan.c: 379: ConvertedID = ConvertedID + tempRXBn_EIDH;
  3462  007600  5009               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
  3463  007602  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3464  007604  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3465  007606  0E00               	movlw	0
  3466  007608  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3467  00760A  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3468  00760C  0E00               	movlw	0
  3469  00760E  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3470  007610  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3471  007612  0E00               	movlw	0
  3472  007614  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3473  007616  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3474                           
  3475                           ;ecan.c: 380: ConvertedID = (ConvertedID << 8);
  3476  007618  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  3477  00761C  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  3478  007620  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  3479  007624  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  3480  007626  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3481  00762A  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3482  00762E  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3483  007632  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3484                           
  3485                           ;ecan.c: 381: ConvertedID = ConvertedID + tempRXBn_EIDL;
  3486  007636  5001               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
  3487  007638  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3488  00763A  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3489  00763C  0E00               	movlw	0
  3490  00763E  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3491  007640  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3492  007642  0E00               	movlw	0
  3493  007644  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3494  007646  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3495  007648  0E00               	movlw	0
  3496  00764A  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3497  00764C  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3498                           
  3499                           ;ecan.c: 382: returnValue = ConvertedID;
  3500  00764E  C010  F00A         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  3501  007652  C011  F00B         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  3502  007656  C012  F00C         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  3503  00765A  C013  F00D         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  3504                           
  3505                           ;ecan.c: 383: return (returnValue);
  3506  00765E  C00A  F001         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  3507  007662  C00B  F002         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  3508  007666  C00C  F003         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  3509  00766A  C00D  F004         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  3510  00766E  0012               	return	
  3511  007670                     __end_of_convertReg2ExtendedCANid:
  3512                           	opt stack 0
  3513  0000                     wreg	equ	0xFE8
  3514                           indf2	equ	0xFDF
  3515                           postinc2	equ	0xFDE
  3516                           fsr2h	equ	0xFDA
  3517                           fsr2l	equ	0xFD9
  3518                           status	equ	0xFD8
  3519                           wreg	equ	0xFE8
  3520                           indf2	equ	0xFDF
  3521                           postinc2	equ	0xFDE
  3522                           fsr2h	equ	0xFDA
  3523                           fsr2l	equ	0xFD9
  3524                           status	equ	0xFD8
  3525                           
  3526                           	psect	rparam
  3527  0000                     wreg	equ	0xFE8
  3528                           indf2	equ	0xFDF
  3529                           postinc2	equ	0xFDE
  3530                           fsr2h	equ	0xFDA
  3531                           fsr2l	equ	0xFD9
  3532                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(COMRAM[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(COMRAM[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(COMRAM[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(COMRAM[1]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> main@test(COMRAM[14]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> main@test(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_CAN_transmit
    _SYSTEM_Initialize->_ECAN_Initialize
    _FT800_Init->_wr32
    _wr8->_SPI_Exchange8bit
    _wr32->_SPI_Exchange8bit
    _wr16->_SPI_Exchange8bit
    _rd16->_SPI_Exchange8bit
    _host_command->_SPI_Exchange8bit
    _CAN_transmit->_convertCANid2Reg
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0    9722
                                             25 COMRAM    19    19      0
                        _CAN_receive
                       _CAN_transmit
                         _FT800_Init
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ECAN_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _FT800_Init                                           1     1      0    4331
                                             12 COMRAM     1     1      0
                       _host_command
                               _rd16
                               _wr16
                               _wr32
                                _wr8
 ---------------------------------------------------------------------------------
 (2) _wr8                                                  7     3      4    1471
                                              1 COMRAM     7     3      4
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _wr32                                                11     4      7     777
                                              1 COMRAM    11     4      7
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _wr16                                                 8     3      5    1797
                                              1 COMRAM     8     3      5
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _rd16                                                 7     4      3     256
                                              1 COMRAM     7     4      3
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _host_command                                         1     1      0      30
                                              1 COMRAM     1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _SPI_Exchange8bit                                     1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_transmit                                         7     5      2    3288
                                             18 COMRAM     7     5      2
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (2) _convertCANid2Reg                                    18     5     13    1928
                                              0 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             19 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                              0 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _CAN_transmit
     _convertCANid2Reg
   _FT800_Init
     _host_command
       _SPI_Exchange8bit
     _rd16
       _SPI_Exchange8bit
     _wr16
       _SPI_Exchange8bit
     _wr32
       _SPI_Exchange8bit
     _wr8
       _SPI_Exchange8bit
   _SYSTEM_Initialize
     _ECAN_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      30       1       50.5%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30       6        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jul 13 10:59:01 2017

                                   _SPI_Initialize 7118                                        _SSPSTATbits 000FC7  
                         __size_of_ECAN_Initialize 00E6                                        __CFG_BORV$3 000000  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000                                       __CFG_CP3$OFF 000000  
                                              l270 7EF2                                                l361 713C  
                                              l276 791C                                                l268 7DE4  
                                              l454 7412                                       __CFG_CPB$OFF 000000  
                                     __CFG_CPD$OFF 000000                                                u355 7708  
                                              u507 7406                                                u365 77A8  
                                              u517 7A40                                                u390 72DA  
                                              u375 75AC                                                u527 7A52  
                                              u385 733A                                                u395 72D0  
                                              _dli 002F                                                _wr8 7182  
                                              wreg 000FE8                         ??_convertReg2StandardCANid 0005  
                              __size_of_FT800_Init 028A                                               l2000 7856  
                                             l2004 7888                                               l2032 7966  
                                             l2036 799A                                               l2124 7CA2  
                                             l1156 7446                                               l2056 7A2E  
                                             l1176 751A                                               l2058 7A32  
                                             l2176 73BE                                               l2188 7414  
                                             l1786 777E                                               ?_wr8 0002  
                                             _LATA 000F89                                               _LATB 000F8A  
                                             _LATC 000F8B                                               _LATD 000F8C  
                                             _LATE 000F8D                                               _WPUB 000F5B  
                                             _rd16 722E                                               _wr32 727E  
                                             _wr16 71F2                                               _main 737C  
                     convertCANid2Reg@passedInEIDH 0006                       convertCANid2Reg@passedInEIDL 0008  
                                             fsr2h 000FDA                                               indf2 000FDF  
                                             fsr2l 000FD9                       convertCANid2Reg@passedInSIDH 000A  
                     convertCANid2Reg@passedInSIDL 000C                            CAN_transmit@returnValue 0015  
                                             start 0000                                      __CFG_IESO$OFF 000000  
                                    __CFG_FOSC$HS1 000000                             __end_of_SPI_Initialize 7126  
                                    __CFG_MCLRE$ON 000000                                       ___param_bank 000000  
                                            ??_wr8 0006                     __size_of_OSCILLATOR_Initialize 0012  
                    __end_of_OSCILLATOR_Initialize 7156                                              ?_rd16 0002  
                                            ?_wr32 0002                                              ?_wr16 0002  
                                            ?_main 0001                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                              _TRISE 000F96  
                                    __CFG_WRT0$OFF 000000                                      __CFG_WRT1$OFF 000000  
                                    __CFG_WRT2$OFF 000000                                      __CFG_WRT3$OFF 000000  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                              CAN_receive@tempCanMsg 0014  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                     __CFG_EBTRB$OFF 000000  
                             __end_of_CAN_transmit 8000                convertReg2ExtendedCANid@ConvertedID 0010  
                                            status 000FD8                               CAN_transmit@tempEIDH 0016  
                             CAN_transmit@tempEIDL 0017                               CAN_transmit@tempSIDH 0018  
                             CAN_transmit@tempSIDL 0019                                    ?_SPI_Initialize 0001  
                                  __initialization 7126                               __size_of_CAN_receive 022A  
                                     __end_of_rd16 727E                                       __end_of_wr16 722E  
                                     __end_of_wr32 72F6                                       __end_of_main 7442  
                                           ??_rd16 0005                                             ??_wr32 0009  
                                           ??_wr16 0007                                             ??_main 001A  
                                    __activetblptr 000000                                     __CFG_RETEN$OFF 000000  
                                ??_ECAN_Initialize 0001                           __end_of_SPI_Exchange8bit 7144  
                                           _CANCON 000F6F                                             _ANCON0 000F5D  
                                           _ANCON1 000F5C                                    __CFG_BBSIZ$BB2K 000000  
                                   __CFG_WDTEN$OFF 000000                                             _OSCCON 000FD3  
                                           _RXB0D0 000F66                                             _RXB0D1 000F67  
                                           _RXB0D2 000F68                                             _RXB0D3 000F69  
                                           _RXB0D4 000F6A                                             _RXB1D0 000F36  
                                           _RXB0D5 000F6B                                             _RXB1D1 000F37  
                                           _RXB0D6 000F6C                                             _RXB1D2 000F38  
                                           _RXB0D7 000F6D                                             _RXB1D3 000F39  
                                           _RXB1D4 000F3A                                             _RXB1D5 000F3B  
                                           _RXB1D6 000F3C                                             _RXB1D7 000F3D  
                                           _TXB0D0 000F26                                             _TXB0D1 000F27  
                                           _TXB0D2 000F28                                             _TXB0D3 000F29  
                                           _TXB0D4 000F2A                                             _TXB1D0 000F16  
                                           _TXB0D5 000F2B                                             _TXB1D1 000F17  
                                           _TXB0D6 000F2C                                             _TXB1D2 000F18  
                                           _TXB0D7 000F2D                                             _TXB1D3 000F19  
                                           _TXB1D4 000F1A                                             _TXB2D0 000F06  
                                           _TXB1D5 000F1B                                             _TXB2D1 000F07  
                                           _TXB1D6 000F1C                                             _TXB2D2 000F08  
                                           _TXB1D7 000F1D                                             _TXB2D3 000F09  
                                           _TXB2D4 000F0A                                             _TXB2D5 000F0B  
                                           _TXB2D6 000F0C                                             _TXB2D7 000F0D  
                                           _SSPADD 000FC8                                             _TRISA5 007C95  
                                           _TRISC3 007CA3                                             _TRISC5 007CA5  
                                           _SSPBUF 000FC9                                     __CFG_XINST$OFF 000000  
                                     ??_FT800_Init 000D                                     __CFG_STVREN$ON 000000  
                        __size_of_convertCANid2Reg 019E                   __end_of_convertReg2StandardCANid 737C  
                               __end_of_FT800_Init 7CC2                                  _SYSTEM_Initialize 7156  
                                    ?_host_command 0001                                         __accesstop 0060  
                          __end_of__initialization 712E                                 ?_SYSTEM_Initialize 0001  
                         _convertReg2ExtendedCANid 7528                             CAN_receive@returnValue 0016  
                                    ___rparam_used 000001                                     __pcstackCOMRAM 0001  
                              ??_SYSTEM_Initialize 0002                              __size_of_CAN_transmit 033E  
            convertReg2StandardCANid@tempRXBn_SIDH 0007              convertReg2StandardCANid@tempRXBn_SIDL 0001  
                        __end_of_SYSTEM_Initialize 7168                                     ??_host_command 0002  
                                  __CFG_PLLCFG$OFF 000000                                         _cmd_offset 002D  
                                     _CAN_transmit 7CC2                                            _ECANCON 000F72  
                                          _CANSTAT 000F6E                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
                                 __CFG_CANMX$PORTB 000000                                            _REFOCON 000F9A  
                                          _OSCCON2 000FD2                                            _RXB0DLC 000F65  
                                          _RXB1DLC 000F35                                            _OSCTUNE 000F9B  
                                          _TXB0DLC 000F25                                            _TXB1DLC 000F15  
                                          _TXB2DLC 000F05                                            _SSPCON1 000FC6  
                                          _SSPSTAT 000FC7                                   ??_SPI_Initialize 0001  
                                  __CFG_PWRTEN$OFF 000000                                            __Hparam 0000  
                                          __Lparam 0000                  __size_of_convertReg2StandardCANid 0086  
                        ?_convertReg2StandardCANid 0001                                    _ECAN_Initialize 7442  
                                          __pcinit 7126                                            __ramtop 0F00  
                                          __ptext0 737C                                            __ptext1 7156  
                                          __ptext2 7118                                            __ptext3 71B8  
                                          __ptext4 7144                                            __ptext5 7442  
                                          __ptext6 7A38                                            __ptext7 7182  
                                          __ptext8 727E                                            __ptext9 71F2  
                            _OSCILLATOR_Initialize 7144                                       __size_of_wr8 0036  
                                 _convertCANid2Reg 7670                           ??_PIN_MANAGER_Initialize 0001  
                                __CFG_MSSPMSK$MSK7 000000                                  ?_SPI_Exchange8bit 0001  
                       __size_of_SYSTEM_Initialize 0012                               end_of_initialization 712E  
                                          wr8@addr 0002                                 ??_SPI_Exchange8bit 0001  
                             SPI_Exchange8bit@data 0001                                      ??_CAN_receive 0016  
                                          postinc2 000FDE                               __end_of_host_command 7182  
                                        _TRISAbits 000F92                                          _TRISCbits 000F94  
                           CAN_transmit@tempCanMsg 0013                                          _TRISDbits 000F95  
                       ??_convertReg2ExtendedCANid 0005                            __end_of_ECAN_Initialize 7528  
                              __end_of_CAN_receive 7A38                             ?_OSCILLATOR_Initialize 0001  
                              start_initialization 7126                    __size_of_PIN_MANAGER_Initialize 003A  
                                      __end_of_wr8 71B8                convertReg2StandardCANid@returnValue 0008  
                                      __pbssCOMRAM 002D                                        _CAN_receive 780E  
                                 ?_ECAN_Initialize 0001                             _PIN_MANAGER_Initialize 71B8  
                         __end_of_convertCANid2Reg 780E                              __size_of_host_command 001A  
                                      _COMSTATbits 000F71                   __end_of_convertReg2ExtendedCANid 7670  
                   convertCANid2Reg@tempPassedInID 0001                                       _host_command 7168  
                                         _LATAbits 000F89                                           _LATCbits 000F8B  
                                         _LATDbits 000F8C                                           _PIE5bits 000F76  
                                         _PIR5bits 000F77                          __size_of_SPI_Exchange8bit 0010  
                                         _RXB0EIDH 000F63                                           _RXB0EIDL 000F64  
                                         _RXB1EIDH 000F33                                           _RXB1EIDL 000F34  
                                         _RXB0SIDH 000F61                                           _RXB0SIDL 000F62  
                                         _RXB1SIDH 000F31                                           _RXF0EIDH 000EE2  
                                         _RXB1SIDL 000F32                                           _RXF0EIDL 000EE3  
                                         _RXF1EIDH 000EE6                                           _RXF1EIDL 000EE7  
                                         _RXF2EIDH 000EEA                                           _RXF2EIDL 000EEB  
                                         _RXF3EIDH 000EEE                                           _RXF3EIDL 000EEF  
                                         _RXF4EIDH 000EF2                                           _RXF4EIDL 000EF3  
                                         _RXF5EIDH 000EF6                                           _RXF5EIDL 000EF7  
                                         _RXF0SIDH 000EE0                                           _RXF0SIDL 000EE1  
                                         _TXB0EIDH 000F23                                           _RXF1SIDH 000EE4  
                                         _TXB0EIDL 000F24                                           _RXF1SIDL 000EE5  
                                         _TXB1EIDH 000F13                                           _RXF2SIDH 000EE8  
                                         _TXB1EIDL 000F14                                           _RXF2SIDL 000EE9  
                                         _TXB2EIDH 000F03                                           _RXF3SIDH 000EEC  
                                         _TXB2EIDL 000F04                                           _RXF3SIDL 000EED  
                                         _RXF4SIDH 000EF0                                           _RXF4SIDL 000EF1  
                                         _RXF5SIDH 000EF4                                           _RXF5SIDL 000EF5  
                                         _RXM0EIDH 000EFA                                           _RXM0EIDL 000EFB  
                                         _TXB0SIDH 000F21                                           _RXM1EIDH 000EFE  
                                         _TXB0SIDL 000F22                                           _RXM1EIDL 000EFF  
                                         _TXB1SIDH 000F11                                           _TXB1SIDL 000F12  
                                         _TXB2SIDH 000F01                                           _TXB2SIDL 000F02  
                                        wr32@value 0005                                          wr16@value 0005  
                                         _RXM0SIDH 000EF8                                           _RXM0SIDL 000EF9  
                                         _RXM1SIDH 000EFC                                           _RXM1SIDL 000EFD  
                                 __CFG_SOSCSEL$DIG 000000                                          main@data0 001B  
                                        main@data1 001D                           _convertReg2StandardCANid 72F6  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0009              convertReg2ExtendedCANid@tempRXBn_EIDL 0001  
            convertReg2ExtendedCANid@tempRXBn_SIDH 0002              convertReg2ExtendedCANid@tempRXBn_SIDL 0003  
                                       _ANCON0bits 000F5D                                           __Hrparam 0000  
                                       _FT800_Init 7A38                                           __Lrparam 0000  
                               __CFG_BOREN$SBORDIS 000000                            __size_of_SPI_Initialize 000E  
                        convertCANid2Reg@canIdType 0005                            ??_OSCILLATOR_Initialize 0001  
                                       _CIOCONbits 000F70                                           rd16@addr 0002  
convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 000F                                           rd16@temp 0008  
convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 000E                            convertCANid2Reg@wipSIDL 0012  
                                         __ptext10 722E                                           __ptext11 7168  
                                         __ptext12 7134                                           __ptext13 7CC2  
                                         __ptext14 7670                                           __ptext15 780E  
                                         __ptext16 72F6                                           __ptext17 7528  
              convertReg2StandardCANid@ConvertedID 000C                                      __size_of_rd16 0050  
                                    __size_of_wr16 003C                                      __size_of_wr32 0078  
                                    __size_of_main 00C6                convertReg2ExtendedCANid@returnValue 000A  
                __size_of_convertReg2ExtendedCANid 0148                                           wr32@addr 0002  
                                         wr16@addr 0002                          ?_convertReg2ExtendedCANid 0001  
                                    ?_CAN_transmit 0013                                           main@test 001F  
                              __CFG_INTOSCSEL$HIGH 000000                                        _RXB0CONbits 000F60  
                                      _RXB1CONbits 000F30                                           wr8@value 0005  
                          ?_PIN_MANAGER_Initialize 0001                                        _TXB0CONbits 000F20  
                                     ?_CAN_receive 0014                                        _TXB1CONbits 000F10  
                                      _TXB2CONbits 000F00                                        ?_FT800_Init 0001  
                                   ??_CAN_transmit 0015                                   _SPI_Exchange8bit 7134  
                                ?_convertCANid2Reg 0001                                 __CFG_WDTPS$1048576 000000  
                               ??_convertCANid2Reg 000E                                host_command@command 0002  
                                      _SSPCON1bits 000FC6                     __end_of_PIN_MANAGER_Initialize 71F2  
                              __CFG_BORPWR$ZPBORMV 000000  
