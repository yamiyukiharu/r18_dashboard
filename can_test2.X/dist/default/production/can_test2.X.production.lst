

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Jul 09 16:21:01 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,inline
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23  0000                     
    24                           ; Version 1.42
    25                           ; Generated 13/04/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F45K80 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _BRGCON3	set	3653
    59  0000                     _BRGCON2	set	3652
    60  0000                     _BRGCON1	set	3651
    61  0000                     _RXF5SIDL	set	3829
    62  0000                     _RXF5SIDH	set	3828
    63  0000                     _RXF5EIDL	set	3831
    64  0000                     _RXF5EIDH	set	3830
    65  0000                     _RXF4SIDL	set	3825
    66  0000                     _RXF4SIDH	set	3824
    67  0000                     _RXF4EIDL	set	3827
    68  0000                     _RXF4EIDH	set	3826
    69  0000                     _RXF3SIDL	set	3821
    70  0000                     _RXF3SIDH	set	3820
    71  0000                     _RXF3EIDL	set	3823
    72  0000                     _RXF3EIDH	set	3822
    73  0000                     _RXF2SIDL	set	3817
    74  0000                     _RXF2SIDH	set	3816
    75  0000                     _RXF2EIDL	set	3819
    76  0000                     _RXF2EIDH	set	3818
    77  0000                     _RXF1SIDL	set	3813
    78  0000                     _RXF1SIDH	set	3812
    79  0000                     _RXF1EIDL	set	3815
    80  0000                     _RXF1EIDH	set	3814
    81  0000                     _RXF0SIDL	set	3809
    82  0000                     _RXF0SIDH	set	3808
    83  0000                     _RXF0EIDL	set	3811
    84  0000                     _RXF0EIDH	set	3810
    85  0000                     _RXM1SIDL	set	3837
    86  0000                     _RXM1SIDH	set	3836
    87  0000                     _RXM1EIDL	set	3839
    88  0000                     _RXM1EIDH	set	3838
    89  0000                     _RXM0SIDL	set	3833
    90  0000                     _RXM0SIDH	set	3832
    91  0000                     _RXM0EIDL	set	3835
    92  0000                     _RXM0EIDH	set	3834
    93  0000                     _ANCON0bits	set	3933
    94  0000                     _WPUB	set	3931
    95  0000                     _ANCON1	set	3932
    96  0000                     _ANCON0	set	3933
    97  0000                     _RXB1D7	set	3901
    98  0000                     _RXB1D6	set	3900
    99  0000                     _RXB1D5	set	3899
   100  0000                     _RXB1D4	set	3898
   101  0000                     _RXB1D3	set	3897
   102  0000                     _RXB1D2	set	3896
   103  0000                     _RXB1D1	set	3895
   104  0000                     _RXB1D0	set	3894
   105  0000                     _RXB1DLC	set	3893
   106  0000                     _RXB1SIDH	set	3889
   107  0000                     _RXB1EIDL	set	3892
   108  0000                     _RXB1EIDH	set	3891
   109  0000                     _RXB1SIDL	set	3890
   110  0000                     _RXB1CONbits	set	3888
   111  0000                     _TXB2D7	set	3853
   112  0000                     _TXB2D6	set	3852
   113  0000                     _TXB2D5	set	3851
   114  0000                     _TXB2D4	set	3850
   115  0000                     _TXB2D3	set	3849
   116  0000                     _TXB2D2	set	3848
   117  0000                     _TXB2D1	set	3847
   118  0000                     _TXB2D0	set	3846
   119  0000                     _TXB2DLC	set	3845
   120  0000                     _TXB2SIDL	set	3842
   121  0000                     _TXB2SIDH	set	3841
   122  0000                     _TXB2EIDL	set	3844
   123  0000                     _TXB2EIDH	set	3843
   124  0000                     _TXB2CONbits	set	3840
   125  0000                     _TXB1D7	set	3869
   126  0000                     _TXB1D6	set	3868
   127  0000                     _TXB1D5	set	3867
   128  0000                     _TXB1D4	set	3866
   129  0000                     _TXB1D3	set	3865
   130  0000                     _TXB1D2	set	3864
   131  0000                     _TXB1D1	set	3863
   132  0000                     _TXB1D0	set	3862
   133  0000                     _TXB1DLC	set	3861
   134  0000                     _TXB1SIDL	set	3858
   135  0000                     _TXB1SIDH	set	3857
   136  0000                     _TXB1EIDL	set	3860
   137  0000                     _TXB1EIDH	set	3859
   138  0000                     _TXB1CONbits	set	3856
   139  0000                     _TXB0D7	set	3885
   140  0000                     _TXB0D6	set	3884
   141  0000                     _TXB0D5	set	3883
   142  0000                     _TXB0D4	set	3882
   143  0000                     _TXB0D3	set	3881
   144  0000                     _TXB0D2	set	3880
   145  0000                     _TXB0D1	set	3879
   146  0000                     _TXB0D0	set	3878
   147  0000                     _TXB0DLC	set	3877
   148  0000                     _TXB0SIDL	set	3874
   149  0000                     _TXB0SIDH	set	3873
   150  0000                     _TXB0EIDL	set	3876
   151  0000                     _TXB0EIDH	set	3875
   152  0000                     _TXB0CONbits	set	3872
   153  0000                     _LATAbits	set	3977
   154  0000                     _LATDbits	set	3980
   155  0000                     _TRISAbits	set	3986
   156  0000                     _TRISDbits	set	3989
   157  0000                     _CIOCONbits	set	3952
   158  0000                     _SSPSTATbits	set	4039
   159  0000                     _SSPBUF	set	4041
   160  0000                     _SSPCON1bits	set	4038
   161  0000                     _SSPADD	set	4040
   162  0000                     _SSPCON1	set	4038
   163  0000                     _SSPSTAT	set	4039
   164  0000                     _TRISD	set	3989
   165  0000                     _TRISC	set	3988
   166  0000                     _TRISB	set	3987
   167  0000                     _TRISA	set	3986
   168  0000                     _TRISE	set	3990
   169  0000                     _LATC	set	3979
   170  0000                     _LATB	set	3978
   171  0000                     _LATA	set	3977
   172  0000                     _LATD	set	3980
   173  0000                     _LATE	set	3981
   174  0000                     _COMSTATbits	set	3953
   175  0000                     _RXB0D7	set	3949
   176  0000                     _RXB0D6	set	3948
   177  0000                     _RXB0D5	set	3947
   178  0000                     _RXB0D4	set	3946
   179  0000                     _RXB0D3	set	3945
   180  0000                     _RXB0D2	set	3944
   181  0000                     _RXB0D1	set	3943
   182  0000                     _RXB0D0	set	3942
   183  0000                     _RXB0DLC	set	3941
   184  0000                     _RXB0SIDH	set	3937
   185  0000                     _RXB0EIDL	set	3940
   186  0000                     _RXB0EIDH	set	3939
   187  0000                     _RXB0SIDL	set	3938
   188  0000                     _RXB0CONbits	set	3936
   189  0000                     _PIE5bits	set	3958
   190  0000                     _PIR5bits	set	3959
   191  0000                     _ECANCON	set	3954
   192  0000                     _CANSTAT	set	3950
   193  0000                     _CANCON	set	3951
   194  0000                     _REFOCON	set	3994
   195  0000                     _OSCTUNE	set	3995
   196  0000                     _OSCCON2	set	4050
   197  0000                     _OSCCON	set	4051
   198  0000                     _TRISA5	set	31893
   199  0000                     _TRISC3	set	31907
   200  0000                     _TRISC5	set	31909
   201                           
   202                           ; #config settings
   203  0000                     
   204                           	psect	cinit
   205  0078E0                     __pcinit:
   206                           	opt stack 0
   207  0078E0                     start_initialization:
   208                           	opt stack 0
   209  0078E0                     __initialization:
   210                           	opt stack 0
   211                           
   212                           ; Clear objects allocated to COMRAM (4 bytes)
   213  0078E0  6A11               	clrf	(__pbssCOMRAM+3)& (0+255),c
   214  0078E2  6A10               	clrf	(__pbssCOMRAM+2)& (0+255),c
   215  0078E4  6A0F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   216  0078E6  6A0E               	clrf	__pbssCOMRAM& (0+255),c
   217  0078E8                     end_of_initialization:
   218                           	opt stack 0
   219  0078E8                     __end_of__initialization:
   220                           	opt stack 0
   221  0078E8  0100               	movlb	0
   222  0078EA  EFCF  F03D         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	bssCOMRAM
   225  00000E                     __pbssCOMRAM:
   226                           	opt stack 0
   227  00000E                     _cmd_offset:
   228                           	opt stack 0
   229  00000E                     	ds	2
   230  000010                     _dli:
   231                           	opt stack 0
   232  000010                     	ds	2
   233                           
   234                           	psect	cstackCOMRAM
   235  000001                     __pcstackCOMRAM:
   236                           	opt stack 0
   237  000001                     ??_ECAN_Initialize:
   238  000001                     SPI_Exchange8bit@data:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0x0
   242  000001                     	ds	1
   243  000002                     ?_rd16:
   244                           	opt stack 0
   245  000002                     host_command@command:
   246                           	opt stack 0
   247  000002                     wr8@addr:
   248                           	opt stack 0
   249  000002                     wr16@addr:
   250                           	opt stack 0
   251  000002                     wr32@addr:
   252                           	opt stack 0
   253  000002                     rd16@addr:
   254                           	opt stack 0
   255                           
   256                           ; 3 bytes @ 0x1
   257  000002                     	ds	3
   258  000005                     ??_rd16:
   259  000005                     wr8@value:
   260                           	opt stack 0
   261  000005                     wr16@value:
   262                           	opt stack 0
   263  000005                     wr32@value:
   264                           	opt stack 0
   265                           
   266                           ; 4 bytes @ 0x4
   267  000005                     	ds	1
   268  000006                     ??_wr8:
   269                           
   270                           ; 1 bytes @ 0x5
   271  000006                     	ds	1
   272  000007                     ??_wr16:
   273                           
   274                           ; 1 bytes @ 0x6
   275  000007                     	ds	1
   276  000008                     rd16@temp:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x7
   280  000008                     	ds	1
   281  000009                     ??_wr32:
   282                           
   283                           ; 1 bytes @ 0x8
   284  000009                     	ds	4
   285  00000D                     ??_FT800_Init:
   286                           
   287                           ; 1 bytes @ 0xC
   288  00000D                     	ds	1
   289  00000E                     
   290                           ; 1 bytes @ 0xD
   291 ;;
   292 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   293 ;;
   294 ;; *************** function _main *****************
   295 ;; Defined at:
   296 ;;		line 18 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, status,2, status,0, cstack
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   314 ;;Total ram usage:        0 bytes
   315 ;; Hardware stack levels required when called:    3
   316 ;; This function calls:
   317 ;;		_FT800_Init
   318 ;;		_SYSTEM_Initialize
   319 ;;		_wr32
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text0
   326  007B9E                     __ptext0:
   327                           	opt stack 0
   328  007B9E                     _main:
   329                           	opt stack 28
   330                           
   331                           ;main.c: 21: SYSTEM_Initialize();
   332                           
   333                           ;incstack = 0
   334  007B9E  EC88  F03C         	call	_SYSTEM_Initialize	;wreg free
   335                           
   336                           ;main.c: 22: CIOCONbits.CLKSEL = 1;
   337  007BA2  8070               	bsf	3952,0,c	;volatile
   338                           
   339                           ;main.c: 23: CIOCONbits.ENDRHI = 1;
   340  007BA4  8A70               	bsf	3952,5,c	;volatile
   341                           
   342                           ;main.c: 24: CIOCONbits.TX2SRC = 0;
   343  007BA6  9E70               	bcf	3952,7,c	;volatile
   344                           
   345                           ;main.c: 25: CIOCONbits.TX2EN = 1;
   346  007BA8  8C70               	bsf	3952,6,c	;volatile
   347                           
   348                           ;main.c: 27: do { TRISDbits.TRISD0 = 0; } while(0);
   349  007BAA  9095               	bcf	3989,0,c	;volatile
   350                           
   351                           ;main.c: 29: do { ANCON0bits.ANSEL1 = 0; } while(0);
   352  007BAC  010F               	movlb	15	; () banked
   353  007BAE  935D               	bcf	93,1,b	;volatile
   354                           
   355                           ; BSR set to: 15
   356                           
   357                           ; BSR set to: 15
   358                           
   359                           ;main.c: 30: do { ANCON0bits.ANSEL2 = 0; } while(0);
   360                           
   361                           ; BSR set to: 15
   362  007BB0  010F               	movlb	15	; () banked
   363  007BB2  955D               	bcf	93,2,b	;volatile
   364                           
   365                           ; BSR set to: 15
   366                           
   367                           ; BSR set to: 15
   368                           
   369                           ;main.c: 31: do { TRISAbits.TRISA1 = 0; } while(0);
   370                           
   371                           ; BSR set to: 15
   372  007BB4  9292               	bcf	3986,1,c	;volatile
   373                           
   374                           ; BSR set to: 15
   375                           
   376                           ; BSR set to: 15
   377                           
   378                           ;main.c: 32: do { TRISAbits.TRISA2 = 0; } while(0);
   379                           
   380                           ; BSR set to: 15
   381  007BB6  9492               	bcf	3986,2,c	;volatile
   382                           
   383                           ; BSR set to: 15
   384                           ;main.c: 34: TRISC5 = 0;
   385                           
   386                           ; BSR set to: 15
   387  007BB8  9A94               	bcf	3988,5,c	;volatile
   388                           
   389                           ; BSR set to: 15
   390                           ;main.c: 35: TRISC3 = 0;
   391  007BBA  9694               	bcf	3988,3,c	;volatile
   392                           
   393                           ; BSR set to: 15
   394                           ;main.c: 36: TRISA5 = 1;
   395  007BBC  8A92               	bsf	3986,5,c	;volatile
   396                           
   397                           ; BSR set to: 15
   398                           ;main.c: 38: SSPSTATbits.SMP = 0;
   399  007BBE  9EC7               	bcf	4039,7,c	;volatile
   400                           
   401                           ; BSR set to: 15
   402                           ;main.c: 39: SSPSTATbits.CKE = 1;
   403  007BC0  8CC7               	bsf	4039,6,c	;volatile
   404                           
   405                           ; BSR set to: 15
   406                           ;main.c: 40: SSPCON1bits.SSPEN = 1;
   407  007BC2  8AC6               	bsf	4038,5,c	;volatile
   408                           
   409                           ; BSR set to: 15
   410                           ;main.c: 41: SSPCON1bits.CKP = 1;
   411  007BC4  88C6               	bsf	4038,4,c	;volatile
   412                           
   413                           ; BSR set to: 15
   414                           ;main.c: 42: SSPCON1bits.SSPM = 0b0000;
   415  007BC6  90C6               	bcf	4038,0,c	;volatile
   416  007BC8  92C6               	bcf	4038,1,c	;volatile
   417  007BCA  94C6               	bcf	4038,2,c	;volatile
   418  007BCC  96C6               	bcf	4038,3,c	;volatile
   419                           
   420                           ;main.c: 44: FT800_Init();
   421  007BCE  ECBB  F03E         	call	_FT800_Init	;wreg free
   422                           
   423                           ;main.c: 46: wr32(1048576UL + 0, ((38UL<<24)|(((1)&1UL)<<2)|(((1)&1UL)<<1)|(((1)&1UL)<<0
      +                          )));
   424  007BD2  0E00               	movlw	0
   425  007BD4  6E02               	movwf	wr32@addr,c
   426  007BD6  0E00               	movlw	0
   427  007BD8  6E03               	movwf	wr32@addr+1,c
   428  007BDA  0E10               	movlw	16
   429  007BDC  6E04               	movwf	wr32@addr+2,c
   430  007BDE  0E07               	movlw	7
   431  007BE0  6E05               	movwf	wr32@value,c
   432  007BE2  0E00               	movlw	0
   433  007BE4  6E06               	movwf	wr32@value+1,c
   434  007BE6  0E00               	movlw	0
   435  007BE8  6E07               	movwf	wr32@value+2,c
   436  007BEA  0E26               	movlw	38
   437  007BEC  6E08               	movwf	wr32@value+3,c
   438  007BEE  EC1C  F03D         	call	_wr32	;wreg free
   439                           
   440                           ;main.c: 47: wr32(1048576UL + 4, ((31UL<<24)|(((1UL)&15UL)<<0)));
   441  007BF2  0E04               	movlw	4
   442  007BF4  6E02               	movwf	wr32@addr,c
   443  007BF6  0E00               	movlw	0
   444  007BF8  6E03               	movwf	wr32@addr+1,c
   445  007BFA  0E10               	movlw	16
   446  007BFC  6E04               	movwf	wr32@addr+2,c
   447  007BFE  0E01               	movlw	1
   448  007C00  6E05               	movwf	wr32@value,c
   449  007C02  0E00               	movlw	0
   450  007C04  6E06               	movwf	wr32@value+1,c
   451  007C06  0E00               	movlw	0
   452  007C08  6E07               	movwf	wr32@value+2,c
   453  007C0A  0E1F               	movlw	31
   454  007C0C  6E08               	movwf	wr32@value+3,c
   455  007C0E  EC1C  F03D         	call	_wr32	;wreg free
   456                           
   457                           ;main.c: 48: wr32(1048576UL + 8, ((2UL<<30)|(((220)&511UL)<<21)|(((110)&511UL)<<12)|(((3
      +                          1)&31UL)<<7)|((('F')&127UL)<<0)));
   458  007C12  0E08               	movlw	8
   459  007C14  6E02               	movwf	wr32@addr,c
   460  007C16  0E00               	movlw	0
   461  007C18  6E03               	movwf	wr32@addr+1,c
   462  007C1A  0E10               	movlw	16
   463  007C1C  6E04               	movwf	wr32@addr+2,c
   464  007C1E  0EC6               	movlw	198
   465  007C20  6E05               	movwf	wr32@value,c
   466  007C22  0EEF               	movlw	239
   467  007C24  6E06               	movwf	wr32@value+1,c
   468  007C26  0E86               	movlw	134
   469  007C28  6E07               	movwf	wr32@value+2,c
   470  007C2A  0E9B               	movlw	155
   471  007C2C  6E08               	movwf	wr32@value+3,c
   472  007C2E  EC1C  F03D         	call	_wr32	;wreg free
   473                           
   474                           ;main.c: 49: wr32(1048576UL + 12, ((2UL<<30)|(((244)&511UL)<<21)|(((110)&511UL)<<12)|(((
      +                          31)&31UL)<<7)|((('T')&127UL)<<0)));
   475  007C32  0E0C               	movlw	12
   476  007C34  6E02               	movwf	wr32@addr,c
   477  007C36  0E00               	movlw	0
   478  007C38  6E03               	movwf	wr32@addr+1,c
   479  007C3A  0E10               	movlw	16
   480  007C3C  6E04               	movwf	wr32@addr+2,c
   481  007C3E  0ED4               	movlw	212
   482  007C40  6E05               	movwf	wr32@value,c
   483  007C42  0EEF               	movlw	239
   484  007C44  6E06               	movwf	wr32@value+1,c
   485  007C46  0E86               	movlw	134
   486  007C48  6E07               	movwf	wr32@value+2,c
   487  007C4A  0E9E               	movlw	158
   488  007C4C  6E08               	movwf	wr32@value+3,c
   489  007C4E  EC1C  F03D         	call	_wr32	;wreg free
   490                           
   491                           ;main.c: 50: wr32(1048576UL + 16, ((2UL<<30)|(((270)&511UL)<<21)|(((110)&511UL)<<12)|(((
      +                          31)&31UL)<<7)|((('D')&127UL)<<0)));
   492  007C52  0E10               	movlw	16
   493  007C54  6E02               	movwf	wr32@addr,c
   494  007C56  0E00               	movlw	0
   495  007C58  6E03               	movwf	wr32@addr+1,c
   496  007C5A  0E10               	movlw	16
   497  007C5C  6E04               	movwf	wr32@addr+2,c
   498  007C5E  0EC4               	movlw	196
   499  007C60  6E05               	movwf	wr32@value,c
   500  007C62  0EEF               	movlw	239
   501  007C64  6E06               	movwf	wr32@value+1,c
   502  007C66  0EC6               	movlw	198
   503  007C68  6E07               	movwf	wr32@value+2,c
   504  007C6A  0EA1               	movlw	161
   505  007C6C  6E08               	movwf	wr32@value+3,c
   506  007C6E  EC1C  F03D         	call	_wr32	;wreg free
   507                           
   508                           ;main.c: 51: wr32(1048576UL + 20, ((2UL<<30)|(((299)&511UL)<<21)|(((110)&511UL)<<12)|(((
      +                          31)&31UL)<<7)|((('I')&127UL)<<0)));
   509  007C72  0E14               	movlw	20
   510  007C74  6E02               	movwf	wr32@addr,c
   511  007C76  0E00               	movlw	0
   512  007C78  6E03               	movwf	wr32@addr+1,c
   513  007C7A  0E10               	movlw	16
   514  007C7C  6E04               	movwf	wr32@addr+2,c
   515  007C7E  0EC9               	movlw	201
   516  007C80  6E05               	movwf	wr32@value,c
   517  007C82  0EEF               	movlw	239
   518  007C84  6E06               	movwf	wr32@value+1,c
   519  007C86  0E66               	movlw	102
   520  007C88  6E07               	movwf	wr32@value+2,c
   521  007C8A  0EA5               	movlw	165
   522  007C8C  6E08               	movwf	wr32@value+3,c
   523  007C8E  EC1C  F03D         	call	_wr32	;wreg free
   524                           
   525                           ;main.c: 52: wr32(1048576UL + 24, ((33UL<<24)));
   526  007C92  0E18               	movlw	24
   527  007C94  6E02               	movwf	wr32@addr,c
   528  007C96  0E00               	movlw	0
   529  007C98  6E03               	movwf	wr32@addr+1,c
   530  007C9A  0E10               	movlw	16
   531  007C9C  6E04               	movwf	wr32@addr+2,c
   532  007C9E  0E00               	movlw	0
   533  007CA0  6E05               	movwf	wr32@value,c
   534  007CA2  0E00               	movlw	0
   535  007CA4  6E06               	movwf	wr32@value+1,c
   536  007CA6  0E00               	movlw	0
   537  007CA8  6E07               	movwf	wr32@value+2,c
   538  007CAA  0E21               	movlw	33
   539  007CAC  6E08               	movwf	wr32@value+3,c
   540  007CAE  EC1C  F03D         	call	_wr32	;wreg free
   541                           
   542                           ;main.c: 53: wr32(1048576UL + 28, ((4UL<<24)|(((160)&255UL)<<16)|(((22)&255UL)<<8)|(((22
      +                          )&255UL)<<0)));
   543  007CB2  0E1C               	movlw	28
   544  007CB4  6E02               	movwf	wr32@addr,c
   545  007CB6  0E00               	movlw	0
   546  007CB8  6E03               	movwf	wr32@addr+1,c
   547  007CBA  0E10               	movlw	16
   548  007CBC  6E04               	movwf	wr32@addr+2,c
   549  007CBE  0E16               	movlw	22
   550  007CC0  6E05               	movwf	wr32@value,c
   551  007CC2  0E16               	movlw	22
   552  007CC4  6E06               	movwf	wr32@value+1,c
   553  007CC6  0EA0               	movlw	160
   554  007CC8  6E07               	movwf	wr32@value+2,c
   555  007CCA  0E04               	movlw	4
   556  007CCC  6E08               	movwf	wr32@value+3,c
   557  007CCE  EC1C  F03D         	call	_wr32	;wreg free
   558                           
   559                           ;main.c: 54: wr32(1048576UL + 32, ((13UL<<24)|(((320)&8191UL)<<0)));
   560  007CD2  0E20               	movlw	32
   561  007CD4  6E02               	movwf	wr32@addr,c
   562  007CD6  0E00               	movlw	0
   563  007CD8  6E03               	movwf	wr32@addr+1,c
   564  007CDA  0E10               	movlw	16
   565  007CDC  6E04               	movwf	wr32@addr+2,c
   566  007CDE  0E40               	movlw	64
   567  007CE0  6E05               	movwf	wr32@value,c
   568  007CE2  0E01               	movlw	1
   569  007CE4  6E06               	movwf	wr32@value+1,c
   570  007CE6  0E00               	movlw	0
   571  007CE8  6E07               	movwf	wr32@value+2,c
   572  007CEA  0E0D               	movlw	13
   573  007CEC  6E08               	movwf	wr32@value+3,c
   574  007CEE  EC1C  F03D         	call	_wr32	;wreg free
   575                           
   576                           ;main.c: 55: wr32(1048576UL + 36, ((31UL<<24)|(((2UL)&15UL)<<0)));
   577  007CF2  0E24               	movlw	36
   578  007CF4  6E02               	movwf	wr32@addr,c
   579  007CF6  0E00               	movlw	0
   580  007CF8  6E03               	movwf	wr32@addr+1,c
   581  007CFA  0E10               	movlw	16
   582  007CFC  6E04               	movwf	wr32@addr+2,c
   583  007CFE  0E02               	movlw	2
   584  007D00  6E05               	movwf	wr32@value,c
   585  007D02  0E00               	movlw	0
   586  007D04  6E06               	movwf	wr32@value+1,c
   587  007D06  0E00               	movlw	0
   588  007D08  6E07               	movwf	wr32@value+2,c
   589  007D0A  0E1F               	movlw	31
   590  007D0C  6E08               	movwf	wr32@value+3,c
   591  007D0E  EC1C  F03D         	call	_wr32	;wreg free
   592                           
   593                           ;main.c: 56: wr32(1048576UL + 40, ((2UL<<30)|(((192)&511UL)<<21)|(((133)&511UL)<<12)|(((
      +                          0)&31UL)<<7)|(((0)&127UL)<<0)));
   594  007D12  0E28               	movlw	40
   595  007D14  6E02               	movwf	wr32@addr,c
   596  007D16  0E00               	movlw	0
   597  007D18  6E03               	movwf	wr32@addr+1,c
   598  007D1A  0E10               	movlw	16
   599  007D1C  6E04               	movwf	wr32@addr+2,c
   600  007D1E  0E00               	movlw	0
   601  007D20  6E05               	movwf	wr32@value,c
   602  007D22  0E50               	movlw	80
   603  007D24  6E06               	movwf	wr32@value+1,c
   604  007D26  0E08               	movlw	8
   605  007D28  6E07               	movwf	wr32@value+2,c
   606  007D2A  0E98               	movlw	152
   607  007D2C  6E08               	movwf	wr32@value+3,c
   608  007D2E  EC1C  F03D         	call	_wr32	;wreg free
   609                           
   610                           ;main.c: 57: wr32(1048576UL + 44, ((33UL<<24)));
   611  007D32  0E2C               	movlw	44
   612  007D34  6E02               	movwf	wr32@addr,c
   613  007D36  0E00               	movlw	0
   614  007D38  6E03               	movwf	wr32@addr+1,c
   615  007D3A  0E10               	movlw	16
   616  007D3C  6E04               	movwf	wr32@addr+2,c
   617  007D3E  0E00               	movlw	0
   618  007D40  6E05               	movwf	wr32@value,c
   619  007D42  0E00               	movlw	0
   620  007D44  6E06               	movwf	wr32@value+1,c
   621  007D46  0E00               	movlw	0
   622  007D48  6E07               	movwf	wr32@value+2,c
   623  007D4A  0E21               	movlw	33
   624  007D4C  6E08               	movwf	wr32@value+3,c
   625  007D4E  EC1C  F03D         	call	_wr32	;wreg free
   626                           
   627                           ;main.c: 58: wr32(1048576UL + 48, ((0UL<<24)));
   628  007D52  0E30               	movlw	48
   629  007D54  6E02               	movwf	wr32@addr,c
   630  007D56  0E00               	movlw	0
   631  007D58  6E03               	movwf	wr32@addr+1,c
   632  007D5A  0E10               	movlw	16
   633  007D5C  6E04               	movwf	wr32@addr+2,c
   634  007D5E  0E00               	movlw	0
   635  007D60  6E05               	movwf	wr32@value,c
   636  007D62  0E00               	movlw	0
   637  007D64  6E06               	movwf	wr32@value+1,c
   638  007D66  0E00               	movlw	0
   639  007D68  6E07               	movwf	wr32@value+2,c
   640  007D6A  0E00               	movlw	0
   641  007D6C  6E08               	movwf	wr32@value+3,c
   642  007D6E  EC1C  F03D         	call	_wr32	;wreg free
   643                           
   644                           ;main.c: 79: do { LATDbits.LATD0 = 0; } while(0);
   645  007D72  908C               	bcf	3980,0,c	;volatile
   646  007D74                     l436:
   647                           
   648                           ;main.c: 82: {
   649  007D74  D7FF               	goto	l436
   650  007D76                     __end_of_main:
   651                           	opt stack 0
   652                           
   653 ;; *************** function _SYSTEM_Initialize *****************
   654 ;; Defined at:
   655 ;;		line 111 in file "mcc_generated_files/mcc.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, status,2, status,0, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   673 ;;Total ram usage:        0 bytes
   674 ;; Hardware stack levels used:    1
   675 ;; Hardware stack levels required when called:    1
   676 ;; This function calls:
   677 ;;		_ECAN_Initialize
   678 ;;		_OSCILLATOR_Initialize
   679 ;;		_PIN_MANAGER_Initialize
   680 ;;		_SPI_Initialize
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text1
   687  007910                     __ptext1:
   688                           	opt stack 0
   689  007910                     _SYSTEM_Initialize:
   690                           	opt stack 29
   691                           
   692                           ;mcc.c: 114: PIN_MANAGER_Initialize();
   693                           
   694                           ;incstack = 0
   695  007910  ECB9  F03C         	call	_PIN_MANAGER_Initialize	;wreg free
   696                           
   697                           ;mcc.c: 115: OSCILLATOR_Initialize();
   698  007914  EC7F  F03C         	call	_OSCILLATOR_Initialize	;wreg free
   699                           
   700                           ;mcc.c: 116: SPI_Initialize();
   701  007918  EC69  F03C         	call	_SPI_Initialize	;wreg free
   702                           
   703                           ;mcc.c: 117: ECAN_Initialize();
   704  00791C  EC58  F03D         	call	_ECAN_Initialize	;wreg free
   705  007920  0012               	return		;funcret
   706  007922                     __end_of_SYSTEM_Initialize:
   707                           	opt stack 0
   708                           
   709 ;; *************** function _SPI_Initialize *****************
   710 ;; Defined at:
   711 ;;		line 63 in file "mcc_generated_files/spi.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, status,2
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   729 ;;Total ram usage:        0 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_SYSTEM_Initialize
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text2
   739  0078D2                     __ptext2:
   740                           	opt stack 0
   741  0078D2                     _SPI_Initialize:
   742                           	opt stack 29
   743                           
   744                           ;spi.c: 68: SSPSTAT = 0x00;
   745                           
   746                           ;incstack = 0
   747  0078D2  0E00               	movlw	0
   748  0078D4  6EC7               	movwf	4039,c	;volatile
   749                           
   750                           ;spi.c: 71: SSPCON1 = 0x21;
   751  0078D6  0E21               	movlw	33
   752  0078D8  6EC6               	movwf	4038,c	;volatile
   753                           
   754                           ;spi.c: 74: SSPADD = 0x00;
   755  0078DA  0E00               	movlw	0
   756  0078DC  6EC8               	movwf	4040,c	;volatile
   757  0078DE  0012               	return		;funcret
   758  0078E0                     __end_of_SPI_Initialize:
   759                           	opt stack 0
   760                           
   761 ;; *************** function _PIN_MANAGER_Initialize *****************
   762 ;; Defined at:
   763 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, status,2
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   781 ;;Total ram usage:        0 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; This function calls:
   784 ;;		Nothing
   785 ;; This function is called by:
   786 ;;		_SYSTEM_Initialize
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text3
   791  007972                     __ptext3:
   792                           	opt stack 0
   793  007972                     _PIN_MANAGER_Initialize:
   794                           	opt stack 29
   795                           
   796                           ;pin_manager.c: 56: LATE = 0x00;
   797                           
   798                           ;incstack = 0
   799  007972  0E00               	movlw	0
   800  007974  6E8D               	movwf	3981,c	;volatile
   801                           
   802                           ;pin_manager.c: 57: LATD = 0x00;
   803  007976  0E00               	movlw	0
   804  007978  6E8C               	movwf	3980,c	;volatile
   805                           
   806                           ;pin_manager.c: 58: LATA = 0x07;
   807  00797A  0E07               	movlw	7
   808  00797C  6E89               	movwf	3977,c	;volatile
   809                           
   810                           ;pin_manager.c: 59: LATB = 0x00;
   811  00797E  0E00               	movlw	0
   812  007980  6E8A               	movwf	3978,c	;volatile
   813                           
   814                           ;pin_manager.c: 60: LATC = 0x00;
   815  007982  0E00               	movlw	0
   816  007984  6E8B               	movwf	3979,c	;volatile
   817                           
   818                           ;pin_manager.c: 65: TRISE = 0x07;
   819  007986  0E07               	movlw	7
   820  007988  6E96               	movwf	3990,c	;volatile
   821                           
   822                           ;pin_manager.c: 66: TRISA = 0xE9;
   823  00798A  0EE9               	movlw	233
   824  00798C  6E92               	movwf	3986,c	;volatile
   825                           
   826                           ;pin_manager.c: 67: TRISB = 0xFB;
   827  00798E  0EFB               	movlw	251
   828  007990  6E93               	movwf	3987,c	;volatile
   829                           
   830                           ;pin_manager.c: 68: TRISC = 0xD7;
   831  007992  0ED7               	movlw	215
   832  007994  6E94               	movwf	3988,c	;volatile
   833                           
   834                           ;pin_manager.c: 69: TRISD = 0xFE;
   835  007996  0EFE               	movlw	254
   836  007998  6E95               	movwf	3989,c	;volatile
   837                           
   838                           ;pin_manager.c: 74: ANCON0 = 0xF8;
   839  00799A  0EF8               	movlw	248
   840  00799C  010F               	movlb	15	; () banked
   841  00799E  6F5D               	movwf	93,b	;volatile
   842                           
   843                           ;pin_manager.c: 75: ANCON1 = 0x77;
   844  0079A0  0E77               	movlw	119
   845  0079A2  010F               	movlb	15	; () banked
   846  0079A4  6F5C               	movwf	92,b	;volatile
   847                           
   848                           ; BSR set to: 15
   849                           ;pin_manager.c: 80: WPUB = 0xFF;
   850  0079A6  010F               	movlb	15	; () banked
   851  0079A8  695B               	setf	91,b	;volatile
   852                           
   853                           ; BSR set to: 15
   854  0079AA  0012               	return		;funcret
   855  0079AC                     __end_of_PIN_MANAGER_Initialize:
   856                           	opt stack 0
   857                           
   858 ;; *************** function _OSCILLATOR_Initialize *****************
   859 ;; Defined at:
   860 ;;		line 120 in file "mcc_generated_files/mcc.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, status,2
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   878 ;;Total ram usage:        0 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_SYSTEM_Initialize
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text4
   888  0078FE                     __ptext4:
   889                           	opt stack 0
   890  0078FE                     _OSCILLATOR_Initialize:
   891                           	opt stack 29
   892                           
   893                           ;mcc.c: 123: OSCCON = 0x60;
   894                           
   895                           ; BSR set to: 15
   896                           ;incstack = 0
   897  0078FE  0E60               	movlw	96
   898  007900  6ED3               	movwf	4051,c	;volatile
   899                           
   900                           ;mcc.c: 125: OSCCON2 = 0x00;
   901  007902  0E00               	movlw	0
   902  007904  6ED2               	movwf	4050,c	;volatile
   903                           
   904                           ;mcc.c: 127: OSCTUNE = 0x00;
   905  007906  0E00               	movlw	0
   906  007908  6E9B               	movwf	3995,c	;volatile
   907                           
   908                           ;mcc.c: 129: REFOCON = 0x00;
   909  00790A  0E00               	movlw	0
   910  00790C  6E9A               	movwf	3994,c	;volatile
   911  00790E  0012               	return		;funcret
   912  007910                     __end_of_OSCILLATOR_Initialize:
   913                           	opt stack 0
   914                           
   915 ;; *************** function _ECAN_Initialize *****************
   916 ;; Defined at:
   917 ;;		line 63 in file "mcc_generated_files/ecan.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   935 ;;Total ram usage:        1 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_SYSTEM_Initialize
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text5
   945  007AB0                     __ptext5:
   946                           	opt stack 0
   947  007AB0                     _ECAN_Initialize:
   948                           	opt stack 29
   949                           
   950                           ;ecan.c: 65: CANCON = 0x80;
   951                           
   952                           ;incstack = 0
   953  007AB0  0E80               	movlw	128
   954  007AB2  6E6F               	movwf	3951,c	;volatile
   955  007AB4                     l1137:
   956  007AB4  506E               	movf	3950,w,c	;volatile
   957  007AB6  0BE0               	andlw	224
   958  007AB8  0A80               	xorlw	128
   959  007ABA  A4D8               	btfss	status,2,c
   960  007ABC  D7FB               	goto	l1137
   961                           
   962                           ;ecan.c: 71: ECANCON = 0x00;
   963  007ABE  0E00               	movlw	0
   964  007AC0  6E72               	movwf	3954,c	;volatile
   965                           
   966                           ;ecan.c: 88: RXM0EIDH = 0x00;
   967  007AC2  0E00               	movlw	0
   968  007AC4  010E               	movlb	14	; () banked
   969  007AC6  6FFA               	movwf	250,b	;volatile
   970                           
   971                           ;ecan.c: 89: RXM0EIDL = 0x00;
   972  007AC8  0E00               	movlw	0
   973  007ACA  010E               	movlb	14	; () banked
   974  007ACC  6FFB               	movwf	251,b	;volatile
   975                           
   976                           ;ecan.c: 90: RXM0SIDH = 0x00;
   977  007ACE  0E00               	movlw	0
   978  007AD0  010E               	movlb	14	; () banked
   979  007AD2  6FF8               	movwf	248,b	;volatile
   980                           
   981                           ;ecan.c: 91: RXM0SIDL = 0x00;
   982  007AD4  0E00               	movlw	0
   983  007AD6  010E               	movlb	14	; () banked
   984  007AD8  6FF9               	movwf	249,b	;volatile
   985                           
   986                           ; BSR set to: 14
   987                           ;ecan.c: 93: RXM1EIDH = 0xFF;
   988  007ADA  010E               	movlb	14	; () banked
   989  007ADC  69FE               	setf	254,b	;volatile
   990                           
   991                           ; BSR set to: 14
   992                           ;ecan.c: 94: RXM1EIDL = 0xFF;
   993  007ADE  010E               	movlb	14	; () banked
   994  007AE0  69FF               	setf	255,b	;volatile
   995                           
   996                           ; BSR set to: 14
   997                           ;ecan.c: 95: RXM1SIDH = 0xFF;
   998  007AE2  010E               	movlb	14	; () banked
   999  007AE4  69FC               	setf	252,b	;volatile
  1000                           
  1001                           ; BSR set to: 14
  1002                           ;ecan.c: 96: RXM1SIDL = 0xFF;
  1003  007AE6  010E               	movlb	14	; () banked
  1004  007AE8  69FD               	setf	253,b	;volatile
  1005                           
  1006                           ;ecan.c: 102: RXF0EIDH = 0x00;
  1007  007AEA  0E00               	movlw	0
  1008  007AEC  010E               	movlb	14	; () banked
  1009  007AEE  6FE2               	movwf	226,b	;volatile
  1010                           
  1011                           ;ecan.c: 103: RXF0EIDL = 0x00;
  1012  007AF0  0E00               	movlw	0
  1013  007AF2  010E               	movlb	14	; () banked
  1014  007AF4  6FE3               	movwf	227,b	;volatile
  1015                           
  1016                           ;ecan.c: 104: RXF0SIDH = 0x88;
  1017  007AF6  0E88               	movlw	136
  1018  007AF8  010E               	movlb	14	; () banked
  1019  007AFA  6FE0               	movwf	224,b	;volatile
  1020                           
  1021                           ;ecan.c: 105: RXF0SIDL = 0x80;
  1022  007AFC  0E80               	movlw	128
  1023  007AFE  010E               	movlb	14	; () banked
  1024  007B00  6FE1               	movwf	225,b	;volatile
  1025                           
  1026                           ;ecan.c: 107: RXF1EIDH = 0x00;
  1027  007B02  0E00               	movlw	0
  1028  007B04  010E               	movlb	14	; () banked
  1029  007B06  6FE6               	movwf	230,b	;volatile
  1030                           
  1031                           ;ecan.c: 108: RXF1EIDL = 0x00;
  1032  007B08  0E00               	movlw	0
  1033  007B0A  010E               	movlb	14	; () banked
  1034  007B0C  6FE7               	movwf	231,b	;volatile
  1035                           
  1036                           ;ecan.c: 109: RXF1SIDH = 0xCC;
  1037  007B0E  0ECC               	movlw	204
  1038  007B10  010E               	movlb	14	; () banked
  1039  007B12  6FE4               	movwf	228,b	;volatile
  1040                           
  1041                           ;ecan.c: 110: RXF1SIDL = 0xC0;
  1042  007B14  0EC0               	movlw	192
  1043  007B16  010E               	movlb	14	; () banked
  1044  007B18  6FE5               	movwf	229,b	;volatile
  1045                           
  1046                           ;ecan.c: 112: RXF2EIDH = 0x00;
  1047  007B1A  0E00               	movlw	0
  1048  007B1C  010E               	movlb	14	; () banked
  1049  007B1E  6FEA               	movwf	234,b	;volatile
  1050                           
  1051                           ;ecan.c: 113: RXF2EIDL = 0x00;
  1052  007B20  0E00               	movlw	0
  1053  007B22  010E               	movlb	14	; () banked
  1054  007B24  6FEB               	movwf	235,b	;volatile
  1055                           
  1056                           ;ecan.c: 114: RXF2SIDH = 0x00;
  1057  007B26  0E00               	movlw	0
  1058  007B28  010E               	movlb	14	; () banked
  1059  007B2A  6FE8               	movwf	232,b	;volatile
  1060                           
  1061                           ;ecan.c: 115: RXF2SIDL = 0x00;
  1062  007B2C  0E00               	movlw	0
  1063  007B2E  010E               	movlb	14	; () banked
  1064  007B30  6FE9               	movwf	233,b	;volatile
  1065                           
  1066                           ;ecan.c: 117: RXF3EIDH = 0x00;
  1067  007B32  0E00               	movlw	0
  1068  007B34  010E               	movlb	14	; () banked
  1069  007B36  6FEE               	movwf	238,b	;volatile
  1070                           
  1071                           ;ecan.c: 118: RXF3EIDL = 0x00;
  1072  007B38  0E00               	movlw	0
  1073  007B3A  010E               	movlb	14	; () banked
  1074  007B3C  6FEF               	movwf	239,b	;volatile
  1075                           
  1076                           ;ecan.c: 119: RXF3SIDH = 0x00;
  1077  007B3E  0E00               	movlw	0
  1078  007B40  010E               	movlb	14	; () banked
  1079  007B42  6FEC               	movwf	236,b	;volatile
  1080                           
  1081                           ;ecan.c: 120: RXF3SIDL = 0x00;
  1082  007B44  0E00               	movlw	0
  1083  007B46  010E               	movlb	14	; () banked
  1084  007B48  6FED               	movwf	237,b	;volatile
  1085                           
  1086                           ;ecan.c: 122: RXF4EIDH = 0x00;
  1087  007B4A  0E00               	movlw	0
  1088  007B4C  010E               	movlb	14	; () banked
  1089  007B4E  6FF2               	movwf	242,b	;volatile
  1090                           
  1091                           ;ecan.c: 123: RXF4EIDL = 0x00;
  1092  007B50  0E00               	movlw	0
  1093  007B52  010E               	movlb	14	; () banked
  1094  007B54  6FF3               	movwf	243,b	;volatile
  1095                           
  1096                           ;ecan.c: 124: RXF4SIDH = 0x00;
  1097  007B56  0E00               	movlw	0
  1098  007B58  010E               	movlb	14	; () banked
  1099  007B5A  6FF0               	movwf	240,b	;volatile
  1100                           
  1101                           ;ecan.c: 125: RXF4SIDL = 0x00;
  1102  007B5C  0E00               	movlw	0
  1103  007B5E  010E               	movlb	14	; () banked
  1104  007B60  6FF1               	movwf	241,b	;volatile
  1105                           
  1106                           ;ecan.c: 127: RXF5EIDH = 0x00;
  1107  007B62  0E00               	movlw	0
  1108  007B64  010E               	movlb	14	; () banked
  1109  007B66  6FF6               	movwf	246,b	;volatile
  1110                           
  1111                           ;ecan.c: 128: RXF5EIDL = 0x00;
  1112  007B68  0E00               	movlw	0
  1113  007B6A  010E               	movlb	14	; () banked
  1114  007B6C  6FF7               	movwf	247,b	;volatile
  1115                           
  1116                           ;ecan.c: 129: RXF5SIDH = 0x00;
  1117  007B6E  0E00               	movlw	0
  1118  007B70  010E               	movlb	14	; () banked
  1119  007B72  6FF4               	movwf	244,b	;volatile
  1120                           
  1121                           ;ecan.c: 130: RXF5SIDL = 0x00;
  1122  007B74  0E00               	movlw	0
  1123  007B76  010E               	movlb	14	; () banked
  1124  007B78  6FF5               	movwf	245,b	;volatile
  1125                           
  1126                           ;ecan.c: 145: BRGCON1 = 0x00;
  1127  007B7A  0E00               	movlw	0
  1128  007B7C  010E               	movlb	14	; () banked
  1129  007B7E  6F43               	movwf	67,b	;volatile
  1130                           
  1131                           ;ecan.c: 146: BRGCON2 = 0x98;
  1132  007B80  0E98               	movlw	152
  1133  007B82  010E               	movlb	14	; () banked
  1134  007B84  6F44               	movwf	68,b	;volatile
  1135                           
  1136                           ;ecan.c: 147: BRGCON3 = 0x01;
  1137  007B86  0E01               	movlw	1
  1138  007B88  010E               	movlb	14	; () banked
  1139  007B8A  6F45               	movwf	69,b	;volatile
  1140                           
  1141                           ;ecan.c: 149: CANCON = 0x00;
  1142  007B8C  0E00               	movlw	0
  1143  007B8E  6E6F               	movwf	3951,c	;volatile
  1144  007B90                     l1149:
  1145  007B90  CF6E F001          	movff	3950,??_ECAN_Initialize	;volatile
  1146  007B94  0EE0               	movlw	224
  1147  007B96  1601               	andwf	??_ECAN_Initialize,f,c
  1148  007B98  B4D8               	btfsc	status,2,c
  1149  007B9A  0012               	return	
  1150  007B9C  D7F9               	goto	l1149
  1151  007B9E                     __end_of_ECAN_Initialize:
  1152                           	opt stack 0
  1153                           status	equ	0xFD8
  1154                           
  1155 ;; *************** function _FT800_Init *****************
  1156 ;; Defined at:
  1157 ;;		line 139 in file "Gue/FT800.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1175 ;;Total ram usage:        1 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    2
  1178 ;; This function calls:
  1179 ;;		_host_command
  1180 ;;		_rd16
  1181 ;;		_wr16
  1182 ;;		_wr32
  1183 ;;		_wr8
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text6
  1190  007D76                     __ptext6:
  1191                           	opt stack 0
  1192  007D76                     _FT800_Init:
  1193                           	opt stack 28
  1194                           
  1195                           ;FT800.c: 141: LATAbits.LATA2 = 0;
  1196                           
  1197                           ;incstack = 0
  1198  007D76  9489               	bcf	3977,2,c	;volatile
  1199                           
  1200                           ;FT800.c: 142: _delay((unsigned long)((20)*(16000000/4000.0)));
  1201  007D78  0E68               	movlw	104
  1202  007D7A  6E0D               	movwf	??_FT800_Init& (0+255),c
  1203  007D7C  0EE4               	movlw	228
  1204  007D7E                     u347:
  1205  007D7E  2EE8               	decfsz	wreg,f,c
  1206  007D80  D7FE               	bra	u347
  1207  007D82  2E0D               	decfsz	??_FT800_Init& (0+255),f,c
  1208  007D84  D7FC               	bra	u347
  1209  007D86  D000               	nop2	
  1210                           
  1211                           ;FT800.c: 143: LATAbits.LATA2 = 1;
  1212  007D88  8489               	bsf	3977,2,c	;volatile
  1213                           
  1214                           ;FT800.c: 144: _delay((unsigned long)((20)*(16000000/4000.0)));
  1215  007D8A  0E68               	movlw	104
  1216  007D8C  6E0D               	movwf	??_FT800_Init& (0+255),c
  1217  007D8E  0EE4               	movlw	228
  1218  007D90                     u357:
  1219  007D90  2EE8               	decfsz	wreg,f,c
  1220  007D92  D7FE               	bra	u357
  1221  007D94  2E0D               	decfsz	??_FT800_Init& (0+255),f,c
  1222  007D96  D7FC               	bra	u357
  1223  007D98  D000               	nop2	
  1224                           
  1225                           ;FT800.c: 146: host_command(0x00);
  1226  007D9A  0E00               	movlw	0
  1227  007D9C  EC91  F03C         	call	_host_command
  1228                           
  1229                           ;FT800.c: 148: host_command(0x44);
  1230  007DA0  0E44               	movlw	68
  1231  007DA2  EC91  F03C         	call	_host_command
  1232                           
  1233                           ;FT800.c: 150: host_command(0x62);
  1234  007DA6  0E62               	movlw	98
  1235  007DA8  EC91  F03C         	call	_host_command
  1236                           
  1237                           ;FT800.c: 153: wr16(1057840UL, 480);
  1238  007DAC  0E30               	movlw	48
  1239  007DAE  6E02               	movwf	wr16@addr,c
  1240  007DB0  0E24               	movlw	36
  1241  007DB2  6E03               	movwf	wr16@addr+1,c
  1242  007DB4  0E10               	movlw	16
  1243  007DB6  6E04               	movwf	wr16@addr+2,c
  1244  007DB8  0E01               	movlw	1
  1245  007DBA  6E06               	movwf	wr16@value+1,c
  1246  007DBC  0EE0               	movlw	224
  1247  007DBE  6E05               	movwf	wr16@value,c
  1248  007DC0  ECD6  F03C         	call	_wr16	;wreg free
  1249                           
  1250                           ;FT800.c: 154: wr16(1057860UL, 272);
  1251  007DC4  0E44               	movlw	68
  1252  007DC6  6E02               	movwf	wr16@addr,c
  1253  007DC8  0E24               	movlw	36
  1254  007DCA  6E03               	movwf	wr16@addr+1,c
  1255  007DCC  0E10               	movlw	16
  1256  007DCE  6E04               	movwf	wr16@addr+2,c
  1257  007DD0  0E01               	movlw	1
  1258  007DD2  6E06               	movwf	wr16@value+1,c
  1259  007DD4  0E10               	movlw	16
  1260  007DD6  6E05               	movwf	wr16@value,c
  1261  007DD8  ECD6  F03C         	call	_wr16	;wreg free
  1262                           
  1263                           ;FT800.c: 155: wr16(1057832UL, 525);
  1264  007DDC  0E28               	movlw	40
  1265  007DDE  6E02               	movwf	wr16@addr,c
  1266  007DE0  0E24               	movlw	36
  1267  007DE2  6E03               	movwf	wr16@addr+1,c
  1268  007DE4  0E10               	movlw	16
  1269  007DE6  6E04               	movwf	wr16@addr+2,c
  1270  007DE8  0E02               	movlw	2
  1271  007DEA  6E06               	movwf	wr16@value+1,c
  1272  007DEC  0E0D               	movlw	13
  1273  007DEE  6E05               	movwf	wr16@value,c
  1274  007DF0  ECD6  F03C         	call	_wr16	;wreg free
  1275                           
  1276                           ;FT800.c: 156: wr16(1057844UL, 0);
  1277  007DF4  0E34               	movlw	52
  1278  007DF6  6E02               	movwf	wr16@addr,c
  1279  007DF8  0E24               	movlw	36
  1280  007DFA  6E03               	movwf	wr16@addr+1,c
  1281  007DFC  0E10               	movlw	16
  1282  007DFE  6E04               	movwf	wr16@addr+2,c
  1283  007E00  0E00               	movlw	0
  1284  007E02  6E06               	movwf	wr16@value+1,c
  1285  007E04  0E00               	movlw	0
  1286  007E06  6E05               	movwf	wr16@value,c
  1287  007E08  ECD6  F03C         	call	_wr16	;wreg free
  1288                           
  1289                           ;FT800.c: 157: wr16(1057848UL, 41);
  1290  007E0C  0E38               	movlw	56
  1291  007E0E  6E02               	movwf	wr16@addr,c
  1292  007E10  0E24               	movlw	36
  1293  007E12  6E03               	movwf	wr16@addr+1,c
  1294  007E14  0E10               	movlw	16
  1295  007E16  6E04               	movwf	wr16@addr+2,c
  1296  007E18  0E00               	movlw	0
  1297  007E1A  6E06               	movwf	wr16@value+1,c
  1298  007E1C  0E29               	movlw	41
  1299  007E1E  6E05               	movwf	wr16@value,c
  1300  007E20  ECD6  F03C         	call	_wr16	;wreg free
  1301                           
  1302                           ;FT800.c: 158: wr16(1057836UL, 43);
  1303  007E24  0E2C               	movlw	44
  1304  007E26  6E02               	movwf	wr16@addr,c
  1305  007E28  0E24               	movlw	36
  1306  007E2A  6E03               	movwf	wr16@addr+1,c
  1307  007E2C  0E10               	movlw	16
  1308  007E2E  6E04               	movwf	wr16@addr+2,c
  1309  007E30  0E00               	movlw	0
  1310  007E32  6E06               	movwf	wr16@value+1,c
  1311  007E34  0E2B               	movlw	43
  1312  007E36  6E05               	movwf	wr16@value,c
  1313  007E38  ECD6  F03C         	call	_wr16	;wreg free
  1314                           
  1315                           ;FT800.c: 159: wr16(1057852UL, 286);
  1316  007E3C  0E3C               	movlw	60
  1317  007E3E  6E02               	movwf	wr16@addr,c
  1318  007E40  0E24               	movlw	36
  1319  007E42  6E03               	movwf	wr16@addr+1,c
  1320  007E44  0E10               	movlw	16
  1321  007E46  6E04               	movwf	wr16@addr+2,c
  1322  007E48  0E01               	movlw	1
  1323  007E4A  6E06               	movwf	wr16@value+1,c
  1324  007E4C  0E1E               	movlw	30
  1325  007E4E  6E05               	movwf	wr16@value,c
  1326  007E50  ECD6  F03C         	call	_wr16	;wreg free
  1327                           
  1328                           ;FT800.c: 160: wr16(1057864UL, 0);
  1329  007E54  0E48               	movlw	72
  1330  007E56  6E02               	movwf	wr16@addr,c
  1331  007E58  0E24               	movlw	36
  1332  007E5A  6E03               	movwf	wr16@addr+1,c
  1333  007E5C  0E10               	movlw	16
  1334  007E5E  6E04               	movwf	wr16@addr+2,c
  1335  007E60  0E00               	movlw	0
  1336  007E62  6E06               	movwf	wr16@value+1,c
  1337  007E64  0E00               	movlw	0
  1338  007E66  6E05               	movwf	wr16@value,c
  1339  007E68  ECD6  F03C         	call	_wr16	;wreg free
  1340                           
  1341                           ;FT800.c: 161: wr16(1057868UL, 10);
  1342  007E6C  0E4C               	movlw	76
  1343  007E6E  6E02               	movwf	wr16@addr,c
  1344  007E70  0E24               	movlw	36
  1345  007E72  6E03               	movwf	wr16@addr+1,c
  1346  007E74  0E10               	movlw	16
  1347  007E76  6E04               	movwf	wr16@addr+2,c
  1348  007E78  0E00               	movlw	0
  1349  007E7A  6E06               	movwf	wr16@value+1,c
  1350  007E7C  0E0A               	movlw	10
  1351  007E7E  6E05               	movwf	wr16@value,c
  1352  007E80  ECD6  F03C         	call	_wr16	;wreg free
  1353                           
  1354                           ;FT800.c: 162: wr16(1057856UL, 12);
  1355  007E84  0E40               	movlw	64
  1356  007E86  6E02               	movwf	wr16@addr,c
  1357  007E88  0E24               	movlw	36
  1358  007E8A  6E03               	movwf	wr16@addr+1,c
  1359  007E8C  0E10               	movlw	16
  1360  007E8E  6E04               	movwf	wr16@addr+2,c
  1361  007E90  0E00               	movlw	0
  1362  007E92  6E06               	movwf	wr16@value+1,c
  1363  007E94  0E0C               	movlw	12
  1364  007E96  6E05               	movwf	wr16@value,c
  1365  007E98  ECD6  F03C         	call	_wr16	;wreg free
  1366                           
  1367                           ;FT800.c: 163: wr8(1057892UL, 0);
  1368  007E9C  0E64               	movlw	100
  1369  007E9E  6E02               	movwf	wr8@addr,c
  1370  007EA0  0E24               	movlw	36
  1371  007EA2  6E03               	movwf	wr8@addr+1,c
  1372  007EA4  0E10               	movlw	16
  1373  007EA6  6E04               	movwf	wr8@addr+2,c
  1374  007EA8  0E00               	movlw	0
  1375  007EAA  6E05               	movwf	wr8@value,c
  1376  007EAC  EC9E  F03C         	call	_wr8	;wreg free
  1377                           
  1378                           ;FT800.c: 164: wr8(1057884UL, 0);
  1379  007EB0  0E5C               	movlw	92
  1380  007EB2  6E02               	movwf	wr8@addr,c
  1381  007EB4  0E24               	movlw	36
  1382  007EB6  6E03               	movwf	wr8@addr+1,c
  1383  007EB8  0E10               	movlw	16
  1384  007EBA  6E04               	movwf	wr8@addr+2,c
  1385  007EBC  0E00               	movlw	0
  1386  007EBE  6E05               	movwf	wr8@value,c
  1387  007EC0  EC9E  F03C         	call	_wr8	;wreg free
  1388                           
  1389                           ;FT800.c: 165: wr16(1057880UL, 0x01B6);
  1390  007EC4  0E58               	movlw	88
  1391  007EC6  6E02               	movwf	wr16@addr,c
  1392  007EC8  0E24               	movlw	36
  1393  007ECA  6E03               	movwf	wr16@addr+1,c
  1394  007ECC  0E10               	movlw	16
  1395  007ECE  6E04               	movwf	wr16@addr+2,c
  1396  007ED0  0E01               	movlw	1
  1397  007ED2  6E06               	movwf	wr16@value+1,c
  1398  007ED4  0EB6               	movlw	182
  1399  007ED6  6E05               	movwf	wr16@value,c
  1400  007ED8  ECD6  F03C         	call	_wr16	;wreg free
  1401                           
  1402                           ;FT800.c: 166: wr8(1057888UL, 0x0000);
  1403  007EDC  0E60               	movlw	96
  1404  007EDE  6E02               	movwf	wr8@addr,c
  1405  007EE0  0E24               	movlw	36
  1406  007EE2  6E03               	movwf	wr8@addr+1,c
  1407  007EE4  0E10               	movlw	16
  1408  007EE6  6E04               	movwf	wr8@addr+2,c
  1409  007EE8  0E00               	movlw	0
  1410  007EEA  6E05               	movwf	wr8@value,c
  1411  007EEC  EC9E  F03C         	call	_wr8	;wreg free
  1412                           
  1413                           ;FT800.c: 169: wr8(1057896UL, 1);
  1414  007EF0  0E68               	movlw	104
  1415  007EF2  6E02               	movwf	wr8@addr,c
  1416  007EF4  0E24               	movlw	36
  1417  007EF6  6E03               	movwf	wr8@addr+1,c
  1418  007EF8  0E10               	movlw	16
  1419  007EFA  6E04               	movwf	wr8@addr+2,c
  1420  007EFC  0E01               	movlw	1
  1421  007EFE  6E05               	movwf	wr8@value,c
  1422  007F00  EC9E  F03C         	call	_wr8	;wreg free
  1423                           
  1424                           ;FT800.c: 171: wr8(1057876UL, 0);
  1425  007F04  0E54               	movlw	84
  1426  007F06  6E02               	movwf	wr8@addr,c
  1427  007F08  0E24               	movlw	36
  1428  007F0A  6E03               	movwf	wr8@addr+1,c
  1429  007F0C  0E10               	movlw	16
  1430  007F0E  6E04               	movwf	wr8@addr+2,c
  1431  007F10  0E00               	movlw	0
  1432  007F12  6E05               	movwf	wr8@value,c
  1433  007F14  EC9E  F03C         	call	_wr8	;wreg free
  1434                           
  1435                           ;FT800.c: 178: wr32(1048576UL+0,((2UL<<24)|(((255)&255UL)<<16)|(((255)&255UL)<<8)|(((0)&
      +                          255UL)<<0)));
  1436  007F18  0E00               	movlw	0
  1437  007F1A  6E02               	movwf	wr32@addr,c
  1438  007F1C  0E00               	movlw	0
  1439  007F1E  6E03               	movwf	wr32@addr+1,c
  1440  007F20  0E10               	movlw	16
  1441  007F22  6E04               	movwf	wr32@addr+2,c
  1442  007F24  0E00               	movlw	0
  1443  007F26  6E05               	movwf	wr32@value,c
  1444  007F28  0EFF               	movlw	255
  1445  007F2A  6E06               	movwf	wr32@value+1,c
  1446  007F2C  0EFF               	movlw	255
  1447  007F2E  6E07               	movwf	wr32@value+2,c
  1448  007F30  0E02               	movlw	2
  1449  007F32  6E08               	movwf	wr32@value+3,c
  1450  007F34  EC1C  F03D         	call	_wr32	;wreg free
  1451                           
  1452                           ;FT800.c: 179: wr32(1048576UL+4,((38UL<<24)|(((1)&1UL)<<2)|(((1)&1UL)<<1)|(((1)&1UL)<<0)
      +                          ));
  1453  007F38  0E04               	movlw	4
  1454  007F3A  6E02               	movwf	wr32@addr,c
  1455  007F3C  0E00               	movlw	0
  1456  007F3E  6E03               	movwf	wr32@addr+1,c
  1457  007F40  0E10               	movlw	16
  1458  007F42  6E04               	movwf	wr32@addr+2,c
  1459  007F44  0E07               	movlw	7
  1460  007F46  6E05               	movwf	wr32@value,c
  1461  007F48  0E00               	movlw	0
  1462  007F4A  6E06               	movwf	wr32@value+1,c
  1463  007F4C  0E00               	movlw	0
  1464  007F4E  6E07               	movwf	wr32@value+2,c
  1465  007F50  0E26               	movlw	38
  1466  007F52  6E08               	movwf	wr32@value+3,c
  1467  007F54  EC1C  F03D         	call	_wr32	;wreg free
  1468                           
  1469                           ;FT800.c: 180: wr32(1048576UL+8,((0UL<<24)));
  1470  007F58  0E08               	movlw	8
  1471  007F5A  6E02               	movwf	wr32@addr,c
  1472  007F5C  0E00               	movlw	0
  1473  007F5E  6E03               	movwf	wr32@addr+1,c
  1474  007F60  0E10               	movlw	16
  1475  007F62  6E04               	movwf	wr32@addr+2,c
  1476  007F64  0E00               	movlw	0
  1477  007F66  6E05               	movwf	wr32@value,c
  1478  007F68  0E00               	movlw	0
  1479  007F6A  6E06               	movwf	wr32@value+1,c
  1480  007F6C  0E00               	movlw	0
  1481  007F6E  6E07               	movwf	wr32@value+2,c
  1482  007F70  0E00               	movlw	0
  1483  007F72  6E08               	movwf	wr32@value+3,c
  1484  007F74  EC1C  F03D         	call	_wr32	;wreg free
  1485                           
  1486                           ;FT800.c: 182: wr8(1057872UL,2UL);
  1487  007F78  0E50               	movlw	80
  1488  007F7A  6E02               	movwf	wr8@addr,c
  1489  007F7C  0E24               	movlw	36
  1490  007F7E  6E03               	movwf	wr8@addr+1,c
  1491  007F80  0E10               	movlw	16
  1492  007F82  6E04               	movwf	wr8@addr+2,c
  1493  007F84  0E02               	movlw	2
  1494  007F86  6E05               	movwf	wr8@value,c
  1495  007F88  EC9E  F03C         	call	_wr8	;wreg free
  1496                           
  1497                           ;FT800.c: 187: wr8(1057932UL, 0xfc);
  1498  007F8C  0E8C               	movlw	140
  1499  007F8E  6E02               	movwf	wr8@addr,c
  1500  007F90  0E24               	movlw	36
  1501  007F92  6E03               	movwf	wr8@addr+1,c
  1502  007F94  0E10               	movlw	16
  1503  007F96  6E04               	movwf	wr8@addr+2,c
  1504  007F98  0EFC               	movlw	252
  1505  007F9A  6E05               	movwf	wr8@value,c
  1506  007F9C  EC9E  F03C         	call	_wr8	;wreg free
  1507                           
  1508                           ;FT800.c: 188: wr8(1057936UL, 0xff);
  1509  007FA0  0E90               	movlw	144
  1510  007FA2  6E02               	movwf	wr8@addr,c
  1511  007FA4  0E24               	movlw	36
  1512  007FA6  6E03               	movwf	wr8@addr+1,c
  1513  007FA8  0E10               	movlw	16
  1514  007FAA  6E04               	movwf	wr8@addr+2,c
  1515  007FAC  0EFF               	movlw	255
  1516  007FAE  6E05               	movwf	wr8@value,c
  1517  007FB0  EC9E  F03C         	call	_wr8	;wreg free
  1518                           
  1519                           ;FT800.c: 190: wr8(1057900UL,5);
  1520  007FB4  0E6C               	movlw	108
  1521  007FB6  6E02               	movwf	wr8@addr,c
  1522  007FB8  0E24               	movlw	36
  1523  007FBA  6E03               	movwf	wr8@addr+1,c
  1524  007FBC  0E10               	movlw	16
  1525  007FBE  6E04               	movwf	wr8@addr+2,c
  1526  007FC0  0E05               	movlw	5
  1527  007FC2  6E05               	movwf	wr8@value,c
  1528  007FC4  EC9E  F03C         	call	_wr8	;wreg free
  1529                           
  1530                           ;FT800.c: 192: cmd_offset=rd16(1058024UL);while(rd16(1058020UL) != cmd_offset);
  1531  007FC8  0EE8               	movlw	232
  1532  007FCA  6E02               	movwf	rd16@addr,c
  1533  007FCC  0E24               	movlw	36
  1534  007FCE  6E03               	movwf	rd16@addr+1,c
  1535  007FD0  0E10               	movlw	16
  1536  007FD2  6E04               	movwf	rd16@addr+2,c
  1537  007FD4  ECF4  F03C         	call	_rd16	;wreg free
  1538  007FD8  C002  F00E         	movff	?_rd16,_cmd_offset
  1539  007FDC  C003  F00F         	movff	?_rd16+1,_cmd_offset+1
  1540  007FE0                     l1809:
  1541  007FE0  0EE4               	movlw	228
  1542  007FE2  6E02               	movwf	rd16@addr,c
  1543  007FE4  0E24               	movlw	36
  1544  007FE6  6E03               	movwf	rd16@addr+1,c
  1545  007FE8  0E10               	movlw	16
  1546  007FEA  6E04               	movwf	rd16@addr+2,c
  1547  007FEC  ECF4  F03C         	call	_rd16	;wreg free
  1548  007FF0  500E               	movf	_cmd_offset,w,c
  1549  007FF2  1802               	xorwf	?_rd16,w,c
  1550  007FF4  E1F5               	bnz	l1809
  1551  007FF6  500F               	movf	_cmd_offset+1,w,c
  1552  007FF8  1803               	xorwf	?_rd16+1,w,c
  1553  007FFA  B4D8               	btfsc	status,2,c
  1554  007FFC  0012               	return	
  1555  007FFE  D7F0               	goto	l1809
  1556  008000                     __end_of_FT800_Init:
  1557                           	opt stack 0
  1558                           wreg	equ	0xFE8
  1559                           status	equ	0xFD8
  1560                           
  1561 ;; *************** function _wr8 *****************
  1562 ;; Defined at:
  1563 ;;		line 16 in file "Gue/FT800.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  addr            3    1[COMRAM] unsigned um
  1566 ;;  value           1    4[COMRAM] unsigned char 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1578 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1580 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1581 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1582 ;;Total ram usage:        7 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    1
  1585 ;; This function calls:
  1586 ;;		_SPI_Exchange8bit
  1587 ;; This function is called by:
  1588 ;;		_FT800_Init
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text7
  1593  00793C                     __ptext7:
  1594                           	opt stack 0
  1595  00793C                     _wr8:
  1596                           	opt stack 28
  1597                           
  1598                           ;FT800.c: 17: LATAbits.LATA1 = 0;
  1599                           
  1600                           ;incstack = 0
  1601  00793C  9289               	bcf	3977,1,c	;volatile
  1602                           
  1603                           ;FT800.c: 18: SPI_Exchange8bit(0x80 | (addr >> 16));
  1604  00793E  5004               	movf	wr8@addr+2,w,c
  1605  007940  0980               	iorlw	128
  1606  007942  EC77  F03C         	call	_SPI_Exchange8bit
  1607                           
  1608                           ;FT800.c: 19: SPI_Exchange8bit(addr >> 8);
  1609  007946  C002  F006         	movff	wr8@addr,??_wr8
  1610  00794A  C003  F007         	movff	wr8@addr+1,??_wr8+1
  1611  00794E  C004  F008         	movff	wr8@addr+2,??_wr8+2
  1612  007952  C007  F006         	movff	??_wr8+1,??_wr8
  1613  007956  C008  F007         	movff	??_wr8+2,??_wr8+1
  1614  00795A  6A08               	clrf	??_wr8+2,c
  1615  00795C  5006               	movf	??_wr8,w,c
  1616  00795E  EC77  F03C         	call	_SPI_Exchange8bit
  1617                           
  1618                           ;FT800.c: 20: SPI_Exchange8bit(addr);
  1619  007962  5002               	movf	wr8@addr,w,c
  1620  007964  EC77  F03C         	call	_SPI_Exchange8bit
  1621                           
  1622                           ;FT800.c: 21: SPI_Exchange8bit(value);
  1623  007968  5005               	movf	wr8@value,w,c
  1624  00796A  EC77  F03C         	call	_SPI_Exchange8bit
  1625                           
  1626                           ;FT800.c: 22: LATAbits.LATA1 = 1;
  1627  00796E  8289               	bsf	3977,1,c	;volatile
  1628  007970  0012               	return		;funcret
  1629  007972                     __end_of_wr8:
  1630                           	opt stack 0
  1631                           wreg	equ	0xFE8
  1632                           status	equ	0xFD8
  1633                           
  1634 ;; *************** function _wr32 *****************
  1635 ;; Defined at:
  1636 ;;		line 34 in file "Gue/FT800.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  addr            3    1[COMRAM] unsigned um
  1639 ;;  value           4    4[COMRAM] unsigned long 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1651 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1653 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1654 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1655 ;;Total ram usage:       11 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    1
  1658 ;; This function calls:
  1659 ;;		_SPI_Exchange8bit
  1660 ;; This function is called by:
  1661 ;;		_main
  1662 ;;		_FT800_Init
  1663 ;;		_cmd
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text8
  1668  007A38                     __ptext8:
  1669                           	opt stack 0
  1670  007A38                     _wr32:
  1671                           	opt stack 29
  1672                           
  1673                           ;FT800.c: 35: LATAbits.LATA1 = 0;
  1674                           
  1675                           ;incstack = 0
  1676  007A38  9289               	bcf	3977,1,c	;volatile
  1677                           
  1678                           ;FT800.c: 36: SPI_Exchange8bit(0x80 | (addr >> 16));
  1679  007A3A  5004               	movf	wr32@addr+2,w,c
  1680  007A3C  0980               	iorlw	128
  1681  007A3E  EC77  F03C         	call	_SPI_Exchange8bit
  1682                           
  1683                           ;FT800.c: 37: SPI_Exchange8bit(addr >> 8);
  1684  007A42  C002  F009         	movff	wr32@addr,??_wr32
  1685  007A46  C003  F00A         	movff	wr32@addr+1,??_wr32+1
  1686  007A4A  C004  F00B         	movff	wr32@addr+2,??_wr32+2
  1687  007A4E  C00A  F009         	movff	??_wr32+1,??_wr32
  1688  007A52  C00B  F00A         	movff	??_wr32+2,??_wr32+1
  1689  007A56  6A0B               	clrf	??_wr32+2,c
  1690  007A58  5009               	movf	??_wr32,w,c
  1691  007A5A  EC77  F03C         	call	_SPI_Exchange8bit
  1692                           
  1693                           ;FT800.c: 38: SPI_Exchange8bit(addr);
  1694  007A5E  5002               	movf	wr32@addr,w,c
  1695  007A60  EC77  F03C         	call	_SPI_Exchange8bit
  1696                           
  1697                           ;FT800.c: 39: SPI_Exchange8bit(((value) & 0xFFFF) & 0xFF);SPI_Exchange8bit((((value) & 0
      +                          xFFFF) >> 8) & 0xFF);SPI_Exchange8bit((((value) >> 16) & 0xFFFF) & 0xFF);SPI_Exchange8bi
      +                          t(((((value) >> 16) & 0xFFFF) >> 8) & 0xFF);
  1698  007A64  5005               	movf	wr32@value,w,c
  1699  007A66  EC77  F03C         	call	_SPI_Exchange8bit
  1700  007A6A  5006               	movf	wr32@value+1,w,c
  1701  007A6C  EC77  F03C         	call	_SPI_Exchange8bit
  1702  007A70  5007               	movf	wr32@value+2,w,c
  1703  007A72  EC77  F03C         	call	_SPI_Exchange8bit
  1704  007A76  C005  F009         	movff	wr32@value,??_wr32
  1705  007A7A  C006  F00A         	movff	wr32@value+1,??_wr32+1
  1706  007A7E  C007  F00B         	movff	wr32@value+2,??_wr32+2
  1707  007A82  C008  F00C         	movff	wr32@value+3,??_wr32+3
  1708  007A86  0E11               	movlw	17
  1709  007A88  D005               	goto	u320
  1710  007A8A                     u325:
  1711  007A8A  90D8               	bcf	status,0,c
  1712  007A8C  320C               	rrcf	??_wr32+3,f,c
  1713  007A8E  320B               	rrcf	??_wr32+2,f,c
  1714  007A90  320A               	rrcf	??_wr32+1,f,c
  1715  007A92  3209               	rrcf	??_wr32,f,c
  1716  007A94                     u320:
  1717  007A94  2EE8               	decfsz	wreg,f,c
  1718  007A96  D7F9               	goto	u325
  1719  007A98  C00A  F009         	movff	??_wr32+1,??_wr32
  1720  007A9C  C00B  F00A         	movff	??_wr32+2,??_wr32+1
  1721  007AA0  C00C  F00B         	movff	??_wr32+3,??_wr32+2
  1722  007AA4  6A0C               	clrf	??_wr32+3,c
  1723  007AA6  5009               	movf	??_wr32,w,c
  1724  007AA8  EC77  F03C         	call	_SPI_Exchange8bit
  1725                           
  1726                           ;FT800.c: 40: LATAbits.LATA1 = 1;
  1727  007AAC  8289               	bsf	3977,1,c	;volatile
  1728  007AAE  0012               	return		;funcret
  1729  007AB0                     __end_of_wr32:
  1730                           	opt stack 0
  1731                           wreg	equ	0xFE8
  1732                           status	equ	0xFD8
  1733                           
  1734 ;; *************** function _wr16 *****************
  1735 ;; Defined at:
  1736 ;;		line 25 in file "Gue/FT800.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  addr            3    1[COMRAM] unsigned um
  1739 ;;  value           2    4[COMRAM] unsigned int 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1751 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1753 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1755 ;;Total ram usage:        8 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    1
  1758 ;; This function calls:
  1759 ;;		_SPI_Exchange8bit
  1760 ;; This function is called by:
  1761 ;;		_FT800_Init
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text9
  1766  0079AC                     __ptext9:
  1767                           	opt stack 0
  1768  0079AC                     _wr16:
  1769                           	opt stack 28
  1770                           
  1771                           ;FT800.c: 26: LATAbits.LATA1 = 0;
  1772                           
  1773                           ;incstack = 0
  1774  0079AC  9289               	bcf	3977,1,c	;volatile
  1775                           
  1776                           ;FT800.c: 27: SPI_Exchange8bit(0x80 | (addr >> 16));
  1777  0079AE  5004               	movf	wr16@addr+2,w,c
  1778  0079B0  0980               	iorlw	128
  1779  0079B2  EC77  F03C         	call	_SPI_Exchange8bit
  1780                           
  1781                           ;FT800.c: 28: SPI_Exchange8bit(addr >> 8);
  1782  0079B6  C002  F007         	movff	wr16@addr,??_wr16
  1783  0079BA  C003  F008         	movff	wr16@addr+1,??_wr16+1
  1784  0079BE  C004  F009         	movff	wr16@addr+2,??_wr16+2
  1785  0079C2  C008  F007         	movff	??_wr16+1,??_wr16
  1786  0079C6  C009  F008         	movff	??_wr16+2,??_wr16+1
  1787  0079CA  6A09               	clrf	??_wr16+2,c
  1788  0079CC  5007               	movf	??_wr16,w,c
  1789  0079CE  EC77  F03C         	call	_SPI_Exchange8bit
  1790                           
  1791                           ;FT800.c: 29: SPI_Exchange8bit(addr);
  1792  0079D2  5002               	movf	wr16@addr,w,c
  1793  0079D4  EC77  F03C         	call	_SPI_Exchange8bit
  1794                           
  1795                           ;FT800.c: 30: SPI_Exchange8bit((value) & 0xFF);SPI_Exchange8bit(((value) >> 8) & 0xFF);
  1796  0079D8  5005               	movf	wr16@value,w,c
  1797  0079DA  EC77  F03C         	call	_SPI_Exchange8bit
  1798  0079DE  5006               	movf	wr16@value+1,w,c
  1799  0079E0  EC77  F03C         	call	_SPI_Exchange8bit
  1800                           
  1801                           ;FT800.c: 31: LATAbits.LATA1 = 1;
  1802  0079E4  8289               	bsf	3977,1,c	;volatile
  1803  0079E6  0012               	return		;funcret
  1804  0079E8                     __end_of_wr16:
  1805                           	opt stack 0
  1806                           wreg	equ	0xFE8
  1807                           status	equ	0xFD8
  1808                           
  1809 ;; *************** function _rd16 *****************
  1810 ;; Defined at:
  1811 ;;		line 72 in file "Gue/FT800.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  addr            3    1[COMRAM] unsigned um
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  temp            1    7[COMRAM] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2    1[COMRAM] unsigned int 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1825 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1827 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1828 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1829 ;;Total ram usage:        7 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    1
  1832 ;; This function calls:
  1833 ;;		_SPI_Exchange8bit
  1834 ;; This function is called by:
  1835 ;;		_FT800_Init
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text10
  1840  0079E8                     __ptext10:
  1841                           	opt stack 0
  1842  0079E8                     _rd16:
  1843                           	opt stack 28
  1844                           
  1845                           ;FT800.c: 73: LATAbits.LATA1 = 0;
  1846                           
  1847                           ;incstack = 0
  1848  0079E8  9289               	bcf	3977,1,c	;volatile
  1849                           
  1850                           ;FT800.c: 74: SPI_Exchange8bit(addr >> 16);
  1851  0079EA  5004               	movf	rd16@addr+2,w,c
  1852  0079EC  EC77  F03C         	call	_SPI_Exchange8bit
  1853                           
  1854                           ;FT800.c: 75: SPI_Exchange8bit(addr >> 8);
  1855  0079F0  C002  F005         	movff	rd16@addr,??_rd16
  1856  0079F4  C003  F006         	movff	rd16@addr+1,??_rd16+1
  1857  0079F8  C004  F007         	movff	rd16@addr+2,??_rd16+2
  1858  0079FC  C006  F005         	movff	??_rd16+1,??_rd16
  1859  007A00  C007  F006         	movff	??_rd16+2,??_rd16+1
  1860  007A04  6A07               	clrf	??_rd16+2,c
  1861  007A06  5005               	movf	??_rd16,w,c
  1862  007A08  EC77  F03C         	call	_SPI_Exchange8bit
  1863                           
  1864                           ;FT800.c: 76: SPI_Exchange8bit(addr);
  1865  007A0C  5002               	movf	rd16@addr,w,c
  1866  007A0E  EC77  F03C         	call	_SPI_Exchange8bit
  1867                           
  1868                           ;FT800.c: 77: SPI_Exchange8bit(0);
  1869  007A12  0E00               	movlw	0
  1870  007A14  EC77  F03C         	call	_SPI_Exchange8bit
  1871                           
  1872                           ;FT800.c: 78: SPI_Exchange8bit(0);
  1873  007A18  0E00               	movlw	0
  1874  007A1A  EC77  F03C         	call	_SPI_Exchange8bit
  1875                           
  1876                           ;FT800.c: 79: ft_uint8_t temp = SSPBUF;
  1877  007A1E  CFC9 F008          	movff	4041,rd16@temp	;volatile
  1878                           
  1879                           ;FT800.c: 80: SPI_Exchange8bit(0);
  1880  007A22  0E00               	movlw	0
  1881  007A24  EC77  F03C         	call	_SPI_Exchange8bit
  1882                           
  1883                           ;FT800.c: 81: LATAbits.LATA1 = 1;
  1884  007A28  8289               	bsf	3977,1,c	;volatile
  1885                           
  1886                           ;FT800.c: 82: return ((ft_uint16_t)SSPBUF << 8) | temp;
  1887  007A2A  50C9               	movf	4041,w,c	;volatile
  1888  007A2C  6E05               	movwf	??_rd16& (0+255),c
  1889  007A2E  5008               	movf	rd16@temp,w,c
  1890  007A30  6E02               	movwf	?_rd16,c
  1891  007A32  C005  F003         	movff	??_rd16,?_rd16+1
  1892  007A36  0012               	return	
  1893  007A38                     __end_of_rd16:
  1894                           	opt stack 0
  1895                           wreg	equ	0xFE8
  1896                           status	equ	0xFD8
  1897                           
  1898 ;; *************** function _host_command *****************
  1899 ;; Defined at:
  1900 ;;		line 8 in file "Gue/FT800.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  command         1    wreg     unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  command         1    1[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1918 ;;Total ram usage:        1 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    1
  1921 ;; This function calls:
  1922 ;;		_SPI_Exchange8bit
  1923 ;; This function is called by:
  1924 ;;		_FT800_Init
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text11
  1929  007922                     __ptext11:
  1930                           	opt stack 0
  1931  007922                     _host_command:
  1932                           	opt stack 28
  1933                           
  1934                           ;incstack = 0
  1935                           ;host_command@command stored from wreg
  1936  007922  6E02               	movwf	host_command@command,c
  1937                           
  1938                           ;FT800.c: 9: LATAbits.LATA1 = 0;
  1939  007924  9289               	bcf	3977,1,c	;volatile
  1940                           
  1941                           ;FT800.c: 10: SPI_Exchange8bit(command);
  1942  007926  5002               	movf	host_command@command,w,c
  1943  007928  EC77  F03C         	call	_SPI_Exchange8bit
  1944                           
  1945                           ;FT800.c: 11: SPI_Exchange8bit(0);
  1946  00792C  0E00               	movlw	0
  1947  00792E  EC77  F03C         	call	_SPI_Exchange8bit
  1948                           
  1949                           ;FT800.c: 12: SPI_Exchange8bit(0);
  1950  007932  0E00               	movlw	0
  1951  007934  EC77  F03C         	call	_SPI_Exchange8bit
  1952                           
  1953                           ;FT800.c: 13: LATAbits.LATA1 = 1;
  1954  007938  8289               	bsf	3977,1,c	;volatile
  1955  00793A  0012               	return		;funcret
  1956  00793C                     __end_of_host_command:
  1957                           	opt stack 0
  1958                           wreg	equ	0xFE8
  1959                           status	equ	0xFD8
  1960                           
  1961 ;; *************** function _SPI_Exchange8bit *****************
  1962 ;; Defined at:
  1963 ;;		line 77 in file "mcc_generated_files/spi.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  data            1    wreg     unsigned char 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  data            1    0[COMRAM] unsigned char 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      unsigned char 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1980 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1981 ;;Total ram usage:        1 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_host_command
  1987 ;;		_wr8
  1988 ;;		_wr16
  1989 ;;		_wr32
  1990 ;;		_rd16
  1991 ;;		_SPI_Exchange8bitBuffer
  1992 ;;		_wr8s
  1993 ;;		_rd8
  1994 ;;		_rd32
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text12
  1999  0078EE                     __ptext12:
  2000                           	opt stack 0
  2001  0078EE                     _SPI_Exchange8bit:
  2002                           	opt stack 29
  2003                           
  2004                           ;incstack = 0
  2005                           ;SPI_Exchange8bit@data stored from wreg
  2006  0078EE  6E01               	movwf	SPI_Exchange8bit@data,c
  2007                           
  2008                           ;spi.c: 80: SSPCON1bits.WCOL = 0;
  2009  0078F0  9EC6               	bcf	4038,7,c	;volatile
  2010                           
  2011                           ;spi.c: 82: SSPBUF = data;
  2012  0078F2  C001  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  2013  0078F6                     l361:
  2014  0078F6  A0C7               	btfss	4039,0,c	;volatile
  2015  0078F8  D7FE               	goto	l361
  2016                           
  2017                           ;spi.c: 86: }
  2018                           ;spi.c: 88: return (SSPBUF);
  2019  0078FA  50C9               	movf	4041,w,c	;volatile
  2020  0078FC  0012               	return		;funcret
  2021  0078FE                     __end_of_SPI_Exchange8bit:
  2022                           	opt stack 0
  2023  0000                     wreg	equ	0xFE8
  2024                           status	equ	0xFD8
  2025                           wreg	equ	0xFE8
  2026                           status	equ	0xFD8
  2027                           
  2028                           	psect	rparam
  2029  0000                     wreg	equ	0xFE8
  2030                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_FT800_Init
    _SYSTEM_Initialize->_ECAN_Initialize
    _FT800_Init->_wr32
    _wr8->_SPI_Exchange8bit
    _wr32->_SPI_Exchange8bit
    _wr16->_SPI_Exchange8bit
    _rd16->_SPI_Exchange8bit
    _host_command->_SPI_Exchange8bit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9060
                         _FT800_Init
                  _SYSTEM_Initialize
                               _wr32
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ECAN_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _FT800_Init                                           1     1      0    6307
                                             12 COMRAM     1     1      0
                       _host_command
                               _rd16
                               _wr16
                               _wr32
                                _wr8
 ---------------------------------------------------------------------------------
 (2) _wr8                                                  7     3      4    1471
                                              1 COMRAM     7     3      4
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (1) _wr32                                                11     4      7    2753
                                              1 COMRAM    11     4      7
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _wr16                                                 8     3      5    1797
                                              1 COMRAM     8     3      5
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _rd16                                                 7     4      3     256
                                              1 COMRAM     7     4      3
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _host_command                                         1     1      0      30
                                              1 COMRAM     1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _SPI_Exchange8bit                                     1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FT800_Init
     _host_command
       _SPI_Exchange8bit
     _rd16
       _SPI_Exchange8bit
     _wr16
       _SPI_Exchange8bit
     _wr32
       _SPI_Exchange8bit
     _wr8
       _SPI_Exchange8bit
   _SYSTEM_Initialize
     _ECAN_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
   _wr32
     _SPI_Exchange8bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      D      11       1       17.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11       6        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Jul 09 16:21:01 2017

                 _SPI_Initialize 78D2                      _SSPSTATbits 000FC7  
       __size_of_ECAN_Initialize 00EE                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                            l361 78F6                              l436 7D74  
                   __CFG_CPB$OFF 000000                              u320 7A94  
                            u325 7A8A                     __CFG_CPD$OFF 000000  
                            u347 7D7E                              u357 7D90  
                            _dli 0010                              _wr8 793C  
                            wreg 000FE8              __size_of_FT800_Init 028A  
                           l1137 7AB4                             l1149 7B90  
                           l1809 7FE0                             ?_wr8 0002  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D                             _WPUB 000F5B  
                           _rd16 79E8                             _wr16 79AC  
                           _wr32 7A38                             _main 7B9E  
                           start 0000                    __CFG_IESO$OFF 000000  
                  __CFG_FOSC$HS1 000000           __end_of_SPI_Initialize 78E0  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                          ??_wr8 0006   __size_of_OSCILLATOR_Initialize 0012  
  __end_of_OSCILLATOR_Initialize 7910                            ?_rd16 0002  
                          ?_wr16 0002                            ?_wr32 0002  
                          ?_main 0001                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000                            status 000FD8  
                ?_SPI_Initialize 0001                  __initialization 78E0  
                   __end_of_rd16 7A38                     __end_of_wr16 79E8  
                   __end_of_wr32 7AB0                     __end_of_main 7D76  
                         ??_rd16 0005                           ??_wr32 0009  
                         ??_wr16 0007                           ??_main 000E  
                  __activetblptr 000000                   __CFG_RETEN$OFF 000000  
              ??_ECAN_Initialize 0001         __end_of_SPI_Exchange8bit 78FE  
                         _CANCON 000F6F                           _ANCON0 000F5D  
                         _ANCON1 000F5C                  __CFG_BBSIZ$BB2K 000000  
                 __CFG_WDTEN$OFF 000000                           _OSCCON 000FD3  
                         _RXB0D0 000F66                           _RXB0D1 000F67  
                         _RXB0D2 000F68                           _RXB0D3 000F69  
                         _RXB0D4 000F6A                           _RXB1D0 000F36  
                         _RXB0D5 000F6B                           _RXB1D1 000F37  
                         _RXB0D6 000F6C                           _RXB1D2 000F38  
                         _RXB0D7 000F6D                           _RXB1D3 000F39  
                         _RXB1D4 000F3A                           _RXB1D5 000F3B  
                         _RXB1D6 000F3C                           _RXB1D7 000F3D  
                         _TXB0D0 000F26                           _TXB0D1 000F27  
                         _TXB0D2 000F28                           _TXB0D3 000F29  
                         _TXB0D4 000F2A                           _TXB1D0 000F16  
                         _TXB0D5 000F2B                           _TXB1D1 000F17  
                         _TXB0D6 000F2C                           _TXB1D2 000F18  
                         _TXB0D7 000F2D                           _TXB1D3 000F19  
                         _TXB1D4 000F1A                           _TXB2D0 000F06  
                         _TXB1D5 000F1B                           _TXB2D1 000F07  
                         _TXB1D6 000F1C                           _TXB2D2 000F08  
                         _TXB1D7 000F1D                           _TXB2D3 000F09  
                         _TXB2D4 000F0A                           _TXB2D5 000F0B  
                         _TXB2D6 000F0C                           _TXB2D7 000F0D  
                         _SSPADD 000FC8                           _TRISA5 007C95  
                         _TRISC3 007CA3                           _TRISC5 007CA5  
                         _SSPBUF 000FC9                   __CFG_XINST$OFF 000000  
                   ??_FT800_Init 000D                   __CFG_STVREN$ON 000000  
             __end_of_FT800_Init 8000                _SYSTEM_Initialize 7910  
                  ?_host_command 0001                       __accesstop 0060  
        __end_of__initialization 78E8               ?_SYSTEM_Initialize 0001  
                  ___rparam_used 000001                   __pcstackCOMRAM 0001  
            ??_SYSTEM_Initialize 0002        __end_of_SYSTEM_Initialize 7922  
                 ??_host_command 0002                  __CFG_PLLCFG$OFF 000000  
                     _cmd_offset 000E                          _ECANCON 000F72  
                        _CANSTAT 000F6E                          _BRGCON1 000E43  
                        _BRGCON2 000E44                          _BRGCON3 000E45  
               __CFG_CANMX$PORTB 000000                          _REFOCON 000F9A  
                        _OSCCON2 000FD2                          _RXB0DLC 000F65  
                        _RXB1DLC 000F35                          _OSCTUNE 000F9B  
                        _TXB0DLC 000F25                          _TXB1DLC 000F15  
                        _TXB2DLC 000F05                          _SSPCON1 000FC6  
                        _SSPSTAT 000FC7                 ??_SPI_Initialize 0001  
                __CFG_PWRTEN$OFF 000000                          __Hparam 0000  
                        __Lparam 0000                  _ECAN_Initialize 7AB0  
                        __pcinit 78E0                          __ramtop 0F00  
                        __ptext0 7B9E                          __ptext1 7910  
                        __ptext2 78D2                          __ptext3 7972  
                        __ptext4 78FE                          __ptext5 7AB0  
                        __ptext6 7D76                          __ptext7 793C  
                        __ptext8 7A38                          __ptext9 79AC  
          _OSCILLATOR_Initialize 78FE                     __size_of_wr8 0036  
       ??_PIN_MANAGER_Initialize 0001                __CFG_MSSPMSK$MSK7 000000  
              ?_SPI_Exchange8bit 0001       __size_of_SYSTEM_Initialize 0012  
           end_of_initialization 78E8                          wr8@addr 0002  
             ??_SPI_Exchange8bit 0001             SPI_Exchange8bit@data 0001  
           __end_of_host_command 793C                        _TRISAbits 000F92  
                      _TRISDbits 000F95                __CFG_SOSCSEL$HIGH 000000  
        __end_of_ECAN_Initialize 7B9E           ?_OSCILLATOR_Initialize 0001  
            start_initialization 78E0  __size_of_PIN_MANAGER_Initialize 003A  
                    __end_of_wr8 7972                      __pbssCOMRAM 000E  
               ?_ECAN_Initialize 0001           _PIN_MANAGER_Initialize 7972  
          __size_of_host_command 001A                      _COMSTATbits 000F71  
                   _host_command 7922                         _LATAbits 000F89  
                       _LATDbits 000F8C                         _PIE5bits 000F76  
                       _PIR5bits 000F77        __size_of_SPI_Exchange8bit 0010  
                       _RXB0EIDH 000F63                         _RXB0EIDL 000F64  
                       _RXB1EIDH 000F33                         _RXB1EIDL 000F34  
                       _RXB0SIDH 000F61                         _RXB0SIDL 000F62  
                       _RXB1SIDH 000F31                         _RXF0EIDH 000EE2  
                       _RXB1SIDL 000F32                         _RXF0EIDL 000EE3  
                       _RXF1EIDH 000EE6                         _RXF1EIDL 000EE7  
                       _RXF2EIDH 000EEA                         _RXF2EIDL 000EEB  
                       _RXF3EIDH 000EEE                         _RXF3EIDL 000EEF  
                       _RXF4EIDH 000EF2                         _RXF4EIDL 000EF3  
                       _RXF5EIDH 000EF6                         _RXF5EIDL 000EF7  
                       _RXF0SIDH 000EE0                         _RXF0SIDL 000EE1  
                       _TXB0EIDH 000F23                         _RXF1SIDH 000EE4  
                       _TXB0EIDL 000F24                         _RXF1SIDL 000EE5  
                       _TXB1EIDH 000F13                         _RXF2SIDH 000EE8  
                       _TXB1EIDL 000F14                         _RXF2SIDL 000EE9  
                       _TXB2EIDH 000F03                         _RXF3SIDH 000EEC  
                       _TXB2EIDL 000F04                         _RXF3SIDL 000EED  
                       _RXF4SIDH 000EF0                         _RXF4SIDL 000EF1  
                       _RXF5SIDH 000EF4                         _RXF5SIDL 000EF5  
                       _RXM0EIDH 000EFA                         _RXM0EIDL 000EFB  
                       _TXB0SIDH 000F21                         _RXM1EIDH 000EFE  
                       _TXB0SIDL 000F22                         _RXM1EIDL 000EFF  
                       _TXB1SIDH 000F11                         _TXB1SIDL 000F12  
                       _TXB2SIDH 000F01                         _TXB2SIDL 000F02  
                      wr32@value 0005                        wr16@value 0005  
                       _RXM0SIDH 000EF8                         _RXM0SIDL 000EF9  
                       _RXM1SIDH 000EFC                         _RXM1SIDL 000EFD  
                     _ANCON0bits 000F5D                         __Hrparam 0000  
                     _FT800_Init 7D76                         __Lrparam 0000  
             __CFG_BOREN$SBORDIS 000000          __size_of_SPI_Initialize 000E  
        ??_OSCILLATOR_Initialize 0001                       _CIOCONbits 000F70  
                       rd16@addr 0002                         rd16@temp 0008  
                       __ptext10 79E8                         __ptext11 7922  
                       __ptext12 78EE                    __size_of_rd16 0050  
                  __size_of_wr16 003C                    __size_of_wr32 0078  
                  __size_of_main 01D8                         wr32@addr 0002  
                       wr16@addr 0002              __CFG_INTOSCSEL$HIGH 000000  
                    _RXB0CONbits 000F60                      _RXB1CONbits 000F30  
                       wr8@value 0005          ?_PIN_MANAGER_Initialize 0001  
                    _TXB0CONbits 000F20                      _TXB1CONbits 000F10  
                    _TXB2CONbits 000F00                      ?_FT800_Init 0001  
               _SPI_Exchange8bit 78EE               __CFG_WDTPS$1048576 000000  
            host_command@command 0002                      _SSPCON1bits 000FC6  
 __end_of_PIN_MANAGER_Initialize 79AC              __CFG_BORPWR$ZPBORMV 000000  
